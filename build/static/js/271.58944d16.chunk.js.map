{"version":3,"file":"static/js/271.58944d16.chunk.js","mappings":"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","sources":["admin/assets/icons/index.js","admin/routes.js","admin/containers/TheFooter.js","admin/containers/TheContent.js","admin/containers/TheHeader.js","admin/containers/TheHeaderDropdown.js","admin/containers/TheSidebar.js","admin/views/users/UserEdit.js"],"sourcesContent":["import {\n    cibSkype,\n    cibFacebook,\n    cibTwitter,\n    cibLinkedin,\n    cibFlickr,\n    cibTumblr,\n    cibXing,\n    cibGithub,\n    cibStackoverflow,\n    cibYoutube,\n    cibDribbble,\n    cibInstagram,\n    cibPinterest,\n    cibVk,\n    cibYahoo,\n    cibBehance,\n    cibReddit,\n    cibVimeo,\n    cibCcMastercard,\n    cibCcVisa,\n    cibStripe,\n    cibPaypal,\n    cibGooglePay,\n    cibCcAmex,\n} from '@coreui/icons';\nimport {cifUs, cifBr, cifIn, cifFr, cifEs, cifPl} from '@coreui/icons';\nimport {\n    cilAlignCenter,\n    cilAlignLeft,\n    cilAlignRight,\n    cilApplicationsSettings,\n    cilArrowRight,\n    cilArrowTop,\n    cilAsterisk,\n    cilBan,\n    cilBasket,\n    cilBell,\n    cilBold,\n    cilBookmark,\n    cilCalculator,\n    cilCalendar,\n    cilCloudDownload,\n    cilChartPie,\n    cilCheck,\n    cilChevronBottom,\n    cilChevronLeft,\n    cilChevronRight,\n    cilChevronTop,\n    cilCircle,\n    cilCheckCircle,\n    cilCode,\n    cilCommentSquare,\n    cilCreditCard,\n    cilCursor,\n    cilCursorMove,\n    cilDrop,\n    cilDollar,\n    cilEnvelopeClosed,\n    cilEnvelopeLetter,\n    cilEnvelopeOpen,\n    cilEuro,\n    cilGlobeAlt,\n    cilGrid,\n    cilFile,\n    cilFullscreen,\n    cilFullscreenExit,\n    cilGraph,\n    cilHome,\n    cilInbox,\n    cilIndentDecrease,\n    cilIndentIncrease,\n    cilInputPower,\n    cilItalic,\n    cilJustifyCenter,\n    cilJustifyLeft,\n    cilLaptop,\n    cilLayers,\n    cilLightbulb,\n    cilList,\n    cilListNumbered,\n    cilListRich,\n    cilLocationPin,\n    cilLockLocked,\n    cilMagnifyingGlass,\n    cilMap,\n    cilMoon,\n    cilNotes,\n    cilOptions,\n    cilPaperclip,\n    cilPaperPlane,\n    cilPencil,\n    cilPeople,\n    cilPhone,\n    cilPrint,\n    cilPuzzle,\n    cilSave,\n    cilScrubber,\n    cilSettings,\n    cilShare,\n    cilShareAll,\n    cilShareBoxed,\n    cilShieldAlt,\n    cilSpeech,\n    cilSpeedometer,\n    cilSpreadsheet,\n    cilStar,\n    cilSun,\n    cilTags,\n    cilTask,\n    cilTrash,\n    cilUnderline,\n    cilUser,\n    cilUserFemale,\n    cilUserFollow,\n    cilUserUnfollow,\n    cilX,\n    cilXCircle,\n    cilWarning,\n} from '@coreui/icons';\n\nexport const icons = Object.assign(\n    {},\n    {\n        cilAlignCenter,\n        cilAlignLeft,\n        cilAlignRight,\n        cilApplicationsSettings,\n        cilArrowRight,\n        cilArrowTop,\n        cilAsterisk,\n        cilBan,\n        cilBasket,\n        cilBell,\n        cilBold,\n        cilBookmark,\n        cilCalculator,\n        cilCalendar,\n        cilCloudDownload,\n        cilChartPie,\n        cilCheck,\n        cilChevronBottom,\n        cilChevronLeft,\n        cilChevronRight,\n        cilChevronTop,\n        cilCircle,\n        cilCheckCircle,\n        cilCode,\n        cilCommentSquare,\n        cilCreditCard,\n        cilCursor,\n        cilCursorMove,\n        cilDrop,\n        cilDollar,\n        cilEnvelopeClosed,\n        cilEnvelopeLetter,\n        cilEnvelopeOpen,\n        cilEuro,\n        cilGlobeAlt,\n        cilGrid,\n        cilFile,\n        cilFullscreen,\n        cilFullscreenExit,\n        cilGraph,\n        cilHome,\n        cilInbox,\n        cilIndentDecrease,\n        cilIndentIncrease,\n        cilInputPower,\n        cilItalic,\n        cilJustifyCenter,\n        cilJustifyLeft,\n        cilLaptop,\n        cilLayers,\n        cilLightbulb,\n        cilList,\n        cilListNumbered,\n        cilListRich,\n        cilLocationPin,\n        cilLockLocked,\n        cilMagnifyingGlass,\n        cilMap,\n        cilMoon,\n        cilNotes,\n        cilOptions,\n        cilPaperclip,\n        cilPaperPlane,\n        cilPencil,\n        cilPeople,\n        cilPhone,\n        cilPrint,\n        cilPuzzle,\n        cilSave,\n        cilScrubber,\n        cilSettings,\n        cilShare,\n        cilShareAll,\n        cilShareBoxed,\n        cilShieldAlt,\n        cilSpeech,\n        cilSpeedometer,\n        cilSpreadsheet,\n        cilStar,\n        cilSun,\n        cilTags,\n        cilTask,\n        cilTrash,\n        cilUnderline,\n        cilUser,\n        cilUserFemale,\n        cilUserFollow,\n        cilUserUnfollow,\n        cilX,\n        cilXCircle,\n        cilWarning,\n    },\n    {\n        cifUs,\n        cifBr,\n        cifIn,\n        cifFr,\n        cifEs,\n        cifPl,\n    },\n    {\n        cibSkype,\n        cibFacebook,\n        cibTwitter,\n        cibLinkedin,\n        cibFlickr,\n        cibTumblr,\n        cibXing,\n        cibGithub,\n        cibStackoverflow,\n        cibYoutube,\n        cibDribbble,\n        cibInstagram,\n        cibPinterest,\n        cibVk,\n        cibYahoo,\n        cibBehance,\n        cibReddit,\n        cibVimeo,\n        cibCcMastercard,\n        cibCcVisa,\n        cibStripe,\n        cibPaypal,\n        cibGooglePay,\n        cibCcAmex,\n    },\n);\n","import React from \"react\";\nconst Users = React.lazy(() => import('./views/users/Users'));\nconst User = React.lazy(() => import('./views/users/User'));\nconst UserEdit = React.lazy(() => import('./views/users/UserEdit'));\n\nconst Properties = React.lazy(() => import('./views/properties/Properties'));\nconst Property = React.lazy(() => import('./views/properties/Property'));\nconst PropertyEdit = React.lazy(() =>\n    import('./views/properties/PropertyEdit'),\n);\n\nconst PropertyFileUpload = React.lazy(() => import('./views/properties/file-upload'));\n\nconst routes = [\n    { path: '/admin/', exact: true, name: 'Home' },\n    // User Routes\n    { path: '/admin/users', exact: true, name: 'Users', component: Users },\n    {\n        path: '/admin/users/new',\n        exact: true,\n        name: 'New User',\n        component: UserEdit,\n    },\n    {\n        path: '/admin/users/:id',\n        exact: true,\n        name: 'User Details',\n        component: User,\n    },\n    {\n        path: '/admin/edit/user/:id',\n        exact: true,\n        name: 'Edit User',\n        component: UserEdit,\n    },\n\n    {\n        path: '/admin/file-upload',\n        exact: true,\n        name: 'FileUpload',\n        component: PropertyFileUpload,\n    },\n    {\n        path: '/admin/properties',\n        exact: true,\n        name: 'Properties',\n        component: Properties,\n    },\n    {\n        path: '/admin/properties/new',\n        exact: true,\n        name: 'New Property',\n        component: PropertyEdit,\n    },\n    {\n        path: '/admin/properties/:id',\n        exact: true,\n        name: 'Property Details',\n        component: Property,\n    },\n    {\n        path: '/admin/edit/property/:id',\n        exact: true,\n        name: 'Edit Property',\n        component: PropertyEdit,\n    },\n    {\n        path: '/admin/properties/:id',\n        exact: true,\n        name: 'User Details',\n        component: User,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport {CFooter} from '@coreui/react';\n\nconst TheFooter = () => {\n    return <CFooter fixed={false}></CFooter>;\n};\n\nexport default React.memo(TheFooter);\n","import React, {Suspense} from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {CContainer, CFade} from '@coreui/react';\nimport {Spinner} from 'reactstrap';\n\n// routes config\nimport routes from '../routes';\n\nconst loading = (\n    <div className={'loader'}>\n        <Spinner\n            type={'grow'}\n            color={'primary'}\n            style={{width: '5rem', height: '5rem'}}>\n            {''}\n        </Spinner>\n    </div>\n);\n\nconst TheContent = () => {\n    return (\n        <main className=\"c-main\">\n            <CContainer fluid className={'h-100'}>\n                <Suspense fallback={loading}>\n                    <Switch>\n                        {routes.map((route, idx) => {\n                            return (\n                                route.component && (\n                                    <Route\n                                        key={idx}\n                                        path={route.path}\n                                        exact={route.exact}\n                                        name={route.name}\n                                        render={(props) => (\n                                            <CFade className={'h-100'}>\n                                                <route.component {...props} />\n                                            </CFade>\n                                        )}\n                                    />\n                                )\n                            );\n                        })}\n                        <Redirect from=\"/\" to=\"/admin/users\" />\n                    </Switch>\n                </Suspense>\n            </CContainer>\n        </main>\n    );\n};\n\nexport default React.memo(TheContent);\n","import {\n    CBreadcrumbRouter,\n    CHeader,\n    CHeaderBrand,\n    CHeaderNav,\n    CSubheader,\n    CToggler,\n} from '@coreui/react';\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShowSidebar } from '../../redux/actionCreators/adminActionCreators';\n\n// routes config\nimport routes from '../routes';\n\nimport { TheHeaderDropdown } from './index';\n\nconst TheHeader = () => {\n    const dispatch = useDispatch();\n    const sidebarShow = useSelector((state) => state.admin.sidebarShow);\n\n    const toggleSidebar = () => {\n        const val = [true, 'responsive'].includes(sidebarShow)\n            ? false\n            : 'responsive';\n        dispatch(setShowSidebar(val));\n    };\n\n    const toggleSidebarMobile = () => {\n        const val = [false, 'responsive'].includes(sidebarShow)\n            ? true\n            : 'responsive';\n        dispatch(setShowSidebar(val));\n    };\n\n    return (\n        <CHeader withSubheader>\n            <CToggler\n                inHeader\n                className=\"ml-md-3 d-lg-none\"\n                onClick={toggleSidebarMobile}\n            />\n            <CToggler\n                inHeader\n                className=\"ml-3 d-md-down-none\"\n                onClick={toggleSidebar}\n            />\n            <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\" />\n\n            <CHeaderNav className=\"d-md-down-none mr-auto\" />\n\n            <CHeaderNav className=\"px-3\">\n                <TheHeaderDropdown />\n            </CHeaderNav>\n\n            <CSubheader className=\"px-3 justify-content-between\">\n                <CBreadcrumbRouter\n                    className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n                    routes={routes}\n                />\n            </CSubheader>\n        </CHeader>\n    );\n};\n\nexport default TheHeader;\n","import CIcon from '@coreui/icons-react';\nimport {\n    CDropdown,\n    CDropdownItem,\n    CDropdownMenu,\n    CDropdownToggle,\n    CImg,\n} from '@coreui/react';\nimport React from \"react\";\n// import {useSelector} from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nconst TheHeaderDropdown = () => {\n\n    return (\n        <CDropdown inNav className=\"c-header-nav-items mx-2\" direction=\"down\">\n            <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n                <div className=\"c-avatar\">\n                    <CImg\n                        src={`/assets/img/default-user.png`}\n                        className=\"c-avatar-img\"\n                        style={{ backgroundColor: \"black\" }}\n                    />\n                </div>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n                <CDropdownItem tag={Link} to={'/logout'}>\n                    <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\n                    Logout\n                </CDropdownItem>\n            </CDropdownMenu>\n        </CDropdown>\n    );\n};\n\nexport default TheHeaderDropdown;\n","import CIcon from '@coreui/icons-react';\nimport {\n    CCreateElement,\n    CImg,\n    CSidebar,\n    CSidebarBrand,\n    CSidebarMinimizer,\n    CSidebarNav,\n    CSidebarNavDivider,\n    CSidebarNavDropdown,\n    CSidebarNavItem,\n    CSidebarNavTitle,\n} from '@coreui/react';\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShowSidebar } from '../../redux/actionCreators/adminActionCreators';\n\n// sidebar nav config\n// import navigation from './_nav';\nconst TheSidebar = () => {\n    const dispatch = useDispatch();\n    const navigation = [\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Data'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Users',\n            to: '/admin/users',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Properties',\n            to: '/admin/properties',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Campaigns'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Email Campaigns',\n            to: '/admin/email-campaigns',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Templates',\n            to: '/admin/templates',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Marketing'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Coupons',\n            to: '/admin/coupons',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Flyer',\n            to: '/admin/flyers',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Promting Events',\n            to: '/admin/events',\n            icon: 'cil-user',\n        },\n    ];\n    const show = useSelector((state) => state.admin.sidebarShow);\n    return (\n        <CSidebar\n            show={show}\n            onShowChange={(val) => dispatch(setShowSidebar(val))}>\n            <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n                <CImg\n                    className=\"c-sidebar-brand-full\"\n                    src={'/assets/img/logo-sm.png'}\n                    height={35}\n                />\n                <CImg\n                    className=\"c-sidebar-brand-minimized\"\n                    src={'/assets/img/icon-white-small.png'}\n                    height={35}\n                />\n            </CSidebarBrand>\n            <CSidebarNav>\n                <CCreateElement\n                    items={navigation}\n                    components={{\n                        CSidebarNavDivider,\n                        CSidebarNavDropdown,\n                        CSidebarNavItem,\n                        CSidebarNavTitle,\n                    }}\n                />\n            </CSidebarNav>\n            <CSidebarMinimizer className=\"c-d-md-down-none\" />\n        </CSidebar>\n    );\n};\n\nexport default React.memo(TheSidebar);\n","import {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CInvalidFeedback,\n    CLabel,\n    CRow,\n    CSelect,\n    CSpinner,\n} from '@coreui/react';\nimport { useFormik } from 'formik';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport * as Yup from 'yup';\n// import MapContext from '../../../common/contexts/MapContext/MapContext';\nimport {\n    fetchRoles,\n    fetchUser,\n    saveUser,\n    saveTenant\n} from '../../../redux/actionCreators/adminActionCreators';\nimport MobileInput from '../../../common/components/MobileInput';\nimport Header from '../../../site/pages/newHome/Header';\n\nimport { TheContent, TheSidebar, TheFooter, TheHeader } from '../../containers/index';\nimport { CContainer, CFade } from '@coreui/react';\nimport '../../../styles/admin/style.scss';\nimport { icons } from \"../../assets/icons\"\n\nconst validationSchema = Yup.object().shape({\n    mobileNumber: Yup.number().required('Mobile number is required'),\n    firstName: Yup.string(),\n    lastName: Yup.string(),\n    password: Yup.string()\n        .min(6, 'Password is  too Short!')\n        .max(16, 'Password is too Long!'),\n    role: Yup.string().required('Role is required'),\n});\n\nconst UserEdit = ({ match }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const roles = useSelector((state) => state.admin.roles);\n    const loginedUser = useSelector((state) => state.auth.me);\n\n\n    // console.log('loginedUser=' + JSON.stringify(loginedUser.role));\n    const formik = useFormik({\n        initialValues: {\n            id: match.params.id,\n            mobileNumber: '',\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n\n            username: '',\n            role: '',\n            // property: undefined,\n            emailVerified: true,\n            mobileVerified: true,\n            createAt: '',\n            blocked: false,\n            confirmed: true,\n            location: {},\n        },\n        validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n\n            if (loginedUser.role.name === process.env.REACT_APP_ROLE_PM_NAME) {\n                //PM add a tenant\n                const user = {\n                    ...values,\n                    tenant: loginedUser.tenant,\n                    // propertyId: property!=null && property!=undefined ? property.id:landlordId,\n                    // unitNo: unitNo\n                };\n\n                dispatch(saveTenant(user))\n                    .then(() => {\n                        if (match.params.id)\n                            history.push(`/admin/users/${match.params.id}`);\n                        else history.push('/admin/users');\n                    })\n                    .catch(() => setSubmitting(false));\n            } else {\n                const user = {\n                    ...values,\n                    tenant: loginedUser.tenant,\n                };\n\n                dispatch(saveUser(user))\n                    .then(() => {\n                        if (match.params.id)\n                            history.push(`/admin/users/${match.params.id}`);\n                        else history.push('/admin/users');\n                    })\n                    .catch(() => setSubmitting(false));\n            }\n        },\n    });\n\n    const {\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        values,\n        isValid,\n        isSubmitting,\n        resetForm,\n        setValues,\n        setFieldValue,\n        setFieldTouched,\n    } = formik;\n    // const [properties,setProperties] = useState(null);\n    // const [property,setProperty] = useState(null);\n    const [loading, setLoading] = useState(true);\n    // const [landlordId,setLandlordId] = useState('');\n    useEffect(() => {\n        if (match.params.id) {\n            dispatch(fetchUser(match.params.id)).then(({ value: user }) => {\n                delete user.user_alert;\n\n                setValues({\n                    ...user,\n                    role: user.role.id,\n                    // property: user.property.id,\n                });\n\n                // setLandlordId(user.property.landlordId); //房东的ID\n                console.log('property =' + JSON.stringify(user.property));\n\n            });\n        }\n\n    }, [dispatch, loginedUser, match.params.id, setValues]);\n\n\n\n    useEffect(() => {\n        dispatch(fetchRoles());\n    }, [dispatch]);\n\n    // const [unitNo,setUnitNo] = useState('');\n    return (\n        <main>\n            <Header />\n            <div className=\"content\">\n                <CRow>\n                    <CCol md={12}>\n                        <CForm onSubmit={handleSubmit}>\n                            <CCard>\n                                <CCardHeader>User id: {match.params.id}</CCardHeader>\n                                <CCardBody>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"firstName\">\n                                                First Name\n                                            </CLabel>\n                                            <CInput\n                                                id=\"firstName\"\n                                                name=\"firstName\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.firstName}\n                                                invalid={\n                                                    touched.firstName &&\n                                                    errors.firstName\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.firstName}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"lastName\">\n                                                Last Name\n                                            </CLabel>\n                                            <CInput\n                                                id=\"lastName\"\n                                                name=\"lastName\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.lastName}\n                                                invalid={\n                                                    touched.lastName && errors.lastName\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.lastName}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"username\">\n                                                User Name\n                                            </CLabel>\n                                            <CInput\n                                                id=\"username\"\n                                                name=\"username\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.username}\n                                                invalid={\n                                                    touched.username && errors.username\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.username}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"mobileNumber\">\n                                                Mobile Number\n                                            </CLabel>\n                                            <MobileInput\n                                                setFieldValue={setFieldValue}\n                                                setFieldTouched={setFieldTouched}\n                                                placeholder=\"Mobile Number\"\n                                                name={'mobileNumber'}\n                                                value={values.mobileNumber}\n                                                invalid={\n                                                    touched.mobileNumber &&\n                                                    errors.mobileNumber\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.mobileNumber}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"email\">Email</CLabel>\n                                            <CInput\n                                                id=\"email\"\n                                                name=\"email\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.email}\n                                                invalid={touched.email && errors.email}\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.email}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"role\">Role</CLabel>\n                                            <CSelect\n                                                custom\n                                                id=\"role\"\n                                                name=\"role\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.role}\n                                                invalid={touched.role && errors.role}>\n                                                <option value=\"\">Please select</option>\n                                                {roles.map((r) => (\n                                                    <option key={r.id} value={r.id}>\n                                                        {r.name}\n                                                    </option>\n                                                ))}\n                                            </CSelect>\n                                            <CInvalidFeedback>\n                                                {errors.role}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"password\">Password</CLabel>\n                                            <CInput\n                                                id=\"password\"\n                                                name=\"password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.password}\n                                                invalid={\n                                                    touched.password && errors.password\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.password}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n\n                                </CCardBody>\n                                <CCardFooter className=\"text-right\">\n                                    <CButton\n                                        disabled={!isValid || isSubmitting}\n                                        type=\"submit\"\n                                        size=\"sm\"\n                                        color=\"primary\">\n                                        {isSubmitting ? (\n                                            <CSpinner size=\"sm\" />\n                                        ) : (\n                                            'Submit'\n                                        )}\n                                    </CButton>{' '}\n                                    <CButton\n                                        type=\"reset\"\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        onClick={() => resetForm()}>\n                                        Reset\n                                    </CButton>\n                                </CCardFooter>\n                            </CCard>\n                        </CForm>\n                    </CCol>\n                </CRow>\n            </div>\n        </main>\n    );\n};\n\nexport default UserEdit;\n"],"names":["icons","Object","assign","cilAlignCenter","cilAlignLeft","cilAlignRight","cilApplicationsSettings","cilArrowRight","cilArrowTop","cilAsterisk","cilBan","cilBasket","cilBell","cilBold","cilBookmark","cilCalculator","cilCalendar","cilCloudDownload","cilChartPie","cilCheck","cilChevronBottom","cilChevronLeft","cilChevronRight","cilChevronTop","cilCircle","cilCheckCircle","cilCode","cilCommentSquare","cilCreditCard","cilCursor","cilCursorMove","cilDrop","cilDollar","cilEnvelopeClosed","cilEnvelopeLetter","cilEnvelopeOpen","cilEuro","cilGlobeAlt","cilGrid","cilFile","cilFullscreen","cilFullscreenExit","cilGraph","cilHome","cilInbox","cilIndentDecrease","cilIndentIncrease","cilInputPower","cilItalic","cilJustifyCenter","cilJustifyLeft","cilLaptop","cilLayers","cilLightbulb","cilList","cilListNumbered","cilListRich","cilLocationPin","cilLockLocked","cilMagnifyingGlass","cilMap","cilMoon","cilNotes","cilOptions","cilPaperclip","cilPaperPlane","cilPencil","cilPeople","cilPhone","cilPrint","cilPuzzle","cilSave","cilScrubber","cilSettings","cilShare","cilShareAll","cilShareBoxed","cilShieldAlt","cilSpeech","cilSpeedometer","cilSpreadsheet","cilStar","cilSun","cilTags","cilTask","cilTrash","cilUnderline","cilUser","cilUserFemale","cilUserFollow","cilUserUnfollow","cilX","cilXCircle","cilWarning","cifUs","cifBr","cifIn","cifFr","cifEs","cifPl","cibSkype","cibFacebook","cibTwitter","cibLinkedin","cibFlickr","cibTumblr","cibXing","cibGithub","cibStackoverflow","cibYoutube","cibDribbble","cibInstagram","cibPinterest","cibVk","cibYahoo","cibBehance","cibReddit","cibVimeo","cibCcMastercard","cibCcVisa","cibStripe","cibPaypal","cibGooglePay","cibCcAmex","Users","React","User","UserEdit","Properties","Property","PropertyEdit","path","exact","name","component","TheFooter","Spinner","fixed","dispatch","useDispatch","sidebarShow","useSelector","state","admin","withSubheader","inHeader","className","onClick","val","includes","setShowSidebar","to","routes","inNav","direction","caret","src","style","backgroundColor","placement","tag","Link","TheSidebar","show","onShowChange","height","items","_tag","_children","icon","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","validationSchema","Yup","shape","mobileNumber","required","firstName","lastName","password","min","max","role","match","history","useHistory","roles","loginedUser","auth","me","formik","useFormik","initialValues","id","params","email","username","emailVerified","mobileVerified","createAt","blocked","confirmed","location","onSubmit","values","setSubmitting","process","user","tenant","saveTenant","then","push","catch","saveUser","handleChange","handleBlur","handleSubmit","errors","touched","isValid","isSubmitting","resetForm","setValues","setFieldValue","setFieldTouched","useState","useEffect","fetchUser","value","user_alert","console","log","JSON","stringify","property","fetchRoles","md","xs","htmlFor","onChange","onBlur","invalid","placeholder","custom","map","r","disabled","type","size","color"],"sourceRoot":""}