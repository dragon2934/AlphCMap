{"version":3,"file":"static/js/452.f9caa2f2.chunk.js","mappings":"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","sources":["admin/file-upload/services/http-common.js","admin/file-upload/services/FileUploadService.js","admin/views/properties/PropertyEdit.js"],"sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n\n// export const fetchUser = (id) => {\n//   return (dispatch, getState) => {\n//       const token = getState().auth.jwt;\n\n//       return dispatch({\n//           type: ADMIN_FETCH_USER,\n//           payload: fetch(`${SERVICE_URL}/users/${id}?tenant=${PARTNER_TOKEN}`, {\n//               headers: {\n//                   Accept: 'application/json',\n//                   'Content-Type': 'application/json',\n//                   Authorization: `Bearer ${token}`,\n//               },\n//               method: 'GET',\n//           })\n//               .then((r) => r.json())\n//               .then((responseData) => {\n//                   if (responseData.statusCode >= 300) {\n//                       return Promise.reject(responseData);\n//                   } else {\n//                       return responseData;\n//                   }\n//               }),\n//       });\n//   };\n// };\n","import http from \"./http-common\";\nimport {SERVICE_URL} from '../../../constants';\n// const { listFiles,uploadFiles} = require('../../../redux/actionCreators/adminActionCreators');\nconst upload = (file,token, onUploadProgress) => {\n  let formData = new FormData();\n\n  formData.append(\"files\", file);\n\n  return http.post(SERVICE_URL+\"/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    },\n    onUploadProgress,\n  });\n};\n\nconst getFiles = (token) => {\n  return http.get(\n    SERVICE_URL+\"/upload/files?_limit=10&_start=0&_sort=updatedAt:DESC\");\n  // return listFiles();\n};\n\nconst FileUploadService = {\n  upload,\n  getFiles,\n};\n\nexport default FileUploadService; \n","import {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CInvalidFeedback,\n    CLabel,\n    CRow,\n    CSpinner,\n    CTabs,\n    CTabContent,\n    CTabPane,\n    CNav,\n    CNavItem,\n    CNavLink,\n} from '@coreui/react';\nimport { useFormik } from 'formik';\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport {\n    fetchProperty,\n    saveProperty,\n} from '../../../redux/actionCreators/adminActionCreators';\nimport UploadService from \"../../file-upload/services/FileUploadService\";\n\nimport { useSelector } from 'react-redux';\nimport Header from '../../../site/pages/newHome/Header';\n\nconst PropertyEdit = ({ match }) => {\n\n\n    const [selectedFormFiles, setSelectedFormFiles] = useState(undefined);\n    const [selectedPlanFiles, setSelectedPlanFiles] = useState(undefined);\n    const [currentProperty, setCurrentProperty] = useState(undefined);\n\n    const [activeTab, setActiveTab] = useState(0);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user = useSelector((state) => state.auth.me);\n    const token = useSelector((state) => state.auth.jwt);\n\n\n    const formik = useFormik({\n        initialValues: {\n            id: match.params.id,\n            address: '',\n            area: '',\n            serial_no: '',\n            application_form_url: '',\n            plans_url: '',\n            acreage: '',\n        },\n        // validationSchema: propertySchema,\n        onSubmit: async (values, { setSubmitting }) => {\n            setSubmitting(true);\n            let application_form_url = '';\n            let plans_url = '';\n            if (match.params.id) {\n                //edit mode\n                application_form_url = currentProperty.application_form_url;\n                plans_url = currentProperty.plans_url;\n            }\n            if (selectedFormFiles === undefined) {\n                // toastr.error('请上传地址信息文件');\n                // setSubmitting(false);\n                // return;\n            } else {\n                //do submit\n                const resp = await UploadService.upload(selectedFormFiles[0], token, null);\n                application_form_url = resp.data[0].url;\n            }\n            if (selectedPlanFiles === undefined) {\n\n            } else {\n                const resp = await UploadService.upload(selectedPlanFiles[0], token, null);\n                plans_url = resp.data[0].url;\n            }\n\n            if (values.settlementType === 'lowRise') {\n                values.unitNo = '';\n            }\n\n            const property = {\n                ...values,\n                application_form_url,\n                plans_url\n            };\n            console.log('save property=' + JSON.stringify(property));\n\n            dispatch(saveProperty(property)).then(() => {\n                if (match.params.id)\n                    history.push(`/admin/properties/${match.params.id}`);\n                else history.push('/admin/properties');\n            });\n        },\n    });\n\n    const {\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        errors,\n        touched,\n        values,\n        isValid,\n        isSubmitting,\n        resetForm,\n        setValues,\n        setFieldValue,\n        setFieldTouched,\n    } = formik;\n\n\n\n\n    useEffect(() => {\n        if (match.params.id)\n            dispatch(fetchProperty(match.params.id)).then(\n                ({ value: property }) => {\n                    setCurrentProperty(property);\n\n                    setValues({\n                        ...property,\n                        ...property.location,\n                        // users: property.users.map((u) => u.id),\n                    });\n                },\n            );\n    }, [dispatch, match.params.id, setValues]);\n\n\n\n\n\n\n\n    const selectApplicationFormFiles = (event) => {\n        setSelectedFormFiles(event.target.files);\n        console.log('file selected..' + JSON.stringify(event.target.files));\n        // setProgressInfos({ val: [] });\n    };\n    const selectPlanFiles = (event) => {\n        setSelectedPlanFiles(event.target.files);\n        console.log('file selected..' + JSON.stringify(event.target.files));\n        // setProgressInfos({ val: [] });\n    };\n    return (\n        <main>\n            <Header />\n            <div className=\"content\">\n\n                <CTabs activeTab=\"home\"\n                    onActiveTabChange={(idx) => setActiveTab(idx)}>\n                    <CNav variant=\"tabs\">\n                        <CNavItem>\n                            <CNavLink data-tab=\"home\">\n                                {match.params.id\n                                    ? `Record id: ${match.params.id}`\n                                    : 'New Property'}\n                            </CNavLink>\n                        </CNavItem>\n                    </CNav>\n                    <CTabContent>\n                        <CTabPane data-tab=\"home\"  >\n                            <CRow active={activeTab === 0}>\n                                <CCol md={10}>\n                                    <CForm onSubmit={handleSubmit}>\n                                        <CCard>\n                                            {/* <CCardHeader>\n                            {match.params.id\n                                ? `Record id: ${match.params.id}`\n                                : 'New Property'}\n                        </CCardHeader> */}\n                                            <CCardBody>\n\n                                                <CCol xs=\"12\">\n                                                    <CFormGroup>\n                                                        <CLabel htmlFor=\"area\">\n                                                            地区\n                                                        </CLabel>\n                                                        <CInput\n                                                            id=\"area\"\n                                                            name=\"area\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.area}\n                                                            invalid={\n                                                                touched.area &&\n                                                                errors.area\n                                                            }\n                                                        />\n                                                        <CInvalidFeedback>\n                                                            {errors.area}\n                                                        </CInvalidFeedback>\n                                                    </CFormGroup>\n                                                </CCol>\n                                                <CCol xs=\"12\">\n                                                    <CFormGroup>\n                                                        <CLabel htmlFor=\"serial_no\">\n                                                            编号\n                                                        </CLabel>\n                                                        <CInput\n                                                            id=\"serial_no\"\n                                                            name=\"serial_no\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.serial_no}\n                                                            invalid={\n                                                                touched.serial_no &&\n                                                                errors.serial_no\n                                                            }\n                                                        />\n                                                        <CInvalidFeedback>\n                                                            {errors.serial_no}\n                                                        </CInvalidFeedback>\n                                                    </CFormGroup>\n                                                </CCol>\n                                                <CCol xs=\"12\">\n                                                    <CFormGroup>\n                                                        <CLabel htmlFor=\"address\">\n                                                            地址\n                                                        </CLabel>\n                                                        <CInput\n                                                            id=\"address\"\n                                                            name=\"address\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.address}\n                                                            invalid={touched.address && errors.address}\n                                                        />\n                                                        <CInvalidFeedback>\n                                                            {errors.address}\n                                                        </CInvalidFeedback>\n                                                    </CFormGroup>\n                                                </CCol>\n                                                <CCol xs=\"12\">\n                                                    <CFormGroup>\n                                                        <CLabel htmlFor=\"locality\">地址信息 &nbsp;&nbsp;</CLabel>\n                                                        <CLabel htmlFor='fileName'>{values.application_form_url} &nbsp;&nbsp;</CLabel>\n                                                        <br />\n                                                        <input type=\"file\" onChange={selectApplicationFormFiles} />\n                                                    </CFormGroup>\n                                                </CCol>\n                                                <CCol xs=\"12\">\n                                                    <CFormGroup>\n                                                        <CLabel htmlFor=\"locality\">地址图纸&nbsp;&nbsp;</CLabel>\n                                                        <CLabel htmlFor='fileName'>{values.plans_url} &nbsp;&nbsp;</CLabel>\n                                                        <br />\n                                                        <input type=\"file\" onChange={selectPlanFiles} />\n                                                    </CFormGroup>\n                                                </CCol>\n                                                <CCol xs=\"12\">\n                                                    <CFormGroup>\n                                                        <CLabel htmlFor=\"acreage\">\n                                                            面积\n                                                        </CLabel>\n                                                        <CInput\n                                                            id=\"acreage\"\n                                                            name=\"acreage\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.acreage}\n                                                            invalid={touched.acreage && errors.acreage}\n                                                        />\n                                                        <CInvalidFeedback>\n                                                            {errors.acreage}\n                                                        </CInvalidFeedback>\n                                                    </CFormGroup>\n                                                </CCol>\n                                            </CCardBody>\n                                            <CCardFooter className=\"text-right\">\n                                                <CButton\n                                                    type=\"submit\"\n                                                    size=\"sm\"\n                                                    color=\"primary\">\n                                                    {isSubmitting ? (\n                                                        <CSpinner size=\"sm\" />\n                                                    ) : (\n                                                        'Submit'\n                                                    )}\n                                                </CButton>{' '}\n                                                <CButton\n                                                    type=\"reset\"\n                                                    size=\"sm\"\n                                                    color=\"danger\"\n                                                    onClick={() => resetForm()}>\n                                                    Reset\n                                                </CButton>\n                                            </CCardFooter>\n                                        </CCard>\n                                    </CForm>\n                                </CCol>\n                            </CRow>\n                        </CTabPane>\n\n\n\n                    </CTabContent>\n                </CTabs>\n            </div>\n        </main>\n\n    );\n};\n\nexport default PropertyEdit;\n"],"names":["axios","headers","upload","file","token","onUploadProgress","formData","FormData","append","http","SERVICE_URL","Authorization","getFiles","match","useState","undefined","selectedFormFiles","setSelectedFormFiles","selectedPlanFiles","setSelectedPlanFiles","currentProperty","setCurrentProperty","activeTab","setActiveTab","dispatch","useDispatch","history","useHistory","useSelector","state","auth","me","jwt","formik","useFormik","initialValues","id","params","address","area","serial_no","application_form_url","plans_url","acreage","onSubmit","values","setSubmitting","UploadService","resp","data","url","settlementType","unitNo","property","console","log","JSON","stringify","saveProperty","then","push","handleChange","handleSubmit","handleBlur","errors","touched","isSubmitting","isValid","resetForm","setValues","setFieldValue","setFieldTouched","useEffect","fetchProperty","value","location","className","onActiveTabChange","idx","variant","active","md","xs","htmlFor","name","onChange","onBlur","invalid","type","event","target","files","size","color","onClick"],"sourceRoot":""}