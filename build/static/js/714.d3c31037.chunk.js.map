{"version":3,"file":"static/js/714.d3c31037.chunk.js","mappings":"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","sources":["common/components/MapLegend.js","common/components/MobileInput.js","common/contexts/MapContext/MapContext.js","common/contexts/MapContext/MapProvider.js","common/validation/propertySchema.js","constants.js","redux/actionCreators/adminActionCreators.js","redux/actionCreators/appActionCreators.js","redux/actionCreators/authActionCreators.js","redux/actionCreators/registrationActionCreators.js","site/pages/newHome/AboutUs.js","site/pages/newHome/contact/ContactForm.js","site/pages/newHome/ContactUs.js","site/pages/newHome/HowItWorks.js","site/pages/newHome/NewsRelease.js","site/pages/newHome/OurPromise.js","site/pages/newHome/OurStory.js","site/pages/newHome/OurVideo.js","site/pages/newHome/Patents.js","site/pages/newHome/PrivacyPolicy.js","site/pages/newHome/TermsOfUse.js","common/components/GMap.js","site/pages/profile/EditProperty.js","site/pages/mobile/MobileAccountVerification.js","site/pages/newHome/ChangeEMail.js","site/pages/newHome/ChangeMobile.js","site/pages/newHome/ChangePassword.js","site/pages/newHome/MemberShip.js","site/pages/newHome/Checkout.js","redux/actionCreators/checkoutCreators.js","site/pages/newHome/CheckoutSuccess.js","site/pages/newHome/CheckoutFailed.js","common/contexts/CartContext.js","site/hooks/useCart.js","site/pages/newHome/BusinessProfile.js","site/components/icons/index.js","site/pages/cart/CartItem.js","site/pages/cart/CartProducts.module.scss","site/pages/cart/CartProducts.js","site/components/Layout.js","site/pages/cart/index.js","site/pages/newHome/BusinessPortal.js","site/pages/newHome/UnSubscribe.js","site/pages/newHome/UnSubscribed.js","site/pages/newHome/Connect.js","site/pages/newHome/ResetPassword.js","site/pages/newHome/VerifyResetPassword.js","site/pages/newHome/ResetPassword3.js","site/Site.js","site/pages/accountVerification/EmailVerification.js","site/pages/accountVerification/MobileVerification.js","site/pages/newHome/Footer.js","site/components/Toggle.js","site/pages/newHome/Header.js","utils/eventBus.js","utils/mapUtils.js","utils/propertyUtils.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport ReactDOM from 'react-dom';\nimport {MapMarkerUrls} from '../../constants';\n\n\n\nconst MapLegend = () => {\n    const el = document.querySelector('.mapboxgl-ctrl-top-right');\n    // const [active, setActive] = useState(false);\n\n    if (!el) {\n        return null;\n    } else {\n        return ReactDOM.createPortal(\n            <div className=\"map-legend mapboxgl-ctrl\">\n                  \n            </div>,\n            el,\n        );\n    }\n};\n\nexport default MapLegend;\n","import React from \"react\";\nimport PhoneInput from 'react-phone-input-2';\n\nconst MobileInput = ({\n    value,\n    options,\n    name,\n    invalid,\n    setFieldValue,\n    setFieldTouched,\n    ...rest\n}) => {\n    const classNames = ['custom-react-phone-input', 'form-control'];\n\n    if (invalid) classNames.push('is-invalid');\n\n    return (\n        <PhoneInput\n            type={'number'}\n            country={'us'}\n            name={name}\n            value={value}\n            invalid={invalid}\n            containerClass={classNames.join(' ')}\n            onChange={(value) => setFieldValue(name, value)}\n            onBlur={() => setFieldTouched(name)}\n            {...rest}\n        />\n    );\n};\n\nexport default MobileInput;\n","import {createContext} from \"react\";\n\nconst MapContext = createContext(null);\nconst Provider = MapContext.Provider;\nconst Consumer = MapContext.Consumer;\n\nexport {Provider};\nexport {Consumer};\nexport default MapContext;\n","import React, {Component} from 'react';\nimport {Provider} from './MapContext';\n\nclass MapProvider extends Component {\n    static propTypes = {};\n\n    static defaultProps = {};\n\n    state = {\n        map: null,\n        setMap: (map) => {\n            this.setState({\n                map,\n            });\n        },\n        disabled: false,\n        setDisabled: (value) =>\n            this.setState({\n                disabled: value,\n            }),\n        clearContext: async () => {\n            await this.setState(() => {\n                return {};\n            });\n        },\n    };\n\n    render() {\n        const {children} = this.props;\n        return <Provider value={this.state}>{children}</Provider>;\n    }\n}\n\nexport default MapProvider;\n","import * as Yup from 'yup';\n\n// export const propertySchema = Yup.object().shape({\n//     address: Yup.string().required('This field is required'),\n//     area: Yup.string().required('This field is required'),\n//     serial_no: Yup.string().required('This field is required'),\n//     acreage: Yup.string().required('This field is required'),\n// });\n\nexport const propertySchema = Yup.object().shape({\n    primaryAddress: Yup.boolean()\n        .required()\n        .oneOf([true], 'This field is required'),\n    addressType: Yup.string().when([],{\n        is: (hightRiseOrCommercial) => hightRiseOrCommercial===false,\n        then: Yup.string().required('This field is required'),\n    }),\n    settlementType: Yup.string().required('This field is required'),\n    unitNo: Yup.string().when(['settlementType','hightRiseOrCommercial'], {\n        is: (settlementType,hightRiseOrCommercial) => settlementType === 'highRise' && !hightRiseOrCommercial,\n        then: Yup.string().required('This field is required'),\n    }),\n    propertyName: Yup.string().when(['addressType','hightRiseOrCommercial'], {\n        is: (addressType,hightRiseOrCommercial) => (addressType === 'Incorporate' || addressType==='School') && !hightRiseOrCommercial,\n        then: Yup.string().required('This field is required'),\n    }),\n});\nexport const additionalPropertySchema = Yup.object().shape({\n    addressType: Yup.string().when([],{\n        is: (hightRiseOrCommercial) => hightRiseOrCommercial===false,\n        then: Yup.string().required('This field is required'),\n    }),\n    settlementType: Yup.string().required('This field is required'),\n    unitNo: Yup.string().when(['settlementType'], {\n        is: (settlementType) => settlementType === 'highRise',\n        then: Yup.string().required('This field is required'),\n    }),\n});","const utilsTools = require('./utils/utils');\n\nexport const SERVICE_URL = process.env.REACT_APP_SERVICE_URL\n    ? process.env.REACT_APP_SERVICE_URL\n    : 'http://localhost:1337';\n// export const SERVICE_URL = 'http://localhost:11337/api';\nexport const PARTNER_TOKEN = process.env.REACT_APP_PARTNER_TOKEN;\n\nexport const STRIPE_URL = process.env.REACT_APP_SOCKET_SERVER\n\nexport const MapMarkerUrls = {\n    property: {\n        default: '/map-markers/blue_home_pin.png',\n        hasInjured: '/map-markers/red_home_pin.png',\n        pending: '/map-markers/grey_home_pin.png',\n        safe: '/map-markers/green_home_pin.png',\n        secondary: '/map-markers/second_home_pin.png',\n    },\n    user: {\n        default: '/map-markers/blue_user_pin.png',\n        injured: '/map-markers/red_user_pin.png',\n        pending: '/map-markers/grey_user_pin.png',\n        safe: '/map-markers/green_user_pin.png',\n        away: '/map-markers/yellow_user_pin.png',\n    },\n    businessCategory: {\n        restaurant: '/map-markers/restaurant.png',\n        groceries: '/map-markers/grocery.png',\n        cannibus: '/map-markers/cannibus.png',\n    },\n    extra: {\n        edit_mode: '/map-markers/edit_mode.jpeg',\n        connect_mode: '/map-markers/connect_mode.jpeg'\n    }\n};\n\nexport const PropertyStatus = {\n    DEFAULT: 'default',\n    PENDING: 'pending',\n    SAFE: 'safe',\n    HAS_INJURED: 'hasInjured',\n    SECONDARY: 'secondary'\n};\n\nexport const AlertStatus = {\n    PENDING: 'pending',\n    SENT: 'sent',\n    RECEIVED: 'received',\n    SAFE: 'safe',\n    AWAY: 'away',\n    INJURED: 'injured',\n};\n\nexport const PendingStatuses = [\n    AlertStatus.PENDING,\n    AlertStatus.SENT,\n    AlertStatus.RECEIVED,\n];\n\nexport const SafeStatuses = [AlertStatus.SAFE, AlertStatus.AWAY];\nexport const NotSafeStatuses = [AlertStatus.INJURED];\n\nexport const RespondedStatuses = [\n    AlertStatus.INJURED,\n    AlertStatus.SAFE,\n    AlertStatus.AWAY,\n];\n\n// Not received state\n// This is needed for messaging action creators\n// Dont change this array or face the consequences.\nexport const NotRespondedStatuses = [AlertStatus.PENDING, AlertStatus.SENT];\n","import { SERVICE_URL } from '../../constants';\nimport {\n    ADMIN_ADD_PROPERTY,\n    ADMIN_ADD_USER,\n    ADMIN_DELETE_PROPERTY,\n    ADMIN_DELETE_USER,\n    ADMIN_FETCH_ALERT,\n    ADMIN_FETCH_ALERT_COUNT,\n    ADMIN_FETCH_ALERTS,\n    ADMIN_FETCH_PROPERTIES,\n    ADMIN_FETCH_PROPERTY,\n    ADMIN_FETCH_PROPERTY_ALERT,\n    ADMIN_FETCH_PROPERTY_COUNT,\n    ADMIN_FETCH_PROPERTY_RESIDENTS,\n    ADMIN_FETCH_ROLES,\n    ADMIN_FETCH_USER,\n    ADMIN_FETCH_USER_ALERT,\n    ADMIN_FETCH_USER_COUNT,\n    ADMIN_FETCH_USERS,\n    ADMIN_SEARCH_USERS,\n    ADMIN_SHOW_SIDEBAR,\n    ADMIN_LIST_FILES,\n    ADMIN_UPLOAD_FILE,\n    ADMIN_UPDATE_LAT_LNG,\n    ADMIN_SEARCH_PROPERTIES,\n    ADMIN_FETCH_COUPONS,\n    ADMIN_FETCH_COUPON,\n    ADMIN_FETCH_COUPON_COUNT,\n    ADMIN_DELETE_COUPON,\n    ADMIN_ADD_COUPON,\n    ADMIN_PROPERTY_BINDING,\n    ADMIN_SEND_PROMOTE_EMAIL,\n    ADMIN_SAVE_BUSINESS_PROFILE,\n    ADMIN_GET_BUSINESS_PROFILE,\n    ADMIN_GET_BUSINESS_ADDRESS,\n    ADMIN_SAVE_MERCHANT_CONNECTION,\n    ADMIN_SAVE_SHOPPING_CART,\n    ADMIN_LOAD_SHOPPING_CART,\n    ADMIN_UNSUBSCRIBE,\n    ADMIN_TOTAL_CONNECTED,\n    ADMIN_CONFIRM_CONNECTION,\n    ADMIN_GET_ADDRESS_BY_TYPE,\n    ADMIN_CHECK_BUSINESS_PROFILE,\n    ADMIN_GET_HIGHRISE_INFO,\n    ADMIN_GET_HIGHRISE_BUSINESS_INFO,\n    ADMIN_FETCH_ACTION,\n    ADMIN_SAVE_ACTION,\n    ADMIN_DELETE_ACTION\n} from '../actionTypes';\n\nimport { getLoginType } from '../../utils/utils';\n// UI\n\nexport const setShowSidebar = (data) => {\n    return (dispatch) => {\n        return dispatch({\n            type: ADMIN_SHOW_SIDEBAR,\n            payload: data,\n        });\n    };\n};\n\n\nexport const fetchCoupon = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_COUPON,\n            payload: fetch(`${SERVICE_URL}/coupons/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveCoupon = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = data.id && data.id > 0\n            ? `${SERVICE_URL}/coupons/${data.id}`\n            : `${SERVICE_URL}/coupons`;\n\n        console.log('save COUPON=' + JSON.stringify(data));\n        return dispatch({\n            type: ADMIN_ADD_COUPON,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: data.id && data.id > 0 ? 'PUT' : 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchCoupons = (ownerId, { page = 1, pageSize = 10 }) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const start = (page - 1) * pageSize;\n\n        return dispatch({\n            type: ADMIN_FETCH_COUPONS,\n            payload: fetch(\n                `${SERVICE_URL}/coupons?pagination[page]=${start}&pagination[pageSize]=${pageSize}&filters[$and][0][ownerId][$eq]=${ownerId}`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    method: 'GET',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const deleteCoupon = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_DELETE_COUPON,\n            payload: fetch(`${SERVICE_URL}/coupons/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'DELETE',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n// Users\n\nexport const fetchUsers = ({ page = 1, pageSize = 10 }) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const start = (page - 1) * pageSize;\n\n        return dispatch({\n            type: ADMIN_FETCH_USERS,\n            payload: fetch(\n                `${SERVICE_URL}/users?pagination[page]=${start}&pagination[pageSize]=${pageSize}`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    method: 'GET',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchUser = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_USER,\n            payload: fetch(`${SERVICE_URL}/users/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchUserCount = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_USER_COUNT,\n            payload: fetch(`${SERVICE_URL}/users/count`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.text())\n                .then((responseData) => {\n                    return responseData;\n                }),\n        });\n    };\n};\n\nexport const deleteUser = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_DELETE_USER,\n            payload: fetch(`${SERVICE_URL}/users/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'DELETE',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n\nexport const saveTenant = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = `${SERVICE_URL}/residents/save-tenant`;\n\n        console.log('save Tenant=' + JSON.stringify(data));\n        return dispatch({\n            type: ADMIN_ADD_USER,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const saveUser = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = data.id\n            ? `${SERVICE_URL}/users/${data.id}`\n            : `${SERVICE_URL}/users`;\n\n        console.log('save user=' + JSON.stringify(data));\n        return dispatch({\n            type: ADMIN_ADD_USER,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: data.id ? 'PUT' : 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const searchUsers = (value) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_SEARCH_USERS,\n            payload: fetch(\n                `${SERVICE_URL}/users?pagination[pageSize]=10&mobileNumber_contains=${value}`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    method: 'GET',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n///properties/search-by-keyword\nexport const searchProperties = (keywords, searchType, COUPONShorName) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        let url = `${SERVICE_URL}/properties/search-by-keyword`;\n\n        const data = {\n            keywords: keywords,\n            searchType: searchType,\n            COUPONShorName: COUPONShorName\n        }\n        return dispatch({\n            type: ADMIN_SEARCH_PROPERTIES,\n            payload: fetch(\n                url,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    body: JSON.stringify(data),\n                    method: 'POST',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n// Properties\nexport const fetchProperties = ({ page = 1, pageSize = 10, roleName = 'Admin' }) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const user = getState().auth.user;\n        if (user === null || user === undefined) {\n            const responseData = {\n                statusCode: 200,\n                value: []\n            }\n            return responseData;\n        }\n        const mobile = user.mobileNumber;\n        const start = (page - 1) * pageSize;\n        let url = `${SERVICE_URL}/properties?pagination[page]=${start}&pagination[pageSize]=${pageSize}&filters[$and][0][ownerMobileNumber][$eq]=${mobile}`;\n        if (roleName == 'PropertyManager') {\n            url = url + '&hidden=false'\n        }\n        // console.log('fetchProperties=' + url);\n\n        return dispatch({\n            type: ADMIN_FETCH_PROPERTIES,\n            payload: fetch(\n                url,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    method: 'GET',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData.data;\n                    }\n                }),\n        });\n    };\n};\nexport const fetchPropertiesByLandlordId = (landlordId) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        let url = `${SERVICE_URL}/properties/get-by-landlord-id?landlordId=${landlordId}`;\n\n        return dispatch({\n            type: ADMIN_FETCH_PROPERTIES,\n            payload: fetch(\n                url,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    method: 'GET',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n\nexport const fetchProperty = (param) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const params = Array.isArray(param)\n            ? '?' +\n            new URLSearchParams(\n                param.map((id) => {\n                    return ['id_in', id];\n                }),\n            )\n            : param;\n\n        return dispatch({\n            type: ADMIN_FETCH_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/properties/${params}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchPropertyResidents = (propertyId) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_PROPERTY_RESIDENTS,\n            payload: fetch(`${SERVICE_URL}/users?property=${propertyId}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchPropertyCount = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_PROPERTY_COUNT,\n            payload: fetch(`${SERVICE_URL}/properties/count`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.text())\n                .then((responseData) => {\n                    return responseData;\n                }),\n        });\n    };\n};\n\nexport const deleteProperty = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_DELETE_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/properties/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'DELETE',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveProperty = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = data.id\n            ? `${SERVICE_URL}/properties/${data.id}`\n            : `${SERVICE_URL}/properties`;\n\n        return dispatch({\n            type: ADMIN_ADD_PROPERTY,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: data.id ? 'PUT' : 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n// Alerts\n// \nexport const fetchEmailCampaigns = (ownerId, { page = 1, pageSize = 10 }) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const start = (page - 1) * pageSize;\n\n        const jsonData = {\n            ownerId: ownerId,\n            start: start,\n            pageSize: pageSize\n        }\n        return dispatch({\n            type: ADMIN_FETCH_ACTION,\n            payload: fetch(\n                `${SERVICE_URL}/email-campaign/lists`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    body: JSON.stringify(jsonData),\n                    method: 'POST',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchCampaign = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_ALERT,\n            payload: fetch(`${SERVICE_URL}/email-campaigns/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchAlertCount = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_ALERT_COUNT,\n            payload: fetch(`${SERVICE_URL}/alerts/count?status=1`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.text())\n                .then((responseData) => {\n                    return responseData;\n                }),\n        });\n    };\n};\n\nexport const fetchPropertyAlerts = (alertId) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_PROPERTY_ALERT,\n            payload: fetch(`${SERVICE_URL}/property-alerts?alert=${alertId}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchUserAlerts = (alertId) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_USER_ALERT,\n            payload: fetch(`${SERVICE_URL}/user-alerts?alert=${alertId}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n\n\n// Roles\n\nexport const fetchRoles = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_ROLES,\n            payload: fetch(`${SERVICE_URL}/users-permissions/roles`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData.roles;\n                    }\n                }),\n        });\n    };\n};\n\n\nexport const listFiles = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_LIST_FILES,\n            payload: fetch(`${SERVICE_URL}/upload/files?pagination[pageSize]=10&pagination[page]=0&sort=updatedAt:DESC`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const uploadFiles = (fileData) => {\n    return (dispatch, getState) => {\n        // const token = getState().auth.jwt;\n        let formData = new FormData();\n\n        formData.append(\"files\", fileData);\n        return dispatch({\n            type: ADMIN_UPLOAD_FILE,\n            payload: fetch(`${SERVICE_URL}/upload`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: formData,\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const updateProperty = (fileName, fileUrl) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const data = {\n            fileName: fileName,\n            fileUrl: fileUrl\n        }\n        return dispatch({\n            type: ADMIN_UPLOAD_FILE,\n            payload: fetch(`${SERVICE_URL}/properties/update-by-filename`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n///\nexport const updateLatLng = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const data = {\n\n        }\n        return dispatch({\n            type: ADMIN_UPDATE_LAT_LNG,\n            payload: fetch(`${SERVICE_URL}/properties/update-lat-lng`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const propertyBinding = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_PROPERTY_BINDING,\n            payload: fetch(`${SERVICE_URL}/properties/binding`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const sendPromotionContents = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_SEND_PROMOTE_EMAIL,\n            payload: fetch(`${SERVICE_URL}/residents/send-promote-email`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveBusinessProfile = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_SAVE_BUSINESS_PROFILE,\n            payload: fetch(`${SERVICE_URL}/business-profiles/save-business-profile`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const getBusinessProfile = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_GET_BUSINESS_PROFILE,\n            payload: fetch(`${SERVICE_URL}/public/load-business-profile`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const getBusinessProfileByConnectToken = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_GET_BUSINESS_PROFILE,\n            payload: fetch(`${SERVICE_URL}/public/load-business-profile-by-token`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const loadBusinessAddress = (data) => {\n\n\n    return ({\n        type: ADMIN_GET_BUSINESS_ADDRESS,\n        payload: fetch(`${SERVICE_URL}/public/load-business-address`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            method: 'GET',\n        })\n            .then((r) => r.json())\n            .then((responseData) => {\n                if (responseData.statusCode >= 300) {\n                    return Promise.reject(responseData);\n                } else {\n                    return responseData;\n                }\n            }),\n    });\n\n};\nexport const loadConnected = (data) => {\n\n    const loginType = getLoginType();\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_GET_BUSINESS_ADDRESS,\n            payload: fetch(`${SERVICE_URL}/residents/load-connected?loginType=` + loginType, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const saveMerchantConnection = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_SAVE_MERCHANT_CONNECTION,\n            payload: fetch(`${SERVICE_URL}/residents/connect-merchant`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n// /api/shopping-carts\n\nexport const saveShoppingCart = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_SAVE_SHOPPING_CART,\n            payload: fetch(`${SERVICE_URL}/shopping-carts`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const loadShoppingCart = (userId) => {\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_LOAD_SHOPPING_CART,\n            payload: fetch(`${SERVICE_URL}/shopping-carts?filters[$and][0][users_id][$eq]=` + userId, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const disConnectionMerchant = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_SAVE_MERCHANT_CONNECTION,\n            payload: fetch(`${SERVICE_URL}/residents/disconnect-merchant`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const unSubscribeMerchant = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_UNSUBSCRIBE,\n            payload: fetch(`${SERVICE_URL}/public/unsubscribe`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const unsubscribeBeforeConnect = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_UNSUBSCRIBE,\n            payload: fetch(`${SERVICE_URL}/public/unsubscribe-before-connect`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n\n\nexport const loadConnectedTotal = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_TOTAL_CONNECTED,\n            payload: fetch(`${SERVICE_URL}/public/total-connected`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const confirmConnection = (data) => {\n    return (dispatch, getState) => {\n\n        return dispatch({\n            type: ADMIN_CONFIRM_CONNECTION,\n            payload: fetch(`${SERVICE_URL}/public/confirm-connected`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify(data),\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const getAddressByType = (loginType) => {\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_GET_ADDRESS_BY_TYPE,\n            payload: fetch(`${SERVICE_URL}/residents/get-address-by-type?type=` + loginType, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const checkBusinessProfile = () => {\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_CHECK_BUSINESS_PROFILE,\n            payload: fetch(`${SERVICE_URL}/residents/check-business-profile`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const sendPasswordBeforeDeleteAccount = () => {\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_CHECK_BUSINESS_PROFILE,\n            payload: fetch(`${SERVICE_URL}/residents/send-password-before-delete-account`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify({})\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const getHighRiseInfo = (email, type = 'C') => {\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_GET_HIGHRISE_INFO,\n            payload: fetch(`${SERVICE_URL}/residents/get-highrise-binding`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email,\n                    type\n                })\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const removeHighRiseBinding = (userId, userPropertyId) => {\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_GET_HIGHRISE_INFO,\n            payload: fetch(`${SERVICE_URL}/residents/remove-highrise-binding`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    userId, userPropertyId\n                })\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const removeNoDelivery = (consumerId, merchantId, userPropertiesId) => {\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_GET_HIGHRISE_INFO,\n            payload: fetch(`${SERVICE_URL}/residents/remove-no-delivery`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    consumerId,\n                    merchantId,\n                    userPropertiesId\n                })\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n\nexport const getHighRiseBusinessInfo = (email) => {\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_GET_HIGHRISE_BUSINESS_INFO,\n            payload: fetch(`${SERVICE_URL}/public/get-business-highrise`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email,\n                })\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchTemplates = (ownerId, { page = 1, pageSize = 10 }) => {\n    const start = (page - 1) * pageSize;\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_FETCH_ACTION,\n            payload: fetch(`${SERVICE_URL}/templates?pagination[page]=${start}&pagination[pageSize]=${pageSize}&filters[$and][0][owner_id][$eq]=${ownerId}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const fetchTemplate = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: ADMIN_FETCH_ACTION,\n            payload: fetch(`${SERVICE_URL}/templates/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveTemplate = (data) => {\n\n    const jsonData = {\n        data: data\n    }\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = data.id\n            ? `${SERVICE_URL}/templates/${data.id}`\n            : `${SERVICE_URL}/templates`;\n\n        console.log('save templates=' + JSON.stringify(data));\n        return dispatch({\n            type: ADMIN_SAVE_ACTION,\n            payload: fetch(url, {\n                body: JSON.stringify(jsonData),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: data.id ? 'PUT' : 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const deleteTemplate = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_DELETE_ACTION,\n            payload: fetch(`${SERVICE_URL}/templates/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'DELETE',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const deleteCampaign = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const data = {\n            data: {\n                IsDeleted: 1\n            }\n        }\n\n        return dispatch({\n            type: ADMIN_DELETE_ACTION,\n            payload: fetch(`${SERVICE_URL}/email-campaigns/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'PUT',\n                body: JSON.stringify(data)\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const createCampaigns = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = `${SERVICE_URL}/email-campaign/save`;\n\n        console.log('save templates=' + JSON.stringify(data));\n        return dispatch({\n            type: ADMIN_SAVE_ACTION,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchFlyers = (ownerId, { page = 1, pageSize = 10 }) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const start = (page - 1) * pageSize;\n        console.log('..fetch flyer..', token);\n        return dispatch({\n            type: ADMIN_FETCH_ACTION,\n            payload: fetch(\n                `${SERVICE_URL}/flyers?sort=id:DESC&pagination[page]=${start}&pagination[pageSize]=${pageSize}&filters[$and][0][ownerId][$eq]=${ownerId}&publicationState=preview&populate=*`,\n                {\n                    headers: token ? {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    } : {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'GET',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchFlyer = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        console.log('..fetch flyer..', token);\n\n        return dispatch({\n            type: ADMIN_FETCH_ACTION,\n            payload: fetch(`${SERVICE_URL}/flyers/${id}?populate=*`, {\n                headers: token ? {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                } : {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveFlyers = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = `${SERVICE_URL}/flyers/save`;\n\n        console.log('save flyer=' + JSON.stringify(data));\n        return dispatch({\n            type: ADMIN_SAVE_ACTION,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const deleteFlyer = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_DELETE_COUPON,\n            payload: fetch(`${SERVICE_URL}/flyers/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'DELETE',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const batchImportCompany = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const url = `${SERVICE_URL}/residents/batch-import`;\n        return dispatch({\n            type: ADMIN_SAVE_ACTION,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveUserPreference = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const url = data.id && data.id > 0\n            ? `${SERVICE_URL}/user-preferences/${data.id}`\n            : `${SERVICE_URL}/user-preferences`;\n\n        return dispatch({\n            type: ADMIN_SAVE_ACTION,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: data.id && data.id > 0 ? 'PUT' : 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchUserPreference = (userId) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_ACTION,\n            payload: fetch(`${SERVICE_URL}/user-preferences?filters[$and][0][users_id][$eq]=${userId}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchEvent = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_FETCH_ACTION,\n            payload: fetch(`${SERVICE_URL}/events/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveEvent = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = data.id && data.id > 0\n            ? `${SERVICE_URL}/events/${data.id}`\n            : `${SERVICE_URL}/events`;\n\n        console.log('save events=' + JSON.stringify(data));\n        return dispatch({\n            type: ADMIN_SAVE_ACTION,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: data.id && data.id > 0 ? 'PUT' : 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchEvents = (ownerId, { page = 1, pageSize = 10 }) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const start = (page - 1) * pageSize;\n\n        return dispatch({\n            type: ADMIN_FETCH_ACTION,\n            payload: fetch(\n                `${SERVICE_URL}/events?pagination[page]=${start}&pagination[pageSize]=${pageSize}&filters[$and][0][ownerId][$eq]=${ownerId}`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    method: 'GET',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const deleteEvent = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: ADMIN_DELETE_ACTION,\n            payload: fetch(`${SERVICE_URL}/events/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'DELETE',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const importCustomer = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const url = `${SERVICE_URL}/residents/import-customer`;\n        return dispatch({\n            type: ADMIN_SAVE_ACTION,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};","import { SERVICE_URL, PARTNER_TOKEN } from '../../constants';\nimport { getNavigatorLocation } from '../../utils/mapUtils';\nimport {\n    DELETE_ACCOUNT,\n    DELETE_INMATE,\n    FETCH_INMATES,\n    GET_USER_LOCATION,\n    GET_USER_PROPERTY,\n    RESEND_EMAIL_VERIFICATION_CODE,\n    RESEND_MOBILE_VERIFICATION_CODE,\n    SAVE_INMATE,\n    SAVE_USER_PROPERTY,\n    SEND_CONTACT_FORM,\n    TOGGLE_VERIFICATION_MODAL,\n    UPDATE_ACCOUNT,\n    FETCH_USER_PROPERTIES,\n    SAVE_ADDITIONAL_ADDRESS,\n    DELETE_ADDITIONAL_ADDRESS,\n    SAVE_USER_PROPERTIES_DATA,\n    SAVE_SECONDORY_PROPERTY,\n    CHANGE_PROPERTY_COLOR,\n    CANCEL_CHANGE_PROPERTY_COLOR,\n    CANCEL_DISPLAY_BUSINESS,\n    CANCEL_DISPLAY_HIGHRISE,\n    SEND_VERIFICATION_CODE,\n    CANCEL_DISPLAY_NODELIVERY,\n    SHOW_PREFERENCE_FORM\n} from '../actionTypes';\n\n\nexport const getUserLocation = () => {\n    return {\n        type: GET_USER_LOCATION,\n        payload: getNavigatorLocation(),\n    };\n};\n\nexport const sendContactForm = (data) => {\n    if (data != null && data != undefined) {\n        data['tenant'] = PARTNER_TOKEN;\n        console.log('send contact form' + JSON.stringify(data));\n    }\n    return (dispatch) => {\n        return dispatch({\n            type: SEND_CONTACT_FORM,\n            payload: fetch(`${SERVICE_URL}/contacts/saveContactUs?tenant=${PARTNER_TOKEN}`, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const changePropertyColor = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        return dispatch({\n            type: CHANGE_PROPERTY_COLOR,\n            payload: fetch(`${SERVICE_URL}/residents/change-property-color`, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const cancelChangePropertyColor = () => {\n    return {\n        type: CANCEL_CHANGE_PROPERTY_COLOR,\n    };\n};\n\nexport const showPreferenceForm = (isShow) => {\n    return {\n        type: SHOW_PREFERENCE_FORM,\n        payload: {\n            isShow\n        }\n    };\n};\nexport const cancelShowBusinessInfo = () => {\n    return {\n        type: CANCEL_DISPLAY_BUSINESS,\n    };\n}\nexport const cancelShowHighRiseInfo = () => {\n    return {\n        type: CANCEL_DISPLAY_HIGHRISE,\n    };\n}\nexport const cancelShowNoDelivery = () => {\n    return {\n        type: CANCEL_DISPLAY_NODELIVERY,\n    };\n}\n\nexport const deleteAccount = (verifyCode) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: DELETE_ACCOUNT,\n            payload: fetch(`${SERVICE_URL}/residents/delete-account`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({\n                    verifyCode: verifyCode\n                }),\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const fetchInmates = (propertyId) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: FETCH_INMATES,\n            payload: fetch(`${SERVICE_URL}/residents/inmateslistById?propertyId=${propertyId}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const deleteUserAdditionalAddress = (userPropertyId, propertyId) => {\n    console.log('1=' + userPropertyId + '2=' + propertyId);\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: DELETE_ADDITIONAL_ADDRESS,\n            payload: fetch(`${SERVICE_URL}/user-properties/delete-user-property`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({\n                    userPropertyId: userPropertyId,\n                    propertyId: propertyId\n                }),\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n}\nexport const deleteUserAdditionalAddressById = (propertyId) => {\n    console.log('2=' + propertyId);\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: DELETE_ADDITIONAL_ADDRESS,\n            payload: fetch(`${SERVICE_URL}/user-properties/delete-user-property-by-id`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({\n                    propertyId: propertyId\n                }),\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n}\nexport const fetchUserProperties = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: FETCH_USER_PROPERTIES,\n            payload: fetch(`${SERVICE_URL}/user-properties/list-all`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const getInmate = (id, propertyId) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: FETCH_INMATES,\n            payload: fetch(`${SERVICE_URL}/residents/inmates/get/${id}?propertyId=` + propertyId, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveInmate = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        const url = data.id\n            ? `${SERVICE_URL}/residents/inmates/save/${data.id}?tenant=${PARTNER_TOKEN}`\n            : `${SERVICE_URL}/residents/inmates/save?tenant=${PARTNER_TOKEN}`;\n\n        return dispatch({\n            type: SAVE_INMATE,\n            payload: fetch(url, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const deleteInmate = (id, propertyId) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: DELETE_INMATE,\n            payload: fetch(`${SERVICE_URL}/residents/inmates/delete/${id}?propertyId=${propertyId}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'DELETE',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const getUserPropertyById = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: GET_USER_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/residents/property/get?id=${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const getUserProperty = (loginType) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: GET_USER_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/residents/property/get?loginType=` + loginType, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveUserProperty = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: SAVE_USER_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/residents/property/save?tenant=${PARTNER_TOKEN}`, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n\nexport const saveAdditionalAddress = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: SAVE_ADDITIONAL_ADDRESS,\n            payload: fetch(`${SERVICE_URL}/user-properties/save-property`, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveUserPropertyData = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: SAVE_USER_PROPERTIES_DATA,\n            payload: fetch(`${SERVICE_URL}/user-properties/save-user-property`, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const resendMobileVerificationCode = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: RESEND_MOBILE_VERIFICATION_CODE,\n            payload: fetch(\n                `${SERVICE_URL}/residents/resend-mobile-verification-code?tenant=${PARTNER_TOKEN}`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    method: 'POST',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n\n\nexport const sendVerificationCodeByMobileNumber = (code, mobileNumber) => {\n    return (dispatch, getState) => {\n        // const token = getState().auth.jwt;\n        const data = {\n            code,\n            mobileNumber\n        }\n        return dispatch({\n            type: SEND_VERIFICATION_CODE,\n            payload: fetch(\n                `${SERVICE_URL}/public/send-verification-code`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(data),\n                    method: 'POST',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const resendMobileVerificationCodeByMobileNumber = (mobileNumber) => {\n    return (dispatch, getState) => {\n        // const token = getState().auth.jwt;\n\n        return dispatch({\n            type: RESEND_MOBILE_VERIFICATION_CODE,\n            payload: fetch(\n                `${SERVICE_URL}/public/resend-mobile-verification-code-mobile-number?mobileNumber=${mobileNumber}`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    method: 'POST',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const resendEmailVerificationCode = () => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: RESEND_EMAIL_VERIFICATION_CODE,\n            payload: fetch(\n                `${SERVICE_URL}/residents/resend-email-verification-code?tenant=${PARTNER_TOKEN}`,\n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${token}`,\n                    },\n                    method: 'POST',\n                },\n            )\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const toggleVerificationModal = () => {\n    return { type: TOGGLE_VERIFICATION_MODAL };\n};\n\nexport const updateAccount = (data) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: UPDATE_ACCOUNT,\n            payload: fetch(`${SERVICE_URL}/residents/update/self?tenant=${PARTNER_TOKEN}`, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'PUT',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const saveBatchProperties = (data) => {\n    // console.log('......saving batch 111...' + JSON.stringify(data));\n\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n\n        return dispatch({\n            type: SAVE_SECONDORY_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/residents/create-properties`, {\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n}","import { SERVICE_URL, PARTNER_TOKEN } from '../../constants';\nimport {\n    AUTH_CHANGE_PASSWORD_ALT,\n    AUTH_CHANGE_PASSWORD,\n    AUTH_LOGIN,\n    AUTH_LOGOUT,\n    AUTH_RESET_PASSWORD,\n    AUTH_RESET_PASSWORD_VERIFY,\n    AUTH_GET_ME\n} from '../actionTypes';\nimport md5 from 'md5';\nexport const loginUser = (identifier, password, loginAs) => {\n    return {\n        type: AUTH_LOGIN,\n        payload: fetch(`${SERVICE_URL}/public/login?tenant=${PARTNER_TOKEN}`, {\n            body: JSON.stringify({\n                identifier,\n                password,\n                loginAs\n            }),\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n        })\n            .then((r) => r.json())\n            .then((responseData) => {\n                if (responseData.statusCode >= 300) {\n                    return Promise.reject(responseData);\n                } else {\n                    return responseData;\n                }\n            }),\n    };\n};\n\nexport const logoutUser = () => {\n    return {\n        type: AUTH_LOGOUT,\n        payload: new Promise((resolve) => resolve()),\n    };\n};\n\nexport const changePassword = (password) => {\n    return (dispatch, getState) => {\n        let token = getState().auth.jwt;\n        console.log('password: =' + password + ' token=' + token);\n        return dispatch({\n            type: AUTH_CHANGE_PASSWORD,\n            payload: fetch(`${SERVICE_URL}/residents/change-password?tenant=${PARTNER_TOKEN}`, {\n                body: JSON.stringify({\n                    password,\n                }),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\n\nexport const iOSChangePassword = (mobileNumber, password) => {\n    const hash = md5('29' + mobileNumber + '34' + password + '046');\n    return (dispatch) => {\n        return dispatch({\n            type: AUTH_CHANGE_PASSWORD_ALT,\n            payload: fetch(`${SERVICE_URL}/public/ios-change-password?tenant=${PARTNER_TOKEN}`, {\n                body: JSON.stringify({\n                    mobileNumber,\n                    password,\n                    hash\n                }),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n\n};\n\nexport const resetPassword = (mobileNumber) => {\n    return (dispatch) => {\n        return dispatch({\n            type: AUTH_RESET_PASSWORD,\n            payload: fetch(`${SERVICE_URL}/public/reset-password?tenant=${PARTNER_TOKEN}`, {\n                body: JSON.stringify({\n                    mobileNumber,\n                }),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const verifyResetPassword = (mobileNumber, mobileVerificationCode) => {\n    return (dispatch) => {\n        return dispatch({\n            type: AUTH_RESET_PASSWORD_VERIFY,\n            payload: fetch(`${SERVICE_URL}/public/verify-reset-password?tenant=${PARTNER_TOKEN}`, {\n                body: JSON.stringify({\n                    mobileNumber,\n                    mobileVerificationCode,\n                }),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\nexport const getMe = (loginType) => {\n    return (dispatch, getState) => {\n        let token = getState().auth.jwt;\n        console.log('..get me..token..' + token);\n        return dispatch({\n            type: AUTH_GET_ME,\n            payload: fetch(`${SERVICE_URL}/residents/get-me?loginType=` + loginType, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};","import { SERVICE_URL, PARTNER_TOKEN } from '../../constants';\nimport {\n    AUTH_REGISTER,\n    GET_INSTITUTE,\n    REGISTER_PROPERTY,\n    REGISTRATION_RESET_FORM,\n    REGISTRATION_VERIFY_ACCOUNT,\n    SET_PROPERTY_REGISTRATION_FORM,\n    SET_EDIT_MODE,\n} from '../actionTypes';\n\nexport const getInstitute = (email) => {\n    return {\n        type: GET_INSTITUTE,\n        payload: fetch(`${SERVICE_URL}/institutions/allowed?tenant=${PARTNER_TOKEN}`, {\n            method: 'POST',\n            body: JSON.stringify({\n                email,\n            }),\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((r) => r.json())\n            .then((responseData) => {\n                if (responseData.statusCode >= 300) {\n                    return Promise.reject(responseData);\n                } else {\n                    return responseData;\n                }\n            }),\n    };\n};\n\nexport const registerProperty = (data) => {\n    return (dispatch) => {\n        return dispatch({\n            type: REGISTER_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/public/register-property?tenant=${PARTNER_TOKEN}`, {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const verifyAccount = (data) => {\n    return {\n        type: REGISTRATION_VERIFY_ACCOUNT,\n        payload: fetch(`${SERVICE_URL}/public/verify?tenant=${PARTNER_TOKEN}`, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n        })\n            .then((r) => r.json())\n            .then((responseData) => {\n                if (responseData.statusCode >= 300) {\n                    return Promise.reject(responseData);\n                } else {\n                    return responseData;\n                }\n            }),\n    };\n};\n\nexport const resetRegistrationForm = () => {\n    return {\n        type: REGISTRATION_RESET_FORM,\n    };\n};\n\nexport const registerUser = (data) => {\n    console.log('Do registration, data=' + JSON.stringify(data));\n    return {\n        type: AUTH_REGISTER,\n        payload: fetch(`${SERVICE_URL}/public/register?tenant=${PARTNER_TOKEN}`, {\n            body: JSON.stringify(data),\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n        })\n            .then((r) => r.json())\n            .then((responseData) => {\n                if (responseData.statusCode >= 300) {\n                    return Promise.reject(responseData);\n                } else {\n                    //do get me\n                    console.log('..register return..' + JSON.stringify(responseData));\n\n                    return responseData;\n                }\n            }),\n    };\n};\n\nexport const setPropertyRegistrationForm = (data) => {\n    return {\n        type: SET_PROPERTY_REGISTRATION_FORM,\n        payload: new Promise((resolve) => {\n            // console.log('setPropertyRegistrationForm.....' + JSON.stringify(data));\n            resolve(data);\n        }),\n    };\n};\n\nexport const setEditMode = (data) => {\n    return {\n        type: SET_EDIT_MODE,\n        // payload: new Promise((resolve) => {\n        //     // console.log('set edit mode.....' + JSON.stringify(data));\n        //     resolve(data);\n        // }),\n    };\n};\n\nexport const isPropertyRegistered = (email) => {\n    return (dispatch) => {\n        return dispatch({\n            type: REGISTER_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/public/is-property-registered?tenant=${PARTNER_TOKEN}`, {\n                method: 'POST',\n                body: JSON.stringify({ email }),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const isMobileRegistered = (mobileNumber) => {\n    return (dispatch) => {\n        return dispatch({\n            type: REGISTER_PROPERTY,\n            payload: fetch(`${SERVICE_URL}/public/is-mobile-registered`, {\n                method: 'POST',\n                body: JSON.stringify({ mobileNumber }),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst AboutUs = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content about-us\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>About KloserToYou</Col>\n                    </Row>\n                    <p>\n                        <a href='https://klosertoyou.com/' target=\"_blank\"> KloserToYou </a> is an extension of <a href='https://www.alphc.com/' target=\"_blank\">Alphabet Communication™ (AlphC)™</a>, our <a href='https://www.alphc.com/patents' target=\"_blank\">IP and technology </a> with <a href='https://www.newswire.ca/news-releases/alphabet-communication-patent-granted-by-the-uspto-we-have-the-ability-to-map-the-global-population-and-connect-all-humanity-668560533.html' target=\"_blank\">infinite possibilities</a>.  KloserToYou has created a communication breakthrough that creates a transparent and authenticated email for every business location. Based on the location and name of each business a geo-coded communication network is created that is closed-ended, mapped, secure, authenticated and permits communication between the business and their customers.\n\n                        <br />\n                        <br />\n                        Example of a geo-coded digitized business email:\n                        <br />\n                        <br />\n                    </p>\n                    <p style={{ textAlign: \"center\" }}>\n                        <b>(address)</b>125-western-battery-road-toronto-ontario-m6k-3r8<b>@business name </b>(AlphC)<b>.com </b><br />\n                        or<br />\n                        <b>125-western-battery-road-toronto-ontario-m6k-3r8@AlphC.com</b>\n                        <br />\n                        <br />\n                    </p>\n                    <p>\n                        The identity of all users is authenticated, only verified customers, can access this address based mapped-communication network with businesses. Customers remain in full control over which business they wish to connect or disconnect. This provides both business and customers with transparency on who they are communicating and connected, for mutual benefit.\n                        <br />\n                        <br />\n\n                        <a href='https://klosertoyou.com/' target=\"_blank\">KloserToYou</a> marketing breakthrough opens new-opportunities that have not existed before for small and medium sized business(B2C) to connect with customers and increase their revenue. The possibilities are endless. Customers can save money by receiving targeted and timed-special offers from business they are interested in and that are close to them. This sustains revenue from businesses in the neighborhood and has a mutual benefit. Customers connecting with business would get connected by their address@businessname.com this establishes a closed network that eliminates unwanted and unsolicited mail and advertising.\n                        <br />\n                        <br />\n                        Example of a geo-coded Personal digitized email:\n                        <br />\n                        <br />\n                    </p>\n                    <p style={{ textAlign: \"center\", fontSize: \"12px\" }}>\n                        50-western-battery-road-toronto-ontario-m6k-3p1@AlphC.com <br />\n                        89-western-battery-road-toronto-ontario-m6k-3n9@AlphC.com\n                        <br />\n                        <br />\n                        <b> An Example, AlphC IP showing Mapped Geo-Coded Addresses </b>\n                        <br />\n                    </p>\n                    <Row>\n                        <Col className=\"text-center\">\n                            <figure className=\"figure border_img\">\n                                <img\n                                    src=\"/assets/img/about_us.jpg\"\n                                    className=\"figure-img img-fluid rounded\"\n                                    alt=\"Simple one-button alert for residents and first responders\"\n                                />\n                            </figure>\n                        </Col>\n                    </Row>\n                    <p className=\"figure-caption\">\n                        KloserToYou maps and shows all business in your area. Allowing customers to connect or disconnect to them based on need\n                    </p>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default AboutUs;\n","import {useFormik} from 'formik';\nimport React, {useCallback, useState,useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {\n    Alert,\n    Button,\n    Col,\n    Form,\n    FormFeedback,\n    Input,\n    InputGroup,\n    Row,\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport {sendContactForm} from '../../../../redux/actionCreators/appActionCreators';\nimport {toastr} from 'react-redux-toastr';\n// import {\n//     GoogleReCaptchaProvider,\n//     GoogleReCaptcha\n//   } from \"react-google-recaptcha-v3\"\n\nconst validationSchema = Yup.object({\n    name: Yup.string().required('This field is required'),\n    email: Yup.string()\n        .email('Email address is not valid')\n        .required('This field is required'),\n    phone: Yup.string().required('This field is required'),\n    message: Yup.string().required('This field is required'),\n});\nconst SITE_KEY = \"6Ldf8uUdAAAAAFk2BsP18xvLR5CdEJ6b0O528oSH\";\n\nconst ContactForm = () => {\n    const [alert, setAlert] = useState(false);\n    const dispatch = useDispatch();\n\n    const [name,setName] = useState('');\n    const [email,setEmail] = useState('');\n    const [phone,setPhone] = useState('');\n    const [message,setMessage] = useState('');\n\n    // const formik = useFormik({\n    //     initialValues: {\n    //         name: '',\n    //         email: '',\n    //         phone: '',\n    //         message: '',\n    //     },\n    //     validationSchema,\n    //     validateOnBlur: true,\n    //     onSubmit: (values) => {\n    //         // submitHelpForm(values);\n    //     },\n    // });\n    const [token, setToken] = useState();\n\n    // const { executeRecaptcha } = useGoogleReCaptcha();\n\n    // const [token, setToken] = useState();\n    // Create an event handler so you can call the verification on button click event or form submit\n    // const handleReCaptchaVerify = useCallback(async (values) => {\n    //     if (!executeRecaptcha) {\n    //         console.log('Execute recaptcha not yet available');\n    //         return;\n    //     }\n\n    //     const token = await executeRecaptcha('yourAction');\n    //     // Do whatever you want with the token\n    //     // dispatch(sendContactForm(values))\n    //     // .then(() => {\n    //     //     formik.resetForm();\n    //     //     setAlert(!alert);\n    //     // })\n    //     // .finally(() => {});\n    // }, [alert, dispatch, formik]);\n\n    // const handleOnClick = e => {\n    //     e.preventDefault();\n    //     setLoading(true);\n    //     window.grecaptcha.ready(() => {\n    //       window.grecaptcha.execute(SITE_KEY , { action: 'submit' }).then(token => {\n    //         // submitData(token);\n    //         values['token'] = token;\n    //         dispatch(sendContactForm(values))\n    //         .then(() => {\n    //             formik.resetForm();\n    //             setAlert(!alert);\n    //         })\n    //         .finally(() => {});\n\n    //       });\n    //     });\n    // }\n    // useEffect(() => {\n    //     const loadScriptByURL = (id, url, callback) => {\n    //       const isScriptExist = document.getElementById(id);\n    \n    //       if (!isScriptExist) {\n    //         var script = document.createElement(\"script\");\n    //         script.type = \"text/javascript\";\n    //         script.src = url;\n    //         script.id = id;\n    //         script.onload = function () {\n    //           if (callback) callback();\n    //         };\n    //         document.body.appendChild(script);\n    //       }\n    \n    //       if (isScriptExist && callback) callback();\n    //     }\n    \n    //     // load the script by passing the URL\n    //     loadScriptByURL(\"recaptcha-key\", `https://www.google.com/recaptcha/api.js?render=${SITE_KEY}`, function () {\n    //       console.log(\"Script loaded!\");\n    //     });\n    //   }, []);\n      const [loading, setLoading] = useState(false);\n\n    // const submitHelpForm = useCallback(\n    //     (values) => {\n    //         handleReCaptchaVerify(values);\n    //     },\n    //     [],\n    // );\n    function validateEmail (emailAdress)\n    {\n      let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (emailAdress.match(regexEmail)) {\n        return true; \n      } else {\n        return false; \n      }\n    }\n    const handleOnSubmit = e => {\n        e.preventDefault()\n        const form = e.target\n        // setServerState({ submitting: true })\n        setLoading(true);\n        const data = {\n            name,\n            email,\n            phone,\n            message\n        }\n        //checking email and phone\n        if(email === null || email === undefined || !validateEmail(email) ){\n            toastr.error(\"Error!\",\"Please enter a valid e-mail address\");\n            setLoading(false);\n            return;\n        }\n        if(phone === null || phone === undefined || phone.length<6){\n            toastr.error(\"Error!\",\"Please enter a valid phone number\");\n            setLoading(false);\n            return;       \n        }\n        \n        console.log(data, \"data\");\n        dispatch(sendContactForm(data))\n        .then((resp) => {\n            // formik.resetForm();\n            console.log('return ...' + JSON.stringify(resp));\n            if(resp.value.success){\n                setAlert(!alert);\n                // toastr.success(\"Message Sent!\",\"Your message has been sent, thanks for contact us!\");\n            }else{\n                toastr.error(\"Error!\",\"Message send failed!\");\n            }\n            \n        })\n        .finally(() => {\n            setName('');\n            setEmail('');\n            setPhone('');\n            setMessage('');\n            setLoading(false);\n        });\n        // axios({\n        //   method: \"post\",\n        //   url: \"https://getform.io/f/b22f10be-75a6-40c0-9ec6-3519dc38fe29\",\n        //   data\n        // })\n        //   .then(r => {\n        //     handleServerResponse(true, \"Thanks!\", form)\n        //   })\n        //   .catch(r => {\n        //     handleServerResponse(false, r.response.data.error, form)\n        //   })\n    }\n    // const {\n    //     values,\n    //     touched,\n    //     errors,\n    //     handleChange,\n    //     handleBlur,\n    //     handleSubmit,\n    // } = formik;\n\n    return (\n       \n        <div>\n            <p className=\"text-muted\">\n                Please feel free to contact us for more information\n            </p>\n            <Alert\n                color=\"success\"\n                isOpen={alert}\n                toggle={() => setAlert(!alert)}>\n                Your message has been sent. We will get in touch with you soon.\n            </Alert>\n            <Form className=\"help-Form\" onSubmit={handleOnSubmit}>\n                <InputGroup className=\"mb-3\">\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        name={'name'}\n                        value={name}\n                        onChange={(e)=>setName(e.target.value)}\n                        // onBlur={handleBlur}\n                        // invalid={touched.name && errors.name}\n                    />\n                    {/* <FormFeedback>{errors.name}</FormFeedback> */}\n                </InputGroup>\n\n                <InputGroup className=\"mb-3\">\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Email\"\n                        name={'email'}\n                        value={email}\n                        onChange={(e)=>setEmail(e.target.value)}\n                        // onBlur={handleBlur}\n                        autoComplete=\"email\"\n                        // invalid={touched.email && errors.email}\n                    />\n                    {/* <FormFeedback>{errors.email}</FormFeedback> */}\n                </InputGroup>\n                <InputGroup className=\"mb-3\">\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Mobile Phone\"\n                        name={'phone'}\n                        value={phone}\n                        onChange={(e)=>setPhone(e.target.value)}\n                        // onBlur={handleBlur}\n                        autoComplete=\"phone\"\n                        // invalid={touched.phone && errors.phone}\n                    />\n                    {/* <FormFeedback>{errors.phone}</FormFeedback> */}\n                </InputGroup>\n\n                <Input\n                    type=\"textarea\"\n                    name={'message'}\n                    id=\"textarea-input\"\n                    rows=\"5\"\n                    placeholder=\"Message...\"\n                    value={message}\n                    onChange={(e)=>setMessage(e.target.value)}\n                    // onBlur={handleBlur}\n                    // invalid={touched.message && errors.message}\n                />\n                {/* <FormFeedback>{errors.message}</FormFeedback> */}\n            {/* <Row>\n                <Col>\n                <GoogleReCaptcha\n                    onVerify={token => {\n                        setToken(token)\n                    }}\n                    />\n                </Col>\n            </Row> */}\n                <Row className=\"contact-us-submit-container\">\n                    <Col>\n                        <Button\n                            type={'submit'}\n                            outline\n                            block\n                            disabled={loading}\n                            className=\"float-right my-3\">\n                            {loading ? 'Submitting...' : 'Submit'}\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n\n    );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport {CardBody, Col, Container, Row} from 'reactstrap';\nimport ContactForm from './contact/ContactForm';\n// import { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst ContactUs = () => {\n    return (\n        <main>\n            <Header />\n        <div className=\"full-screen contact-us\">\n            <Container>\n                <Row className=\"section-title\">\n                    <Col>Contact Us</Col>\n                </Row>\n                <Row>\n                    <Col md={12} lg={6}>\n                        <CardBody className=\"contact text-center\">\n                            <h3 className=\"my-4 pb-2\">Contact information</h3>\n                            <ul className=\"text-lg-left list-unstyled ml-4\">\n                                <li>\n                                    <p>\n                                        <i className=\"fa fa-envelope pr-2\" />\n                                        anything@alphc.com\n                                    </p>\n                                </li>\n                            </ul>\n                            <hr className=\"hr-light my-4\" />\n                            <ul className=\"list-inline text-center list-unstyled\">\n                                <li className=\"list-inline-item\">\n                                    <a\n                                        href=\"https://www.instagram.com\"\n                                        className=\"p-2 fa-lg tw-ic\">\n                                        <i className=\"fa fa-twitter\" />\n                                    </a>\n                                </li>\n                                <li className=\"list-inline-item\">\n                                    <a\n                                        href=\"https://www.linkedin.com\"\n                                        className=\"p-2 fa-lg li-ic\">\n                                        <i className=\"fa fa-linkedin\" />\n                                    </a>\n                                </li>\n                                <li className=\"list-inline-item\">\n                                    <a\n                                        href=\"https://www.facebook.com\"\n                                        className=\"p-2 fa-lg ins-ic\">\n                                        <i className=\"fa fa-instagram\" />\n                                    </a>\n                                </li>\n                            </ul>\n                        </CardBody>\n                        {/*{*/}\n                        {/*    \"location\": {*/}\n                        {/*    \"lat\": 43.790261,*/}\n                        {/*    \"lng\": -79.3604798*/}\n                        {/*}*/}\n                        {/*}*/}\n                    </Col>\n                    <Col md={12} lg={6}>\n                        <ContactForm />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n        <Footer />\n        </main>\n    );\n};\nexport default ContactUs;\n","import React, { useState } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nimport {\n    CRow,\n    CTabs,\n    CTabContent,\n    CTabPane,\n    CNav,\n    CNavItem,\n    CNavLink,\n} from '@coreui/react';\nconst HowItWorks = () => {\n    const [activeTab, setActiveTab] = useState(0);\n    return (\n        <main>\n            <Header />\n            <div className=\"content how-it-works\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>How it works</Col>\n                    </Row>\n\n\n                    <CTabs activeTab=\"business_account\"\n                        onActiveTabChange={(idx) => setActiveTab(idx)}>\n                        <CNav variant=\"tabs\">\n                            <CNavItem>\n                                <CNavLink data-tab=\"business_account\">\n                                    Business Account\n                                </CNavLink>\n                            </CNavItem>\n                            <CNavItem>\n                                <CNavLink data-tab=\"personal_account\">\n                                    Personal Account\n                                </CNavLink>\n                            </CNavItem>\n                        </CNav>\n                        <CTabContent>\n                            <CTabPane data-tab=\"business_account\"  >\n                                <CRow active={activeTab === 0}>\n                                    <br />\n                                    <p>\n                                        1. Create your KloserToYou business account by entering your business address. A unique geo-coded email is created for each location and business name. Using AlphC three factor authentication verifies the identity of all users by their email, mobile number, and address location for B2C and B2B communication.\n                                        <br /><br />\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/b1.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n                                        <p className=\"figure-caption\">\n                                            KloserToYou geo-coded email creates a closed-ended, mapped, secure, authenticated communication network between businesses and their customers\n                                        </p>\n                                    </p>\n\n                                    <p>\n                                        <br /><br />\n                                        2. Switch to “Edit Mode” to add customer and send them notification to connect with the business.\n                                        <br /><br />\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/b2.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n                                        <p className=\"figure-caption\">\n                                            Edit mode (green) lets you add customer. Addresses remain grey when pending and turn blue when customer has accepted connection. Grey-dotted line shows your customer\n                                        </p>\n                                    </p>\n\n                                    <p>\n                                        <br /><br />\n                                        3. Customer receive an email or text message requesting “Connect with Us.” Technology and IP services provided by Alphabet Communication (AlphC)\n                                        <br /><br />\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/b3.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n\n                                        <p className=\"figure-caption\">\n                                            Customer can “connect” with business by entering their password or completing their profile, address, email, and mobile No. With KloserToYou customer remains in control and can unsubscribe and “disconnect” or connect with any business. Customer have a mapped location-view of all business they are connected to.\n                                        </p>\n                                    </p>\n\n                                    <p><br /><br />\n                                        4. “Connect with Us” lets you connect to the business.\n                                        <br /><br />\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/b4.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n\n                                        <p className=\"figure-caption\">\n                                            Existing user can connect by entering their password. New users can “GET CODE,” verify, create password, and complete registration and connect to the business.\n                                        </p>\n                                    </p>\n\n                                    <p>\n\n                                        <br /><br />\n                                        5. “Connect Mode” lets you send panned-targeted email and timed communication to your customers.\n                                        <br /><br />\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/b5.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n                                        <p className=\"figure-caption\">\n                                            Time sensitive special offers that are targeted increase business revenue. For example, special food offers such a half-price pizza from 3-5pm.  This targeted and address- based communication network has many possibilities for businesses\n                                        </p>\n\n\n                                    </p>\n\n                                    <p>\n\n                                        <br /><br />\n                                        6. Custom design your targeted-email for maximum effect and increase your business revenue.\n                                        <br /><br />\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/b6.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n                                        <p className=\"figure-caption\">\n                                            KloserToYou direct-targeted customer communication network has many possibilities. Upload your weekly or time sensitive flyer. Increase your revenue and increase your visibility. Send special offers and stay connected with your customers!\n                                        </p>\n                                        <br />\n                                        There are many other benefits and connection possibilities for both business and customers on the KloserToYou platform, the above is but a brief summary of our infinite possibilities. We can be reach at anything@AlphC.com\n                                        <br /> <br /><br /><br />\n                                    </p>\n\n\n\n                                </CRow>\n                            </CTabPane>\n\n                            <CTabPane data-tab=\"personal_account\"  >\n                                <CRow active={activeTab === 1}>\n                                    <p>\n                                        <br />\n                                        1. KloserToYou personal account can be created when a connect link is received from the business or via the login-in process. Customers living or working within very close proximity of a business may select “NO DELIVERY” and your address is not required.\n                                        <br /><br />\n\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/p1.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n\n                                        <p className=\"figure-caption\">\n                                            KloserToYou business connect link can be sent via email or text to customers.\n                                        </p>\n\n\n\n                                    </p>\n\n                                    <p>\n                                        <br /><br />\n                                        2. “Connect with Us” link received by a customer via email also lets you connect to the business (See No 3. How it works - Business Account).\n                                        <br /><br />\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/b4.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n                                        <p className=\"figure-caption\">\n                                            Existing user can connect by entering their password. New users can “GET CODE,” verify, create password, and complete registration and connect to the business.\n                                        </p>\n                                    </p>\n\n                                    <p>\n                                        <br /><br />\n                                        3. When you login to “Personal Account” your mapped-address appears and other businesses that are KloserToYou. The solid-line shows connection link to your business.\n                                        <br /><br />\n                                        <figure className=\"figure border_img\">\n                                            <img\n                                                src=\"/assets/img/how-it-works/p3.png\"\n                                                className=\"figure-img img-fluid rounded\"\n                                                alt=\"Simple one-button alert for residents and first responders\"\n                                            />\n\n                                        </figure>\n                                        <p className=\"figure-caption\">\n                                            Once connected to a business you can communicate with them. Customers are always in control you can, click on any business location to connect or disconnect.\n                                        </p>\n\n                                        <br /> <br />\n                                        KloserToYou marketing platform has created a revolutionary communication network that will benefit business and consumers. A transparent mapped communication network that eliminates unsolicited emails, this will change the marketing landscape keeping customers in control while helping small businesses. After all we all have an address.\n                                        <br /> <br />\n\n                                        Question and inquiries:  anything@AlphC.com <br />\n                                        Licensing our IP and Technology:  patents@AlphC.com\n                                        <br /> <br /><br /> <br />\n                                    </p>\n\n                                </CRow>\n                            </CTabPane>\n\n                        </CTabContent>\n                    </CTabs>\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default HowItWorks;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst NewsRelease = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content news-release\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>News Release</Col>\n                    </Row>\n                    August 8, 2017\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.newswire.ca/news-releases/alphabet-communication-aims-to-connect-every-address-and-make-the-world-safer-639131043.html\">\n                            https://www.newswire.ca/news-releases/alphabet-communication-aims-to-connect-every-address-and-make-the-world-safer-639131043.html\n                        </a>\n                    </p>\n                    January 10, 2018\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.newswire.ca/news-releases/alphabet-communication-patent-granted-by-the-uspto-we-have-the-ability-to-map-the-global-population-and-connect-all-humanity-668560533.html\">\n                            https://www.newswire.ca/news-releases/alphabet-communication-patent-granted-by-the-uspto-we-have-the-ability-to-map-the-global-population-and-connect-all-humanity-668560533.html\n                        </a>\n                    </p>\n                    September 12, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/alphc-our-journey-focus-part-15-shafin-valla\">\n                            https://www.linkedin.com/pulse/alphc-our-journey-focus-part-15-shafin-valla\n                        </a>\n                    </p>\n\n                    September 13, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/alphc-e-alert-app-part-25-shafin-valla\">\n                            https://www.linkedin.com/pulse/alphc-e-alert-app-part-25-shafin-valla\n                        </a>\n                    </p>\n                    September 14, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/future-targeted-first-responders-alerts-part-35-shafin-valla\">\n                            https://www.linkedin.com/pulse/future-targeted-first-responders-alerts-part-35-shafin-valla\n                        </a>\n                    </p>\n                    September 15, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/first-responders-benefits-2-way-communication-early-alert-valla\">\n                            https://www.linkedin.com/pulse/first-responders-benefits-2-way-communication-early-alert-valla\n                        </a>\n                    </p>\n                    September 16, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/alphc-vision-goals-part-55-shafin-valla\">\n                            https://www.linkedin.com/pulse/alphc-vision-goals-part-55-shafin-valla\n                        </a>\n                    </p>\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default NewsRelease;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst OurPromise = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content our-promise\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Our Promise</Col>\n                    </Row>\n                    <p>\n                        Protecting the privacy of individuals and the security of\n                        data is fundamental to us. There is a fine balance between\n                        state security and protecting the privacy and safety of\n                        citizens. We have all witnessed the erosion of privacy with\n                        our electronic devices. Our licensing agreements will\n                        specify opt-in use only. This means, individuals must\n                        specifically allow themselves to be included in the system\n                        to receive and send alerts or messages. Depending on your\n                        region the security of the state is always fundamental.\n                        Area-wide alerts can only be sent by licensed domain users\n                        using a geo-coded address within that geographical area or\n                        country, further enhancing secure communication. This\n                        ensures transparency and encourages user responsibility.\n                    </p>\n\n                    <p>\n                        AlphC IP is the next generation of emergency response\n                        technology. Our aim is to work with governments,\n                        institutions and agencies. We create a safer world for their\n                        communities and citizens.\n                    </p>\n\n                    <p>\n                        Please feel free to{' '}\n                        <a\n                            className=\"text-muted\"\n                            href=\"mailto:anything@alphabetcommunication.com\">\n                            contact us\n                        </a>{' '}\n                        for more information.\n                    </p>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default OurPromise;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\n\nimport Footer from './Footer';\nimport Header from './Header';\nconst OurStory = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content our-story\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Our Story</Col>\n                    </Row>\n                    <p>\n                        AlphC journey began in silence over five years ago with two\n                        lines and an @ symbol. The lines represented latitude and\n                        longitude.\n                    </p>\n\n                    <Row>\n                        <Col className=\"text-center\">\n                            <figure className=\"figure\">\n                                <img\n                                    alt=\"2 lines\"\n                                    src=\"/assets/img/our-story/our-story-1.png\"\n                                    className=\"figure-img img-fluid rounded mr-2\"\n                                />\n                                <img\n                                    alt=\"at symbol\"\n                                    src=\"/assets/img/our-story/our-story-2.png\"\n                                    className=\"figure-img img-fluid rounded\"\n                                />\n                            </figure>\n                        </Col>\n                    </Row>\n\n                    <p>\n                        With trademarks and three USPTO Patents Granted in 2018,\n                        2019 and 2020, we are now in a position to license our IP\n                        and technology to institutions and governments. All\n                        information post-testing is housed on the clients secure\n                        institutional or government servers. AlphC does not have\n                        access to this information.\n                    </p>\n\n                    <p>\n                        This site is specifically developed to permit testing and\n                        pilot-studies with our partners, prior to implementation\n                        within their regions.\n                    </p>\n\n                    <p>\n                        To license our IP and technology, you can contact us at{' '}\n                        <a className=\"text-muted\" href=\"mailto:anything@alphc.com\">\n                            anything@alphc.com\n                        </a>\n                    </p>\n\n                    <p>\n                        General inquiries can be sent to{' '}\n                        <a\n                            className=\"text-muted\"\n                            href=\"mailto:anything@alphabetcommunication.com\">\n                            anything@alphabetcommunication.com\n                        </a>\n                    </p>\n                </Container>\n            </div><Footer />\n        </main>\n    )\n        ;\n};\n\nexport default OurStory;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport ReactPlayer from 'react-player';\nimport {useHistory, useLocation} from 'react-router';\nimport {Modal, ModalBody, ModalHeader} from 'reactstrap';\n\n\nconst OurVideo = () => {\n    const {pathname: location} = useLocation();\n    const history = useHistory();\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    useEffect(() => {\n        if (location === '/our-video') setIsOpen(true);\n\n        return () => setIsOpen(false);\n    }, [location]);\n\n    const toggle = useCallback(() => {\n        setIsOpen(!isOpen);\n    }, [isOpen]);\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            backdrop={true}\n            onClosed={() => history.push('/')}\n            className={'video-modal-container'}>\n            <ModalHeader toggle={toggle} />\n            <ModalBody className={'video-container'}>\n                <ReactPlayer\n                    width={'100%'}\n                    height={'80vh'}\n                    url={'https://youtu.be/Cp4CSOacwDw'}\n                />\n            </ModalBody>\n        </Modal>\n    );\n};\n\nexport default OurVideo;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Patents = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content patents\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Patents</Col>\n                    </Row>\n\n                    <p>\n                        Alphabet Communication (AlphC) continues to revolutionize\n                        electronic communication every day by inventing world-class\n                        technology. The Company invests significant time and\n                        resources in research and development. To protect the\n                        Company’s R&D efforts, AlphC has vigorously developed a\n                        robust intellectual property portfolio all part of a\n                        strategy for protecting the innovations that make AlphC an\n                        industry leader in electronic communications and connecting\n                        people via their addresses. As an example, our IP can be\n                        used to connect and{' '}\n                        <a href=\"https://www.newswire.ca/news-releases/alphabet-communication-patent-granted-by-the-uspto-we-have-the-ability-to-map-the-global-population-and-connect-all-humanity-668560533.html\">\n                            map the global population\n                        </a>\n                        . AlphC gives a lifeline for governments to reach their\n                        citizens via their address linked to their mobile, a\n                        technological breakthrough for emergency communication and\n                        real-time census.{' '}\n                        <a href=\"https://www.alphc.com/our-promise\">Privacy</a> of\n                        the state and citizens is fundamental to our core values.\n                    </p>\n\n                    <p>\n                        Our technology further maps the rural world and its\n                        addresses based on their current country address\n                        designations (Lot, Plot No, etc.). This breakthrough gives\n                        3.5 billion people an address and connects over 1 billion\n                        addresses to their state. AlphC IP provides infinite\n                        possibilities and new knowledge to the world.\n                    </p>\n\n                    <p>\n\n\n                        AlphC’s products and services may be covered by U.S. Patent\n                        Nos.{' '}\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9860203.PN.&OS=PN/9860203&RS=PN/9860203\">\n                            9,860,203\n                        </a>\n                        ,\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=10,356,028.PN.&OS=PN/10,356,028&RS=PN/10,356,028\">\n                            10,356,028\n                        </a>\n                        ,\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=10659414.PN.&OS=PN/10659414&RS=PN/10659414\">\n                            10,659,414\n                        </a> and <a target='_blank' href=\"https://ppubs.uspto.gov/pubwebapp/static/pages/ppubsbasic.html\"> 11,444,904</a> {' '}\n                        , European Union (EU) Patent <a target='_blank' href=\"https://worldwide.espacenet.com/patent/search/family/060411925/publication/EP3466003A1?q=pn%3DEP3466003\">EP 3466003</a>,\n                        Australian Patent <a target='_blank' href=\"http://pericles.ipaustralia.gov.au/ols/auspat/applicationDetails.do?applicationNo=2017269953\">2017269953</a>,{' '}\n                        as well as other patents that are pending. <br /><br /> For additional\n                        information, please contact{' '}\n                        <a href=\"mailto:patents@alphc.com\">patents@alphc.com</a>.\n                    </p>\n                </Container>\n            </div><Footer />\n        </main>\n    );\n};\n\nexport default Patents;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nconst PrivacyPolicy = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Alphabet Communication Privacy Policy</Col>\n                    </Row>\n\n                    <p> Updated July 11, 2023\n\n                    </p> <p>Data Policy\n\n                    </p><p>This policy describes the information we process to support Alphc, KloserToYou and other products and features offered by Alphabet Communications, Inc. (AlphC).  Websites available at www.alphc.com and certain related online products and services, including mobile and/or tablet applications (collectively, “Products”), are wholly owned by Alphabet Communications, Inc., a California corporation, having offices at 603-125 Western Battery Rd., Toronto, Ontario, Canada M6K 3S2 (hereinafter “AlphC”).\n\n                    </p>  <p>To provide the Products, we must process information about you.  The types of information we collect depend on how you use our Products.  This Privacy Policy applies to our Products.  By accessing or using our Products, you are agreeing to this Privacy Policy and to our Terms of Use.  Do not use our Products if you do not agree to this Privacy Policy or to the Terms of Use.\n\n                    </p>  <p>AlphC reserves the right to modify, delete, and/or change this Privacy Policy at any time without prior notice.  Unless explicitly defined otherwise, the terms used in this Privacy Policy have the same meanings as in our Terms of Use, available at <a href='https://www.klosertoyou.com/terms-of-use' target='_blank'> https://www.klosertoyou.com/terms-of-use </a>.\n\n                    </p>  <p>Data We Collect\n\n                    </p>  <p>We may collect the content, communications, and other information you provide when you use our Products, including when you sign up for an account and message or communicate with other users/businesses.  This can include information in or about the content you provide (like metadata), such as location.  Some data (such as racial or ethnic origin, philosophical beliefs, or trade union membership) could be subject to special protections under the laws of your country.\n\n                    </p>  <p>We may collect information about the people, accounts, and businesses you are connected to and how you interact with them across our Products, such as people you communicate with or groups you are part of.  We also collect contact information, which we may use for things like connecting you to other users and/or businesses.\n\n                    </p>  <p>We may collect information about how you use our Products, such as the types of content you view or engage with; the features you use; the actions you take; the users and/or businesses you interact with; and the time, frequency, and duration of your activities.  For example, we may log when you're using and have last used our Products, and what content you view on our Products.  We may also collect information about how you use features.\n\n                    </p>  <p>We may also receive and analyze content, communications, and information that other users and/or businesses provide when they use our Products.  This can include information about you, such as when others send a message to you.\n\n                    </p>  <p>Device Information\n\n                    </p>  <p>We may collect information from and about the computers, phones, and other web-connected devices you use that integrate with our Products, and we may combine this information across different devices you use.  This may include information such as the operating system, hardware and software versions, battery level, signal strength, available storage space, browser type, app and file names and types, and plugins.  This may also include information about operations and behaviors performed on the device, unique identifiers, device IDs, and other identifiers, Bluetooth signals, and information about nearby Wi-Fi access points, beacons, and cell towers, information you allow us to receive through device settings you turn on, such as access to your GPS location, information such as the name of your mobile operator or ISP, language, time zone, mobile phone number, IP address, connection speed, and cookies stored on your device, including cookie IDs and settings.\n\n                    </p>  <p>How We Use Information We Collect\n                    </p>  <p>We use the information we have as described below and to provide and support the Products and related services described in the Terms of Use.\n\n                    </p>  <p>We may use third-party companies and individuals for the following reasons:\n                    </p>  <p>To facilitate our Products;\n                    </p>  <p>To provide our Products on our behalf;\n                    </p>  <p>To perform services related to our Products;\n                    </p>  <p>To assist us in analyzing how our Products are used; and\n                    </p>  <p>Third parties may have access to your Personal Data and to Log Data in order to perform tasks related to the above reasons.\n\n                    </p>  <p>AlphC's Products may make use of cookies. AlphC will not use cookies to store personally identifying information.  Additionally, third party code and libraries used by our Services may use cookies.  By using our Products, you agree to the use of cookies. If you refuse cookies, you may not be able to use some portions of our Products.\n\n                    </p>  <p>We keep personal information, including sensitive personal information, as long as we need it to provide our products, comply with legal obligations or protect our or other's interests. We decide how long we need information on a case-by-case basis.\n\n                    </p>  <p>Depending on where you live and subject to certain exceptions, you may have some or all of the following rights:\n                        <ul className='privacy_policy'>\n                            <li>Right to Know: The right to request that we disclose to you the Personal Information we collect, use, or disclose, and information about our data practices.\n                            </li><li>Right to Request Correction: The right to request that we correct inaccurate Personal Information that we maintain about you.\n                            </li><li>Right to Request Deletion: The right to request that we delete your Personal Information that we have collected from or about you.\n                            </li><li>Right to Opt Out of Targeted Advertising: The right to opt out of the processing of your Personal Information obtained from your activities on nonaffiliated websites or online applications for the purposes of targeted advertising.\n                            </li><li>Right to Non-Discrimination: The right not to receive discriminatory treatment for exercising your privacy rights.</li>\n                        </ul>\n                    </p>  <p>Security\n                    </p>  <p>We value your trust and strive to use commercially acceptable means of protecting your Personal Data. However, no method of electronic transmission or storage is completely without risk, and we cannot guarantee the absolute security of your Personal Data.\n\n                    </p>  <p>External Sites and Services\n                    </p>  <p>Our Services may contain links to external sites or services.  We have no control over and assume no responsibility for content, privacy policies, or practices of any external sites or services.  This Privacy Policy does not apply to external sites and services.\n\n                    </p>  <p>Children’s Privacy\n                    </p>  <p>We do not address anyone under the age of 13.  We do not knowingly collect personally identifiable information from anyone under the age of 13.  If we discover that a child under 13 has provided us with personal information, we will delete that information from our servers.  If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact us and we will take steps to remove the information.\n\n                    </p>  <p>Contact\n                    </p>  <p>If you have any questions about this Privacy Policy, you can reach us at anything@alphc.com.\n                    </p>  <p></p>\n\n                    <p>\n                        Copyright © 2022 - 2023 Alphabet Communications (AlphC), Inc. All\n                        rights reserved.\n                    </p>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default PrivacyPolicy;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nconst TermsOfUse = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content terms-of-use\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Alphabet Communication Terms of Use</Col>\n                    </Row>\n\n                    <p>Welcome to Alphabet Communication!  Products available at www.alphc.com (\"Products\") and certain related websites and services, including mobile and/or tablet applications (\"Products\"), are provided by Alphabet Communications, Inc., a California corporation, having offices at 603-125 Western Battery Rd., Toronto, Ontario, Canada M6K 3S2 (hereinafter \"AlphC\").\n\n                    </p>  <p>By accessing or using the Products, you are agreeing to the following Terms of Use.  Do not use the Products if you do not agree with any of these Terms of Use.  AlphC reserves the right to modify, delete, and/or change these Terms of Use without prior notice.  These Terms of Use therefore constitute an agreement between you and Alphc.\n\n                    </p>  <p>BY AGREEING TO THESE TERMS OF USE, YOU AGREE TO WAIVE YOUR RIGHT TO PARTICIPATE IN A CLASS ACTION LAWSUIT OR CLASS-WIDE ARBITRATION.\n\n                    </p>  <p>We agree to provide you with the Alphc Products.  The Products include all of the AlphC products, features, applications, services, technologies, and software that we provide.\n\n                    </p>  <p>Permitted Use of Products\n\n                    </p>  <p>AlphC allows you to access and use the Products, provided that you comply with these Terms of Use.  You may use the Products only as permitted by law.  AlphC reserves the right to suspend and/or terminate your account and/or deny access to the Products if you do not comply with these Terms of Use or any other policies of AlphC or if you are suspected of engaging in any conduct not in compliance with these Terms of Use or any other policies of AlphC, as to be determined solely by AlphC at its discretion.\n\n                    </p>  <p>You agree not to use the Products for any illegal or prohibited purpose or in connection with any illegal or prohibited activities.  You agree not to engage in or attempt to engage in any of the following activities in connection with the Products: access any data not intended for you; breach any security measures; interfere with the use of or access to the Products; decipher, decompile, disassemble, or reverse engineer any code or software used by or on the Products; and navigate or search the Products using any tool or other mechanism, including but not limited to browsers, spiders, or robots.\n\n                    </p>  <p>AlphC Account\n\n                    </p>  <p>Certain features of the Products may require an AlphC account to be created.  You are responsible for any and all activity that occurs on or through your AlphC account regardless of the actual user.  If any suspicious activity arises in connection with your AlphC account, including but not limited to non-compliance with these Terms of Use or any other AlphC policies, illegal activities, fraudulent conduct, and abusive conduct, AlphC reserves the right to suspend and/or terminate your AlphC account without being refunded any credits, as to be determined solely by AlphC at its discretion.\n\n                    </p>  <p>Intellectual Property\n\n                    </p>  <p>The Products and content appearing thereon are the property of AlphC or other respective owners.  Use of the Products does not give you ownership of any intellectual property rights, including but not limited to any trademarks, patents, or copyrights.\n\n                    </p>  <p>All intellectual property appearing on the Products owned by AlphC are protected under U.S. and foreign trademark laws and may not be used, copied, modified, reproduced, displayed, posted, downloaded, broadcast or distributed in any way, in whole or in part, unless expressly authorized in writing by AlphC or otherwise permitted by law.  The Products and content appearing thereon may not be used, copied, modified, reproduced, displayed, posted, downloaded, broadcast or distributed in any way, in whole or in part, unless expressly authorized in writing by AlphC or otherwise permitted by law.\n\n                    </p>  <p>Certain content owned by a third party (\"Third Party Content\") may appear on the Products.  AlphC reserves the right to remove or refuse to display any Third Party Content as to be solely determined by AlphC at its discretion.\n\n                    </p>  <p>Privacy Policy\n\n                    </p>  <p>AlphC's Privacy Policy may be found at https://alphc.com.  AlphC's Privacy Policy is hereby incorporated by reference into these Terms of Use.  By accessing or using the Products, you are agreeing to AlphC's use of your Personal and Non-Personal Information in accordance with AlphC’s Privacy Policy.  You agree not to hold liable AlphC or any recipient of your Personal and Non-Personal Information from AlphC and in no event shall AlphC or any recipient of your Personal and Non-Personal Information from AlphC be liable for any damages arising from use or sharing of your Personal and Non-Personal Information.\n\n                    </p>  <p>Electronic Communications\n\n                    </p>  <p>You agree to receive electronic communications from AlphC by e-mail and/or through posts made publicly available on the Products.  All such electronic communications, which may include agreements, notices, and disclosures, among others, will be deemed to satisfy any legal requirement that such communications be in writing.\n\n                    </p>  <p>Modification of Products\n\n                    </p>  <p>AlphC reserves the right to change, modify, improve, remove, and/or suspend, wholly or in part, the Products, solely at AlphC’s discretion.\n\n                    </p>  <p>Warranties and Disclaimers\n                    </p>  <p>In an emergency, contact your local first responders directly.  Our Products are only to be used as an aid and do not replace first reponders\n\n                    </p>  <p>The Products, and any content, websites, or portion thereof, are provided on an \"as is\" basis. A lphC makes no representations or warranties of any kind, express or implied, with respect to the Products and any content, website, or portion thereof.  To the extent permissible by law, AlphC disclaims all warranties of any kind, express or implied, including but not limited to implied warranties of merchantability, fitness for a particular purpose, and non-infringement.\n\n                    </p>  <p>AlphC makes no representations or warranties that (a) the functionality of the Products and any content, website, or portion thereof will be uninterrupted and/or free of error, or (b) the Products will meet your requirements or expectations, or (c) defects of the Products will be corrected, or (d) the Products will be free of viruses, spyware, or any other harmful or malicious content, known and unknown.\n\n                    </p>  <p>The Products may be unavailable from time to time due to technical and/or other reasons.  AlphC cannot predict or control such downtime or the duration thereof.  AlphC shall not be liable for any such downtime.\n\n                    </p>  <p>You agree that your use of the Products and any content, website, or portion thereof is at your sole risk. You agree not to hold AlphC liable, and in no event shall AlphC be liable, for any damages arising from your use of the Products or any content, website, or portion thereof, including but not limited to lost profits, revenues, data losses, financial losses, direct, indirect, incidental, punitive, exemplary, and consequential damages.\n\n                    </p>  <p>You agree to indemnify and hold AlphC and its officers, employees, and agents harmless from any claim, including reasonable attorney’s fees, made by any third party arising out of your use of the Products or violation of these Terms of Use and/or Privacy Policy.\n\n                    </p>  <p>You may discontinue use of the Products at any time if you do not agree with any of these Terms of Use or if you are dissatisfied with the Products.  You agree that your discontinued use of the Products will be your sole and exclusive remedy for any claim that may arise from your use of the Products against AlphC.\n\n                    </p>  <p>General\n\n                    </p>  <p>Any provision of these Terms of Use that is deemed invalid, void, or unenforceable for any reason shall be deemed severable and shall not affect the validity and enforceability of any other provision of these Terms of Use.\n\n                    </p>  <p>Captions and titles appearing on these Terms of Use are for convenience of reference only and shall not control or affect the meaning of any provision.\n\n                    </p>  <p>These Terms of Use are applicable worldwide.\n                    </p>  <p>The laws of California will be applicable to any dispute or claim arising out of or relating to these Terms of Use or use of the Products.  The courts of California have exclusive jurisdiction over all disputes and claims arising out of or relating to these Terms of Use or use of the Products without regard to choice of law or conflict of law provisions.\n\n                    </p>  <p>These Terms of Use are effective as of January 02, 2021.\n\n                    </p>  <p>Any updates or modifications to these Terms of Use will be made available on www.alphc.com.  Any and all updates or modifications to these Terms of Use will be effective as of the date the updates or modifications are made available on www.alphc.com.  You agree to be bound by any and all updates or modifications to these Terms of Use by your continued use of the Products after the updates or modifications to these Terms of Use are made available online.\n\n                    </p>  <p>Please contact AlphC at anything@alphc.com for any questions relating to these Terms of Use.\n                    </p>\n\n                    <p>\n                        Copyright © 2022 - 2023 Alphabet Communications (AlphC), Inc. All\n                        rights reserved.\n                    </p>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default TermsOfUse;\n","import mapboxgl from 'mapbox-gl';\nimport React, {useContext, useEffect, useRef, useState} from \"react\";\nimport MapContext from '../contexts/MapContext/MapContext';\nimport MapLegend from './MapLegend';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_GL_ACCESS_TOKEN;\n\nconst GMap = ({className}) => {\n    const [map, setMap] = useState(null);\n    const mapContainer = useRef(null);\n\n    const context = useContext(MapContext);\n\n    useEffect(() => {\n        const initializeMap = ({setMap, mapContainer}) => {\n            const map = new window.google.maps.Map(mapContainer.current, {\n                center: {lat: 43.63982499999999, lng: -79.4164156},\n                zoom: 5,\n\n                mapTypeControl: true,\n                mapTypeControlOptions: {\n                    position: window.google.maps.ControlPosition.LEFT_BOTTOM,\n                    mapTypeIds: [\n                        window.google.maps.MapTypeId.SATELLITE,\n                        window.google.maps.MapTypeId.ROADMAP,\n                    ],\n                },\n                fullscreenControl: false,\n            });\n\n            setMap(map);\n            context.setMap(map);\n        };\n\n        if (!map) initializeMap({setMap, mapContainer});\n    }, [context, map]);\n\n    return (\n        <div className={`d-flex flex-fill ${className ? className : ''}`}>\n            <MapLegend />\n            <div\n                className=\"flex-fill\"\n                ref={(el) => (mapContainer.current = el)}\n            />\n        </div>\n    );\n};\n\nexport default GMap;\n","import { useFormik } from 'formik';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nimport { useHistory } from 'react-router';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    Row,\n    Col,\n    Collapse,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label,\n    Spinner,\n} from 'reactstrap';\nimport GMap from '../../../common/components/GMap';\nimport MapContext from '../../../common/contexts/MapContext/MapContext';\nimport { additionalPropertySchema } from '../../../common/validation/propertySchema';\nimport {\n    getUserProperty,\n    getUserPropertyById,\n    saveUserProperty,\n} from '../../../redux/actionCreators/appActionCreators';\nimport {\n    generateEmail,\n    geocodeAddress,\n    reverseGeocodePoint,\n} from '../../../utils/propertyUtils';\nimport Footer from '../newHome/Footer';\nimport Header from '../newHome/Header';\nimport { getLoginType } from '../../../utils/utils';\nimport { getMe } from '../../../redux/actionCreators/authActionCreators';\n\nconst EditProperty = () => {\n    const [searchText, setSearchText] = useState('');\n    const [searching, setSearching] = useState(false);\n\n    const currentUser = useSelector((state) => state.auth.user);\n    const loginType = getLoginType();\n    if (!currentUser.primaryHolder) {\n        toastr.warning('Warning', 'Only Primary Holder can edit this address');\n    }\n\n\n    const { id: propertyId } = useSelector((state) => state.auth.user.property);\n    const dispatch = useDispatch();\n\n    const { map } = useContext(MapContext);\n\n    const [marker] = useState(\n        new window.google.maps.Marker({\n            draggable: true,\n        }),\n    );\n\n    const history = useHistory();\n\n    const formik = useFormik({\n        initialValues: {\n            id: propertyId,\n            email: '',\n            rural: false,\n            primaryAddress: true,\n            hightRiseOrCommercial: false,\n            totalFloors: '1',\n            totalUnitsEachFloor: '1',\n            addressType: '',\n            settlementType: '',\n            unitNo: '',\n            postalCode: '',\n            streetNumber: '',\n            route: '',\n            locality: '',\n            lotNo: '',\n            plotNo: '',\n            region: '',\n            province: '',\n            city: '',\n            country: '',\n            location: {},\n        },\n        validationSchema: additionalPropertySchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n\n            if (values.settlementType === 'lowRise') {\n                values.unitNo = '';\n            }\n            //need to get it again as someone may input the address\n            geocodeAddress({\n                address: [\n                    values.postalCode,\n                    values.streetNumber,\n                    values.route,\n                    values.locality,\n                    values.city,\n                    values.country,\n                ].join(' '),\n            }).then((response) => {\n                if (response && response.latitude && response.longitude) {\n                    changeMarkerPosition(\n                        response.longitude,\n                        response.latitude,\n                        false,\n                    );\n                    values.location.latitude = response.latitude;\n                    values.location.longitude = response.longitude;\n\n                    const property = {\n                        propertyId: propertyId,\n                        ...values,\n                    };\n                    console.log('..save property..', property);\n\n                    dispatch(saveUserProperty(property)).then((resp) => {\n                        setSubmitting(false);\n\n                        if (window.ReactNativeWebView) {\n                            window.ReactNativeWebView.postMessage(\n                                JSON.stringify({ result: 'success' }),\n                            );\n                        } else {\n                            console.log('..save property..' + JSON.stringify(resp));\n                            currentUser.property = resp.value;\n                            // history.push('/');\n                            toastr.success(\n                                'Successful!',\n                                'New location is successfully.',\n                            );\n                            //update address\n                            const loginType = getLoginType();\n                            dispatch(getMe(loginType)).then(resp => {\n                                setTimeout(() => {\n                                    history.push('/');\n                                }, 1000);\n                            });\n\n\n                        }\n                    });\n                }\n\n            });\n\n        },\n    });\n\n    const {\n        handleChange,\n        handleBlur: handleBlurOrig,\n        handleSubmit,\n        errors,\n        touched,\n        values,\n        isValid,\n        isSubmitting,\n        setValues,\n        setFieldValue,\n    } = formik;\n\n    const handleBlur = (...params) => {\n        console.log('values: ', values);\n        setValues({\n            ...values,\n            email: generateEmail(values),\n        });\n        geocodeAddress({\n            address: [\n                values.postalCode,\n                values.streetNumber,\n                values.route,\n                values.locality,\n                values.city,\n                values.country,\n            ].join(' '),\n        }).then((response) => {\n            if (response && response.latitude && response.longitude) {\n                changeMarkerPosition(\n                    response.longitude,\n                    response.latitude,\n                    false,\n                );\n            }\n        });\n        handleBlurOrig(...params);\n    };\n\n    const changeMarkerPosition = useCallback(\n        (longitude, latitude, geocode = true) => {\n            marker.setPosition({\n                lng: longitude,\n                lat: latitude,\n            });\n\n            if (geocode)\n                reverseGeocodePoint({ latitude, longitude }).then((data) => {\n                    Object.keys(data).forEach((i) => {\n                        if (data[i] === undefined) data[i] = '';\n                    });\n\n                    setValues({\n                        ...values,\n                        ...data,\n                        unitNo: values.unitNo,\n                        rural: Object.values(data).some((value) => !value),\n                        email: generateEmail({\n                            ...data,\n                            unitNo: values.unitNo,\n                        }),\n                        location: {\n                            latitude,\n                            longitude,\n                        },\n                    });\n                });\n        },\n        [marker, setValues, values],\n    );\n\n    useEffect(() => {\n        // const loginType = getLoginType();\n        dispatch(getUserPropertyById(propertyId)).then(({ value: property }) => {\n            setValues({\n                ...property,\n                ...property.location,\n            });\n\n            const { latitude, longitude } = property.location;\n\n            if (longitude && latitude && map) {\n                marker.setPosition({\n                    lng: longitude,\n                    lat: latitude,\n                });\n\n                marker.setMap(map);\n                map.panTo({\n                    lng: longitude,\n                    lat: latitude,\n                });\n            }\n        });\n    }, [dispatch, map, marker, propertyId, setValues]);\n\n\n    useEffect(() => {\n        if (map && currentUser.primaryHolder) {\n            const onClickMap = (e) => {\n                changeMarkerPosition(e.latLng.lng(), e.latLng.lat());\n                marker.setMap(map);\n            };\n\n            map.addListener('click', onClickMap);\n\n            const onDragMarker = (e) => {\n                changeMarkerPosition(e.latLng.lng(), e.latLng.lat());\n            };\n\n            const handle = window.google.maps.event.addListener(\n                marker,\n                'dragend',\n                onDragMarker,\n            );\n\n            return () => {\n                window.google.maps.event.clearListeners(map, 'click');\n                if (handle) window.google.maps.event.removeListener(handle);\n            };\n        }\n    }, [changeMarkerPosition, map, marker, setValues, values]);\n\n    const onSubmitSearchText = useCallback(\n        (e) => {\n            setSearching(true);\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (!searchText.trim()) return;\n\n            geocodeAddress({\n                address: searchText,\n            })\n                .then((data) => {\n                    if (!data?.latitude) return false;\n\n                    changeMarkerPosition(data.longitude, data.latitude);\n\n                    map.panTo({\n                        lng: data.longitude,\n                        lat: data.latitude,\n                    });\n                })\n                .finally(() => {\n                    setSearching(false);\n                });\n        },\n        [changeMarkerPosition, map, searchText],\n    );\n\n    return (\n        <main>\n            <Header />\n            <div className='content'>\n                <Card className=\"mb-5\">\n                    <CardHeader>Edit Property</CardHeader>\n\n                    <CardBody className=\"pb-4 d-flex flex-column\">\n                        <Row xs={12}>\n                            <Col xs=\"8\">\n                                <div\n                                    className=\"d-flex flex-fill mb-4\"\n                                    style={{ height: '600px' }}>\n                                    {currentUser.primaryHolder ? <div className={'map-top-actions'}>\n                                        <div className={'search-actions'}>\n                                            <Form onSubmit={onSubmitSearchText}>\n                                                <Input\n                                                    bsSize={'sm'}\n                                                    value={searchText}\n                                                    onChange={(e) =>\n                                                        setSearchText(e.currentTarget.value)\n                                                    }\n                                                    placeholder={'Search...'}\n                                                />\n                                                <Button\n                                                    className=\"btn-no-focus\"\n                                                    color={'info'}\n                                                    size={'sm'}\n                                                    onClick={onSubmitSearchText}\n                                                    type={'submit'}>\n                                                    {searching ? (\n                                                        <i className=\"fa fa-spin fa-spinner\" />\n                                                    ) : (\n                                                        <i className=\"fa fa-search\" />\n                                                    )}\n                                                </Button>\n                                            </Form>\n                                        </div>\n                                    </div> : null}\n                                    <GMap />\n                                </div>\n                            </Col>\n\n                            <Col xs=\"4\">\n                                <Row>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"firstName\">Email</Label>\n                                                <Input\n                                                    id=\"email\"\n                                                    name=\"email\"\n                                                    style={{ minWidth: \"500px\" }}\n                                                    disabled={true}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={`${values.email}@alphc.com`}\n                                                    invalid={touched.email && errors.email}\n                                                />\n                                                <FormFeedback>{errors.email}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup tag=\"fieldset\">\n                                                <Label for=\"postalCode\">Address Type</Label>\n                                                {parseInt(loginType) === 1 ? <FormGroup check>\n                                                    <Label check>\n                                                        <Input\n                                                            type=\"radio\"\n                                                            name=\"addressType\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={'residential'}\n                                                            checked={\n                                                                values.addressType === 'residential'\n                                                            }\n                                                            invalid={\n                                                                touched.addressType &&\n                                                                errors.addressType\n                                                            }\n                                                        />\n                                                        Residential\n                                                    </Label>\n                                                </FormGroup> :\n                                                    <FormGroup check>\n                                                        <Label check>\n                                                            <Input\n                                                                type=\"radio\"\n                                                                name=\"addressType\"\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={'commercial'}\n                                                                checked={\n                                                                    values.addressType === 'commercial'\n                                                                }\n                                                                invalid={\n                                                                    touched.addressType &&\n                                                                    errors.addressType\n                                                                }\n                                                            />\n                                                            Commercial\n                                                        </Label>\n                                                    </FormGroup>\n                                                }\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup tag=\"fieldset\">\n                                                <Label for=\"postalCode\">Settlement Type</Label>\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input\n                                                            type=\"radio\"\n                                                            name=\"settlementType\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={'lowRise'}\n                                                            checked={\n                                                                values.settlementType === 'lowRise'\n                                                            }\n                                                            invalid={\n                                                                touched.settlementType &&\n                                                                errors.settlementType\n                                                            }\n                                                        />\n                                                        Single Dwelling\n                                                    </Label>\n                                                </FormGroup>\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input\n                                                            type=\"radio\"\n                                                            name=\"settlementType\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={'highRise'}\n                                                            checked={\n                                                                values.settlementType === 'highRise'\n                                                            }\n                                                            invalid={\n                                                                touched.settlementType &&\n                                                                errors.settlementType\n                                                            }\n                                                        />\n                                                        High Rise/Multiple Units\n                                                    </Label>\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <Col>\n                                                <Collapse\n                                                    isOpen={values.settlementType === 'highRise'}>\n                                                    <Col>\n                                                        <FormGroup>\n                                                            <Label for=\"postalCode\">Unit No</Label>\n                                                            <Input\n                                                                type=\"text\"\n                                                                name=\"unitNo\"\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={values.unitNo}\n                                                                invalid={\n                                                                    touched.unitNo && errors.unitNo\n                                                                }\n                                                            />\n                                                            <FormFeedback>\n                                                                {errors.unitNo}\n                                                            </FormFeedback>\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Collapse>\n                                            </Col>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"postalCode\">Postal Code</Label>\n                                                <Input\n                                                    id=\"postalCode\"\n                                                    name=\"postalCode\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.postalCode}\n                                                    invalid={\n                                                        touched.postalCode && errors.postalCode\n                                                    }\n                                                />\n                                                <FormFeedback>{errors.postalCode}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"streetNumber\">Street Number</Label>\n                                                <Input\n                                                    id=\"streetNumber\"\n                                                    name=\"streetNumber\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.streetNumber}\n                                                    invalid={\n                                                        touched.streetNumber && errors.streetNumber\n                                                    }\n                                                />\n                                                <FormFeedback>{errors.streetNumber}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"route\">\n                                                    Street / Route / Lot No / Plot No / Local Identifier\n                                                </Label>\n                                                <Input\n                                                    id=\"route\"\n                                                    name=\"route\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.route}\n                                                    invalid={touched.route && errors.route}\n                                                />\n                                                <FormFeedback>{errors.route}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"locality\"> City / Locality</Label>\n                                                <Input\n                                                    id=\"locality\"\n                                                    name=\"locality\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.locality}\n                                                    invalid={touched.locality && errors.locality}\n                                                />\n                                                <FormFeedback>{errors.locality}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        {values.rural && (\n                                            <>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label for=\"lotNo\">Lot No</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"lotNo\"\n                                                            id=\"lotNo\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.lotNo}\n                                                            invalid={touched.lotNo && errors.lotNo}\n                                                            placeholder=\"\"\n                                                        />\n                                                        <FormFeedback>{errors.lotNo}</FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label for=\"plotNo\">Plot No</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"plotNo\"\n                                                            id=\"plotNo\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.plotNo}\n                                                            invalid={\n                                                                touched.plotNo && errors.plotNo\n                                                            }\n                                                            placeholder=\"\"\n                                                        />\n                                                        <FormFeedback>{errors.plotNo}</FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label for=\"region\">Region</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"region\"\n                                                            id=\"region\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.region}\n                                                            invalid={\n                                                                touched.region && errors.region\n                                                            }\n                                                            placeholder=\"\"\n                                                        />\n                                                        <FormFeedback>{errors.region}</FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label for=\"province\">Province</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"province\"\n                                                            id=\"province\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.province}\n                                                            invalid={\n                                                                touched.province && errors.province\n                                                            }\n                                                            placeholder=\"\"\n                                                        />\n                                                        <FormFeedback>\n                                                            {errors.province}\n                                                        </FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                            </>\n                                        )}\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"city\">\n                                                    Province / State\n                                                </Label>\n                                                <Input\n                                                    id=\"city\"\n                                                    name=\"city\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.city}\n                                                    invalid={touched.city && errors.city}\n                                                />\n                                                <FormFeedback>{errors.city}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"country\">Country</Label>\n                                                <Input\n                                                    id=\"country\"\n                                                    name=\"country\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.country}\n                                                    invalid={touched.country && errors.country}\n                                                />\n                                                <FormFeedback>{errors.country}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        {/* <Col>\n                                            <FormGroup check>\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"primaryAddress\"\n                                                        onChange={(e) => {\n                                                            setFieldValue(\n                                                                'primaryAddress',\n                                                                e.currentTarget.checked,\n                                                            );\n                                                        }}\n                                                        onBlur={handleBlur}\n                                                        invalid={\n                                                            touched.primaryAddress &&\n                                                            errors.primaryAddress\n                                                        }\n                                                        checked={values.primaryAddress}\n                                                    />\n                                                    This is my primary address\n                                                </Label>\n                                            </FormGroup>\n                                        </Col> */}\n                                        <Col>\n                                            <FormGroup>\n                                                <Input\n                                                    type=\"hidden\"\n                                                    invalid={errors.inValidProperty}\n                                                />\n                                                <FormFeedback>\n                                                    {errors.inValidProperty}\n                                                </FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            {currentUser.primaryHolder ? <Button\n                                                disabled={!isValid || isSubmitting}\n                                                type=\"submit\"\n                                                block\n                                                color=\"primary\">\n                                                {isSubmitting ? <Spinner size=\"sm\" /> : 'Submit'}\n                                            </Button> : null}\n                                        </Col>\n                                    </Form>\n                                </Row>\n                            </Col>\n\n                        </Row>\n                    </CardBody>\n                    <CardFooter className=\"text-right\">\n\n                    </CardFooter>\n\n                </Card>\n            </div>\n            <Footer />\n        </main>\n\n    );\n};\n\nexport default EditProperty;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Button, Modal, ModalBody, Row } from 'reactstrap';\nimport { toggleVerificationModal } from '../../../redux/actionCreators/appActionCreators';\nimport EmailVerification from '../accountVerification/EmailVerification';\nimport MobileVerification from '../accountVerification/MobileVerification';\nimport { resetRegistrationForm } from '../../../redux/actionCreators/registrationActionCreators';\n\nconst MobileAccountVerification = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        try {\n            document.querySelector('body').style.marginTop = 0;\n            document.querySelector('#root').style.height = '100%';\n            document.querySelector('.content').style.height = '100%';\n        } catch (e) { }\n    });\n\n    const registrationUser = useSelector((state) => state.registerForm.user);\n    // console.log('registrationUser=' + JSON.stringify(registrationUser));\n    let user = useSelector((state) => state.auth.me);\n\n    if (user === null || user === undefined) {\n        user = registrationUser;\n    }\n\n    const userHasEmail = user.email != null && user.email != undefined && user.email.length > 4 && user.username !== user.email;\n\n    const userVerified =\n        (userHasEmail && user.emailVerified && user.mobileVerified) ||\n        (!userHasEmail && user.mobileVerified);\n\n    // if (!showVerificationModal) return null;\n\n    if (!userVerified) {\n        return (\n            <div className=\"content ml-1 mr-1 mt-5 mb-3\">\n\n                <EmailVerification />\n                <MobileVerification />\n                <Row noGutters className=\"justify-content-end\">\n                    <Button\n                        color={'link'}\n                        size={'sm'}\n                        onClick={() => {\n                            history.push('/logout');\n                        }}>\n                        Logout\n                    </Button>\n                </Row>\n\n            </div>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"content ml-1 mr-1 mt-5 mb-3\">\n                    <div className={'success mt-5 mb-3'}>\n                        Verification Successful!\n                    </div>\n                    <Button\n                        block\n                        color={'success'}\n                        onClick={() => {\n                            try {\n                                if (window.ReactNativeWebView) {\n                                    dispatch(resetRegistrationForm());\n                                    window.ReactNativeWebView.postMessage(\n                                        JSON.stringify({ action: 'goBack' }),\n                                    );\n                                }\n                            } catch (e) {\n\n                            }\n                            dispatch(resetRegistrationForm());\n                            localStorage.setItem(\"show_login_tips\", 2);\n                            setTimeout(() => {\n                                // history.push(\"/\");\n                                history.push('/logout');\n                            }, 500);\n\n\n                        }}>\n                        Login and Complete Business Profile\n                    </Button>\n                </div>\n            </>\n        );\n\n    };\n};\n\nexport default MobileAccountVerification;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    InputGroup,\n    Input,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport * as Yup from 'yup';\n// import MobileInput from '../../../common/components/MobileInput';\nimport {\n    resendEmailVerificationCode,\n    updateAccount,\n} from '../../../redux/actionCreators/appActionCreators';\nimport EmailVerification from '../accountVerification/EmailVerification';\nimport { toastr } from 'react-redux-toastr';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst validationSchema = Yup.object({\n    eMailAddress: Yup.string().email('Invalid email format').required('E-Mail address is required'),\n});\n\nconst ChangeEMail = () => {\n    const [eMailAddressSelected, setEMailAddressSelected] = useState(false);\n    const user = useSelector((state) => state.auth.me);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            eMailAddress: user.email,\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n            dispatch(\n                updateAccount({\n                    email: values.eMailAddress,\n                    emailVerified: false,\n                })\n            ).then((res) => {\n                setSubmitting(false);\n                setEMailAddressSelected(true);\n\n                dispatch(resendEmailVerificationCode(values.eMailAddress))\n                    .then(({ value: { user } }) => {\n                        console.log('change mobile..ret:' + JSON.stringify(user));\n                        if (user.emailVerified) {\n                            if (window.ReactNativeWebView) {\n                                window.ReactNativeWebView.postMessage(\n                                    JSON.stringify({ result: 'success' }),\n                                );\n                            }\n                        }\n                    }).catch(error => {\n                        console.log(' error...' + JSON.stringify(error));\n                    })\n                    .finally(() => {\n                        setSubmitting(false);\n                    });\n            }).catch(error => {\n                if (error.statusCode && error.statusCode === 401) {\n                    toastr.error('Error', error.message);\n                }\n                if (error.statusCode && error.statusCode === 500) {\n                    toastr.error('Error', 'Mobile No. already registered');\n                }\n                setSubmitting(false);\n                console.log('update account...error:' + JSON.stringify(error));\n            });\n        },\n    });\n\n    const {\n        values,\n        touched,\n        errors,\n        handleSubmit,\n        isValid,\n        isSubmitting,\n        handleBlur,\n        handleChange,\n        setFieldValue,\n        setFieldTouched,\n    } = formik;\n\n    return (\n        <main>\n            <Header />\n            <div className=\"full-screen\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Change Email Address</Col>\n                    </Row>\n                    {!eMailAddressSelected && (\n                        <Form onSubmit={handleSubmit}>\n                            <InputGroup className=\"mb-3\">\n                                {/* <Input\n                                type=\"text\"\n                                // setFieldValue={setFieldValue}\n                                // setFieldTouched={setFieldTouched}\n                                placeholder=\"Email address\"\n                                disabled={eMailAddressSelected}\n                                name={'eMailAddress'}\n                                // onChange={handleChange}\n                                value={values.eMailAddress}\n                                invalid={\n                                    touched.eMailAddress && errors.eMailAddress\n                                }\n                            /> */}\n                                <Input\n                                    type=\"email\"\n                                    name=\"eMailAddress\"\n                                    id=\"email\"\n                                    value={values.eMailAddress}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n\n                                    invalid={touched.eMailAddress && errors.eMailAddress}\n                                    placeholder=\"myemail@email.com\"\n                                />\n                                <FormFeedback>{errors.eMailAddress}</FormFeedback>\n                            </InputGroup>\n                            <Row className=\"contact-us-submit-container\">\n                                <Col>\n                                    <Button\n                                        type={'submit'}\n                                        block\n                                        disabled={!isValid || isSubmitting}\n                                        outline\n                                        className=\"float-right my-3\">\n                                        {isSubmitting ? (\n                                            <Spinner size=\"sm\" />\n                                        ) : (\n                                            'Submit'\n                                        )}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    )}\n\n                    {eMailAddressSelected && <EmailVerification />}\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default ChangeEMail;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    InputGroup,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport MobileInput from '../../../common/components/MobileInput';\nimport {\n    resendMobileVerificationCode,\n    updateAccount,\n} from '../../../redux/actionCreators/appActionCreators';\nimport MobileVerification from '../accountVerification/MobileVerification';\nimport { toastr } from 'react-redux-toastr';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst validationSchema = Yup.object({\n    mobileNumber: Yup.number().required('Mobile number is required'),\n});\n\nconst ChangeMobile = () => {\n    const [mobileNumberSelected, setMobileNumberSelected] = useState(false);\n    const user = useSelector((state) => state.auth.me);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            mobileNumber: user.mobileNumber,\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n            dispatch(\n                updateAccount({\n                    username: values.mobileNumber,\n                    mobileNumber: values.mobileNumber,\n                    mobileVerified: false,\n                })\n            ).then((res) => {\n                setSubmitting(false);\n                setMobileNumberSelected(true);\n\n                dispatch(resendMobileVerificationCode(values.mobileNumber))\n                    .then(({ value: { user } }) => {\n                        console.log('change mobile..ret:' + JSON.stringify(user));\n                        if (user.mobileVerified) {\n                            if (window.ReactNativeWebView) {\n                                window.ReactNativeWebView.postMessage(\n                                    JSON.stringify({ result: 'success' }),\n                                );\n                            }\n                        }\n                    }).catch(error => {\n                        console.log(' error...' + JSON.stringify(error));\n                    })\n                    .finally(() => {\n                        setSubmitting(false);\n                    });\n            }).catch(error => {\n                if (error.statusCode && error.statusCode === 401) {\n                    toastr.error('Error', error.message);\n                }\n                if (error.statusCode && error.statusCode === 500) {\n                    toastr.error('Error', 'Mobile No. already registered');\n                }\n                setSubmitting(false);\n                console.log('update account...error:' + JSON.stringify(error));\n            });\n        },\n    });\n\n    const {\n        values,\n        touched,\n        errors,\n        handleSubmit,\n        isValid,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n    } = formik;\n\n    return (\n        <main>\n            <Header />\n            <div className=\"full-screen\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Change Mobile Number</Col>\n                    </Row>\n                    {!mobileNumberSelected && (\n                        <Form onSubmit={handleSubmit}>\n                            <InputGroup className=\"mb-3\">\n                                <MobileInput\n                                    setFieldValue={setFieldValue}\n                                    setFieldTouched={setFieldTouched}\n                                    placeholder=\"Mobile Number\"\n                                    disabled={mobileNumberSelected}\n                                    name={'mobileNumber'}\n                                    value={values.mobileNumber}\n                                    invalid={\n                                        touched.mobileNumber && errors.mobileNumber\n                                    }\n                                />\n                                <FormFeedback>{errors.mobileNumber}</FormFeedback>\n                            </InputGroup>\n                            <Row className=\"contact-us-submit-container\">\n                                <Col>\n                                    <Button\n                                        type={'submit'}\n                                        block\n                                        disabled={!isValid || isSubmitting}\n                                        outline\n                                        className=\"float-right my-3\">\n                                        {isSubmitting ? (\n                                            <Spinner size=\"sm\" />\n                                        ) : (\n                                            'Submit'\n                                        )}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    )}\n\n                    {mobileNumberSelected && <MobileVerification />}\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default ChangeMobile;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    Input,\n    FormGroup,\n    Row,\n    Spinner,\n    Label\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport { changePassword } from '../../../redux/actionCreators/authActionCreators';\nimport { useHistory } from 'react-router';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst validationSchema = Yup.object({\n    password: Yup.string()\n        // eslint-disable-next-line no-template-curly-in-string\n        .min(6, 'Password must be at least ${min} characters!')\n        .max(32)\n        .required('Password is required'),\n    // .matches(\n    //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n    //     'Must contain 8 characters, one uppercase, one lowercase and one number',\n    // ),\n    passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref('password')], 'Passwords must match')\n        .required('This field is required'),\n});\n\nconst ChangePassword = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            passwordConfirmation: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n\n            dispatch(changePassword(values.password)).then(() => {\n                setSubmitting(false);\n\n                if (window.ReactNativeWebView) {\n                    window.ReactNativeWebView.postMessage(\n                        JSON.stringify({ result: 'success' }),\n                    );\n                } else {\n                    toastr.success('Successful!', 'Password has been changed.');\n                }\n            });\n        },\n    });\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isValid,\n        isSubmitting,\n    } = formik;\n    const [eye, seteye] = useState(true);\n    const [password, setpassword] = useState(\"password\");\n    const [type, settype] = useState(false);\n    const Eye = () => {\n        if (password == \"password\") {\n            setpassword(\"text\");\n            seteye(false);\n            settype(true);\n        }\n        else {\n            setpassword(\"password\");\n            seteye(true);\n            settype(false);\n        }\n    }\n    return (\n        <main>\n            <Header />\n            <div className=\"full-screen\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Change Password</Col>\n                    </Row>\n                    <Form onSubmit={handleSubmit}>\n                        <Col>\n                            <FormGroup className='passwordFormGroup'>\n                                <Label for=\"password\">Password</Label>\n                                <Input\n                                    type={password}\n                                    placeholder=\"Password\"\n                                    name={'password'}\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    invalid={touched.password && errors.password}\n                                /><i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash\" : \"fa-eye\"}`}></i>\n                                <FormFeedback>{errors.password}</FormFeedback>\n                            </FormGroup>\n                        </Col>\n                        <Col>\n                            <FormGroup className='passwordFormGroup'>\n                                <Label for=\"password\">Confirm Password</Label>\n                                <Input\n                                    type={password}\n                                    placeholder=\"Password Confirmation\"\n                                    name={'passwordConfirmation'}\n                                    value={values.passwordConfirmation}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    invalid={\n                                        touched.passwordConfirmation &&\n                                        errors.passwordConfirmation\n                                    }\n                                /> <i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash\" : \"fa-eye\"}`}></i>\n                                <FormFeedback>\n                                    {errors.passwordConfirmation}\n                                </FormFeedback>\n                            </FormGroup>\n                        </Col>\n                        <Row className=\"contact-us-submit-container\">\n                            <Col>\n                                <Button\n                                    type={'submit'}\n                                    block\n                                    disabled={isSubmitting}\n                                    outline\n                                    className=\"float-right my-3\">\n                                    {isSubmitting ? (\n                                        <Spinner size=\"sm\" />\n                                    ) : (\n                                        'Submit'\n                                    )}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default ChangePassword;\n","import React from 'react';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { useHistory } from \"react-router-dom\";\nconst MemberShip = () => {\n    const history = useHistory();\n    const Checkout = (e, productId) => {\n        //do checkout\n        history.push('/checkout/' + productId);\n    }\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Checkout Our MemberShip</Col>\n                    </Row>\n\n                    <Row>\n\n                        <Col xs=\"3\" className='pricing_item'>Essentials</Col>\n                        <Col xs=\"3\" className='pricing_item'>Standard</Col>\n                        <Col xs=\"3\" className='pricing_item'>Premium <hr />\n                            Starts at <br />\n                            C$50/month*\n                            <br />\n                            <Button type=\"button\" className=\"SS_ProductCheckout\" onClick={(e) => Checkout(e, 1)} > Subscribe </Button>\n                        </Col>\n                        <Col xs=\"3\" className='pricing_item'>Free</Col>\n                    </Row>\n\n\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default MemberShip;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\nimport Footer from './Footer';\nimport Header from './Header';\nimport { fetchProductDetails, createStripeSession } from '../../../redux/actionCreators/checkoutCreators';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nconst Checkout = ({\n    match: {\n        params: { id },\n    },\n}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n\n    const pathInfo = history.location.pathname.split(\"/\");\n    console.log('...history. path.. id = ' + JSON.stringify(pathInfo));\n    const [productInfo, setProductInfo] = useState(null);\n    const productId = pathInfo[2];\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setLoading(true);\n        dispatch(fetchProductDetails(productId)).then(resp => {\n            console.log('product info' + JSON.stringify(resp));\n            setProductInfo(resp.value);\n            setLoading(false);\n        }).catch(error => {\n            console.log('get product ');\n            setLoading(false);\n        });\n        return () => { };\n    }, [dispatch]);\n\n    const Checkout = (e) => {\n        //do checkout, create session\n        dispatch(createStripeSession(productInfo)).then(resp => {\n            console.log('..stripe session..' + JSON.stringify(resp));\n            if (resp.value.data === null) {\n                toastr.error('Error', 'Create Payment Error!');\n            } else {\n                window.location.replace(resp.value.url);\n            }\n\n        }).catch(error => {\n            console.log('..checkout failed');\n        })\n    }\n\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Checkout Our MemberShip</Col>\n                    </Row>\n                    {\n                        !loading && (\n                            <>\n                                <Row> {productInfo.title} </Row>\n                                <Row> {productInfo.description} </Row>\n\n                                <Row> C${productInfo.price} </Row>\n                                <Row> <Button onClick={(e) => Checkout(e)}> Checkout</Button> </Row>\n                            </>\n                        )\n                    }\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default Checkout;","import { SERVICE_URL, STRIPE_URL } from '../../constants';\nimport {\n    ADMIN_FETCH_PRODDUCT_DETAIL,\n    STRIPE_CHECKOUT_SESSION\n} from '../actionTypes';\n\nexport const fetchProductDetails = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const stripeUrl = STRIPE_URL;\n\n        return dispatch({\n            type: ADMIN_FETCH_PRODDUCT_DETAIL,\n            payload: fetch(`${stripeUrl}/strapi-stripe/getProduct/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const createStripeSession = (productInfo) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const stripeUrl = STRIPE_URL;\n        return dispatch({\n            type: STRIPE_CHECKOUT_SESSION,\n            payload: fetch(`${stripeUrl}/strapi-stripe/createCheckoutSession/`, {\n                body: JSON.stringify({\n                    stripePriceId: productInfo.stripePriceId,\n                    stripePlanId: productInfo.stripePlanId,\n                    isSubscription: productInfo.isSubscription,\n                    productId: productInfo.id,\n                    productName: productInfo.title,\n                }),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};","import React from 'react';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { useHistory } from \"react-router-dom\";\nconst CheckoutSuccess = () => {\n    const history = useHistory();\n    const Checkout = (e, productId) => {\n        //do checkout\n        history.push('/checkout/' + productId);\n    }\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Checkout Success</Col>\n                    </Row>\n\n\n\n\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default CheckoutSuccess;\n","import React from 'react';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { useHistory } from \"react-router-dom\";\nconst CheckoutFailed = () => {\n    const history = useHistory();\n    const Checkout = (e, productId) => {\n        //do checkout\n        history.push('/checkout/' + productId);\n    }\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Checkout Failed</Col>\n                    </Row>\n\n\n\n\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default CheckoutFailed;\n","import React, { createContext, useReducer } from 'react';\nimport CartReducer from '../../redux/reducers/CartReducer';\nimport { sumItems } from '../../utils/utils';\nexport const CartContext = createContext()\n\nconst storage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst initialState = { cartItems: storage, ...sumItems(storage), checkout: false };\n\nconst CartContextProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(CartReducer, initialState)\n\n    const increase = payload => {\n        dispatch({ type: 'INCREASE', payload })\n    }\n\n    const decrease = payload => {\n        dispatch({ type: 'DECREASE', payload })\n    }\n\n    const addProduct = payload => {\n        dispatch({ type: 'ADD_ITEM', payload })\n    }\n\n    const removeProduct = payload => {\n        dispatch({ type: 'REMOVE_ITEM', payload })\n    }\n\n    const clearCart = () => {\n        dispatch({ type: 'CLEAR' })\n    }\n\n    const handleCheckout = () => {\n        console.log('CHECKOUT', state);\n        dispatch({ type: 'CHECKOUT' })\n    }\n\n    const contextValues = {\n        removeProduct,\n        addProduct,\n        increase,\n        decrease,\n        clearCart,\n        handleCheckout,\n        ...state\n    }\n\n    return (\n        <CartContext.Provider value={contextValues} >\n            {children}\n        </CartContext.Provider>\n    );\n}\n\nexport default CartContextProvider;\n","\nimport React, { useContext } from 'react';\nimport { CartContext } from '../../common/contexts/CartContext';\n\nexport const useCart = () => {\n\n    const ctx = useContext(CartContext)\n\n    return {\n        ...ctx\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Button,\n    Col,\n    Row,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label,\n    Spinner,\n    Container,\n} from 'reactstrap';\nimport { saveBusinessProfile, getBusinessProfile, saveShoppingCart } from '../../../redux/actionCreators/adminActionCreators';\nimport { useHistory } from 'react-router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { toastr } from 'react-redux-toastr';\nimport { useCart } from '../../hooks/useCart';\nconst bindingSchema = Yup.object().shape({\n    companyName: Yup.string().required('This field is required'),\n    phone: Yup.string().required('This field is required'),\n\n});\nconst BusinessProfile = () => {\n\n    const utilsData = useSelector((state) => state.utilsData);\n    // console.log('...utilsData..' + JSON.stringify(utilsData));\n    const dispatch = useDispatch();\n    const [color, setColor] = useState('default');\n\n    let domain = localStorage.getItem('current_domain');\n    if (domain === undefined || domain === null) {\n        domain = 'alphc.com'\n    }\n    const history = useHistory();\n\n    const queryPage = history.location.search.match(/id=([0-9]+)/, '');\n    // console.log('..queryPage..' + queryPage);\n    const propertyId = queryPage[1];\n    const user = useSelector((state) => state.auth.me);\n    // console.log('..user..' + JSON.stringify(user));\n    const [companyProfile, setCompanyProfile] = useState({});\n\n    const getWorkingHourValue = (hours, dayOfWeek, index) => {\n        const item = hours.filter((hour) => {\n            return parseInt(hour.dayOfWeek) === dayOfWeek;\n\n        });\n        console.log('..item..' + JSON.stringify(item));\n        if (item && item.length > 0) {\n            if (index === 1) return item[0].openHour;\n            if (index === 2) return item[0].closeHour;\n            if (index === 3) return item[0].closed;\n        }\n        return '';\n    };\n    const [workingHour, setWorkingHour] = useState([]);\n\n    const { addProduct, cartItems, increase } = useCart();\n    const addProductToCard = (product) => {\n        // addProduct(product);\n        const jsonData = {\n            data: {\n                users_id: user.id,\n                products_id: \"1\"\n            }\n        }\n\n        dispatch(saveShoppingCart(jsonData)).then(resp => {\n            // history.push('/cart');\n            history.push('/checkout/1');\n        }).catch(error => {\n            console.log('..add product to cart error..' + JSON.stringify(error));\n        })\n\n    }\n    const formik = useFormik({\n        initialValues: {\n            companyName: user.companyName,\n            phone: '',\n            website: '',\n            email: user.email,\n            androidUrl: '',\n            iOSUrl: ''\n\n        },\n        isInitialValid: false,\n        validationSchema: bindingSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n\n            let data0 = false;\n            let data1 = false;\n            let data2 = false;\n            let data3 = false;\n            let data4 = false;\n            let data5 = false;\n            let data6 = false;\n            if (values.close0 || (values.openHour0 && values.openHour0.length > 0 && values.closeHour0 && values.closeHour0.length > 0)) data0 = true;\n            if (values.close1 || (values.openHour1 && values.openHour1.length > 0 && values.closeHour1 && values.closeHour1.length > 0)) data1 = true;\n            if (values.close2 || (values.openHour2 && values.openHour2.length > 0 && values.closeHour2 && values.closeHour2.length > 0)) data2 = true;\n            if (values.close3 || (values.openHour3 && values.openHour3.length > 0 && values.closeHour3 && values.closeHour3.length > 0)) data3 = true;\n            if (values.close4 || (values.openHour4 && values.openHour4.length > 0 && values.closeHour4 && values.closeHour4.length > 0)) data4 = true;\n            if (values.close5 || (values.openHour5 && values.openHour5.length > 0 && values.closeHour5 && values.closeHour5.length > 0)) data5 = true;\n            if (values.close6 || (values.openHour6 && values.openHour6.length > 0 && values.closeHour6 && values.closeHour6.length > 0)) data6 = true;\n            if (data0 && data1 && data2 && data3 && data4 && data5 && data6) {\n                const postData = {\n                    profileId: companyProfile !== null && companyProfile !== undefined && companyProfile.id !== null && companyProfile.id !== undefined ? companyProfile.id : 0,\n                    ...values,\n                    property_id: propertyId\n                }\n                dispatch(saveBusinessProfile(postData)).then(resp => {\n                    console.log('..save business profile..' + JSON.stringify(resp));\n                    setSubmitting(false);\n                    user.companyName = values.companyName;\n                    user.email = values.email;\n                    toastr.success('Success', 'Business profile saved!');\n                    const proudct = {\n                        membershipId: 1,\n\n                    }\n                    history.push('/');\n                    // addProductToCard(proudct);\n\n                });\n            } else {\n                toastr.error('Error', 'Please make sure that all fields are entered correctly!')\n            }\n            setSubmitting(false);\n        }\n    });\n    const {\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        isValid,\n        isSubmitting,\n        values,\n        setValues\n    } = formik;\n\n    const [current, setCurrent] = useState(0);\n\n\n    useEffect(() => {\n        dispatch(getBusinessProfile({ id: propertyId })).then(resp => {\n            // console.log('..load profile..' + JSON.stringify(resp));\n            setWorkingHour(resp.value.workingHour);\n\n            const profile = resp.value.companyProfile;\n            const hours = resp.value.workingHour;\n            setCompanyProfile(profile);\n            console.log('..hours..' + JSON.stringify(hours));\n\n            if (profile !== null) {\n                setValues({\n                    companyName: profile.companyName,\n                    phone: profile.phone,\n                    website: profile.website,\n                    email: profile.email,\n                    androidUrl: profile.android_url,\n                    iOSUrl: profile.ios_url,\n                    openHour0: getWorkingHourValue(hours, 0, 1),\n                    closeHour0: getWorkingHourValue(hours, 0, 2),\n                    close0: getWorkingHourValue(hours, 0, 3) === true ? true : false,\n\n                    openHour1: getWorkingHourValue(hours, 1, 1),\n                    closeHour1: getWorkingHourValue(hours, 1, 2),\n                    close1: getWorkingHourValue(hours, 1, 3) === true ? true : false,\n\n                    openHour2: getWorkingHourValue(hours, 2, 1),\n                    closeHour2: getWorkingHourValue(hours, 2, 2),\n                    close2: getWorkingHourValue(hours, 2, 3) === true ? true : false,\n\n                    openHour3: getWorkingHourValue(hours, 3, 1),\n                    closeHour3: getWorkingHourValue(hours, 3, 2),\n                    close3: getWorkingHourValue(hours, 3, 3) === true ? true : false,\n\n                    openHour4: getWorkingHourValue(hours, 4, 1),\n                    closeHour4: getWorkingHourValue(hours, 4, 2),\n                    close4: getWorkingHourValue(hours, 4, 3) === true ? true : false,\n\n                    openHour5: getWorkingHourValue(hours, 5, 1),\n                    closeHour5: getWorkingHourValue(hours, 5, 2),\n                    close5: getWorkingHourValue(hours, 5, 3) === true ? true : false,\n\n                    openHour6: getWorkingHourValue(hours, 6, 1),\n                    closeHour6: getWorkingHourValue(hours, 6, 2),\n                    close6: getWorkingHourValue(hours, 6, 3) === true ? true : false,\n                });\n\n            }\n        });\n\n    }, [dispatch]);\n\n\n\n    return (\n        <main>\n            <Header />\n            <div className=\"content\">\n                <Container>\n                    <Col md={12} sm={12} xs={12} style={{ marginTop: \"80px\" }}>\n\n                        <Form onSubmit={handleSubmit}>\n                            <Row>\n                                <Col md=\"6\">\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>Business Name:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"companyName\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.companyName}\n                                                    invalid={touched.companyName && errors.companyName}\n                                                />\n                                                <FormFeedback>{errors.companyName}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>Business Number:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"phone\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.phone}\n                                                    invalid={touched.phone && errors.phone}\n                                                />\n                                                <FormFeedback>{errors.phone}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>Website:(Optional)</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"website\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.website}\n                                                    invalid={touched.website && errors.website}\n                                                />\n                                                <FormFeedback>{errors.website}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>E-mail:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"email\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.email}\n                                                    invalid={touched.email && errors.email}\n                                                />\n                                                <FormFeedback>{errors.email}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>Android App Download URL:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"androidUrl\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.androidUrl}\n                                                    invalid={touched.androidUrl && errors.androidUrl}\n                                                />\n                                                <FormFeedback>{errors.androidUrl}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>iOS App Download URL:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"iOSUrl\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.iOSUrl}\n                                                    invalid={touched.iOSUrl && errors.iOSUrl}\n                                                />\n                                                <FormFeedback>{errors.iOSUrl}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n\n                                    </Row>\n                                </Col>\n                                <Col md=\"6\">\n                                    <Row>\n                                        <Col md={12}>\n                                            <Label>Business Hour</Label></Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ marginTop: \"40px\", textAlign: \"right\" }}>\n                                                <Label>Monday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n                                                <Label>Open:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour0\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour0}\n                                                    invalid={touched.openHour0 && errors.openHour0}\n                                                />\n                                                <FormFeedback>{errors.openHour0}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n                                                <Label>Close:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour0\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour0}\n                                                    invalid={touched.closeHour0 && errors.closeHour0}\n                                                />\n                                                <FormFeedback>{errors.closeHour0}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ marginTop: \"40px\" }}>\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close0\"\n                                                        onChange={handleChange}\n                                                        value={values.close0}\n                                                        checked={values.close0}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close0 && errors.close0}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Tuesday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour1\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour1}\n                                                    invalid={touched.openHour1 && errors.openHour1}\n                                                />\n                                                <FormFeedback>{errors.openHour1}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour1\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour1}\n                                                    invalid={touched.closeHour1 && errors.closeHour1}\n                                                />\n                                                <FormFeedback>{errors.closeHour1}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close1\"\n                                                        onChange={handleChange}\n                                                        value={values.close1}\n                                                        checked={values.close1}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close1 && errors.close1}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Wednesday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour2\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour2}\n                                                    invalid={touched.openHour2 && errors.openHour2}\n                                                />\n                                                <FormFeedback>{errors.openHour2}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour2\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour2}\n                                                    invalid={touched.closeHour2 && errors.closeHour2}\n                                                />\n                                                <FormFeedback>{errors.closeHour2}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close2\"\n                                                        onChange={handleChange}\n                                                        value={values.close2}\n                                                        checked={values.close2}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close2 && errors.close2}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Thursday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour3\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour3}\n                                                    invalid={touched.openHour3 && errors.openHour3}\n                                                />\n                                                <FormFeedback>{errors.openHour3}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour3\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour3}\n                                                    invalid={touched.closeHour3 && errors.closeHour3}\n                                                />\n                                                <FormFeedback>{errors.closeHour3}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close3\"\n                                                        onChange={handleChange}\n                                                        value={values.close3}\n                                                        checked={values.close3}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close3 && errors.close3}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Friday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour4\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour4}\n                                                    invalid={touched.openHour4 && errors.openHour4}\n                                                />\n                                                <FormFeedback>{errors.openHour4}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour4\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour4}\n                                                    invalid={touched.closeHour4 && errors.closeHour4}\n                                                />\n                                                <FormFeedback>{errors.closeHour4}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close4\"\n                                                        onChange={handleChange}\n                                                        value={values.close4}\n                                                        checked={values.close4}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close4 && errors.close4}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Saturday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour5\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour5}\n                                                    invalid={touched.openHour5 && errors.openHour5}\n                                                />\n                                                <FormFeedback>{errors.openHour5}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour5\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour5}\n                                                    invalid={touched.closeHour5 && errors.closeHour5}\n                                                />\n                                                <FormFeedback>{errors.closeHour5}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close5\"\n                                                        onChange={handleChange}\n                                                        value={values.close5}\n                                                        checked={values.close5}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close5 && errors.close5}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Sunday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour6\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour6}\n                                                    invalid={touched.openHour6 && errors.openHour6}\n                                                />\n                                                <FormFeedback>{errors.openHour6}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour6\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour6}\n                                                    invalid={touched.closeHour6 && errors.closeHour6}\n                                                />\n                                                <FormFeedback>{errors.closeHour6}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close6\"\n                                                        onChange={handleChange}\n                                                        value={values.close6}\n                                                        checked={values.close6}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close6 && errors.close6}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col>\n                                    <Button block disabled={!isValid || isSubmitting}>\n                                        {isSubmitting ? <Spinner size={'sm'} /> : 'Confirm'}\n                                    </Button>\n\n\n                                </Col>\n                                <Col>\n\n                                </Col>\n\n\n                            </Row>\n\n\n                        </Form>\n                    </Col>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\nexport default BusinessProfile;","import React from 'react';\n\nexport const HomeIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"></path></svg>\n\nexport const MinusCircleIcon = ({width}) => <svg width={width} fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const PlusCircleIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const CartIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\"></path></svg>\n\nexport const TrashIcon = ({width}) => <svg width={width} fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const GitHubIcon = ({width}) => <svg width={width} viewBox=\"0 0 16 16\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>","import React from 'react';\n\nimport { useCart } from '../../hooks/useCart';\nimport { formatNumber } from '../../../utils/utils';\nimport { PlusCircleIcon, MinusCircleIcon, TrashIcon } from '../../components/icons';\n\nconst CartItem = ({ product }) => {\n\n    const { increase, decrease, removeProduct } = useCart();\n\n    return (\n        <div className=\"row no-gutters py-2\">\n            <div className=\"col-sm-2 p-2\">\n                <img\n                    alt={product.name}\n                    style={{ margin: \"0 auto\", maxHeight: \"50px\" }}\n                    src={product.photo} className=\"img-fluid d-block\" />\n            </div>\n            <div className=\"col-sm-4 p-2\">\n                <h5 className=\"mb-1\">{product.name}</h5>\n                <p className=\"mb-1\">Price: {formatNumber(product.price)} </p>\n\n            </div>\n            <div className=\"col-sm-2 p-2 text-center \">\n                <p className=\"mb-0\">Qty: {product.quantity}</p>\n            </div>\n            <div className=\"col-sm-4 p-2 text-right\">\n                <button\n                    onClick={() => increase(product)}\n                    className=\"btn btn-primary btn-sm mr-2 mb-1\">\n                    <PlusCircleIcon width={\"20px\"} />\n                </button>\n\n                {\n                    product.quantity > 1 &&\n                    <button\n                        onClick={() => decrease(product)}\n                        className=\"btn btn-danger btn-sm mb-1\">\n                        <MinusCircleIcon width={\"20px\"} />\n                    </button>\n                }\n\n                {\n                    product.quantity === 1 &&\n                    <button\n                        onClick={() => removeProduct(product)}\n                        className=\"btn btn-danger btn-sm mb-1\">\n                        <TrashIcon width={\"20px\"} />\n                    </button>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default CartItem;","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\n\nimport CartItem from './CartItem';\nimport { useCart } from '../../hooks/useCart';\nimport styles from './CartProducts.module.scss';\n\nconst CartProducts = () => {\n\n    const { cartItems } = useCart();\n\n    return ( \n        <div className={styles.p__container}>\n            <div className=\"card card-body border-0\">\n\n                {\n                    cartItems.map(product =>  <CartItem key={product.id} product={product}/>)\n                }\n\n            </div>\n        </div>\n\n     );\n}\n \nexport default CartProducts;","import React from 'react';\nimport Header from '../pages/newHome/Header';\nimport Footer from '../pages/newHome/Footer';\n\n// import { Helmet } from 'react-helmet-async';\n\n// import 'bootswatch/dist/lux/bootstrap.css'\n\nconst Layout = ({ title, description, children }) => {\n    return (\n        <>\n            {/* <Helmet>\n                <title>{title ? title + \" - React Boilerplate\" : \"React.js Boilerplate\"}</title>\n                <meta name=\"description\" content={description || \"React.js Boilerplate\"} />\n            </Helmet> */}\n            <Header />\n            <main className=\"container\">\n                {children}\n            </main>\n            <Footer />\n        </>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CartProducts from './CartProducts';\nimport Layout from '../../components/Layout';\nimport { useCart } from '../../hooks/useCart';\nimport { formatNumber } from '../../../utils/utils';\n\nconst Cart = () => {\n\n    const { total, cartItems, itemCount, clearCart, checkout, handleCheckout } = useCart();\n\n    return cartItems === null || cartItems === undefined ? (\n        <>\n            <div className=\"p-3 text-center text-muted\">\n                Your cart is empty\n            </div>\n        </>\n    ) : (\n        <Layout title=\"Cart\" description=\"This is the Cart page\" >\n            <div >\n                <div className=\"text-center mt-5\">\n                    <h1>Cart</h1>\n                    <p>This is the Cart Page.</p>\n                </div>\n\n                <div className=\"row no-gutters justify-content-center\">\n                    <div className=\"col-sm-9 p-3\">\n                        {\n                            cartItems.length > 0 ?\n                                <CartProducts /> :\n                                <div className=\"p-3 text-center text-muted\">\n                                    Your cart is empty\n                                </div>\n                        }\n\n                        {checkout &&\n                            <div className=\"p-3 text-center text-success\">\n                                <p>Checkout successfull</p>\n                                <Link to=\"/\" className=\"btn btn-outline-success btn-sm\">BUY MORE</Link>\n                            </div>\n                        }\n                    </div>\n                    {\n                        cartItems.length > 0 &&\n                        <div className=\"col-sm-3 p-3\">\n                            <div className=\"card card-body\">\n                                <p className=\"mb-1\">Total Items</p>\n                                <h4 className=\" mb-3 txt-right\">{itemCount}</h4>\n                                <p className=\"mb-1\">Total Payment</p>\n                                <h3 className=\"m-0 txt-right\">{formatNumber(total)}</h3>\n                                <hr className=\"my-4\" />\n                                <div className=\"text-center\">\n                                    <button type=\"button\" className=\"btn btn-primary mb-2\" onClick={handleCheckout}>CHECKOUT</button>\n                                    <button type=\"button\" className=\"btn btn-outlineprimary btn-sm\" onClick={clearCart}>CLEAR</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    }\n\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\nexport default Cart;","import { MapMarkerUrls } from '../../../constants';\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Button,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { getBusinessProfile, saveMerchantConnection, disConnectionMerchant, fetchFlyers } from '../../../redux/actionCreators/adminActionCreators';\nimport { changePropertyColor, cancelShowBusinessInfo } from '../../../redux/actionCreators/appActionCreators';\nimport { useHistory } from 'react-router';\nimport { setPropertyRegistrationForm } from '../../../redux/actionCreators/registrationActionCreators';\nimport QRCode from \"react-qr-code\";\nimport { SERVICE_URL } from '../../../constants';\nimport { pdfjs, Document, Page } from 'react-pdf';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport 'react-pdf/dist/esm/Page/TextLayer.css';\n\n// import type { PDFDocumentProxy } from 'pdfjs-dist';\nconsole.log('..pdf js..' + pdfjs.version);\npdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/build/pdf.worker.min.js`;\n\nconst options = {\n    cMapUrl: '/cmaps/',\n    standardFontDataUrl: '/standard_fonts/',\n};\n\n\nconst BusinessPortal = ({ match }) => {\n\n    // console.log('..match..' + JSON.stringify(match));\n    const propertyId = match.params.id;\n    const utilsData = useSelector((state) => state.utilsData);\n    const history = useHistory();\n    const shareUrl = \"https://klosertoyou.com/business-portal/\" + propertyId;\n    const serverUrl = process.env.REACT_APP_SOCKET_SERVER;// SERVICE_URL.replace('/api', '');\n    const dispatch = useDispatch();\n    // const property = utilsData.selectedProperty;\n    // console.log('..property.. ' + JSON.stringify(property));\n    const user = useSelector((state) => state.auth.me);\n    const [companyProfile, setCompanyProfile] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [property, setProperty] = useState(null);\n    const [flyer, setFlyer] = useState(null);\n\n    const [numPages, setNumPages] = useState(0);\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const onDocumentLoadSuccess = ({ numPages }) => {\n        console.log('..set page ...' + numPages);\n        setNumPages(numPages);\n    }\n    const onDocumentLoadError = (error) => {\n        console.log('...load PDF error..', error)\n    }\n    const getWorkingHourValue = (hours, dayOfWeek, index) => {\n        const item = hours.filter((hour) => {\n            return parseInt(hour.dayOfWeek) === dayOfWeek;\n\n        });\n        // console.log('..item..' + JSON.stringify(item));\n        if (item && item.length > 0) {\n            if (index === 1) return item[0].openHour;\n            if (index === 2) return item[0].closeHour;\n            if (index === 3) {\n                // console.log('..item[0].closed..' + item[0].closed);\n                return item[0].closed;\n            }\n        }\n        return '';\n    };\n    const [workingHour, setWorkingHour] = useState([]);\n    useEffect(() => {\n        // setLoading(true);\n        dispatch(getBusinessProfile({ id: propertyId })).then((resp) => {\n            // console.log('..property ..info..' + JSON.stringify(resp.value));\n            setCompanyProfile(resp.value.companyProfile);\n            setWorkingHour(resp.value.workingHour);\n            setProperty(resp.value.property);\n            const ownerId = resp.value.property.users[0].id;\n            // console.log('...ownerId...', ownerId);\n            dispatch(fetchFlyers(ownerId, { page: 1, pageSize: 1 })).then(resp => {\n                console.log('fetch ...flyers..', resp);\n                setFlyer(resp.value.data);\n            })\n            setLoading(false);\n\n        }\n\n        );\n\n        return () => { };\n    }, [dispatch]);\n\n    const disConnectToMerchant = () => {\n        const jsonData = {\n            merchant_property_id: property.id\n        }\n        dispatch(disConnectionMerchant(jsonData)).then(resp => {\n            console.log('disconnect ..' + JSON.stringify(resp));\n            utilsData.showBusinessInfo = false;\n            const fncCallback = utilsData.fncCallback;\n            dispatch(cancelShowBusinessInfo()).then(resp => {\n                history.push('/');\n            });\n\n        }).catch(error => {\n\n        })\n    }\n    const connectToMerchant = () => {\n\n        //check user whether login\n        if (user !== null && user !== undefined) {\n            //user already login, just connect them together\n            const jsonData = {\n                merchant_property_id: property.id\n            }\n            dispatch(saveMerchantConnection(jsonData)).then(resp => {\n                history.push('/');\n            }).catch(error => {\n                console.log('...save connection error');\n            })\n        } else {\n            utilsData.connectToMerchantId = property.id;\n            console.log('..start to connect to merchant..' + property.id);\n            const blankAddress = {\n                \"postalCode\": \"\",\n                \"streetNumber\": \"\",\n                \"route\": \"\",\n                \"locality\": \"\",\n                \"city\": \"\",\n                \"country\": \"\",\n            };\n            dispatch(setPropertyRegistrationForm({\n                address: blankAddress,\n                active: true,\n            })).then(resp => {\n                history.push('/');\n            });\n        }\n    }\n    const goToPrevPage = () =>\n        setPageNumber(pageNumber - 1 <= 1 ? 1 : pageNumber - 1);\n\n    const goToNextPage = () =>\n        setPageNumber(\n            pageNumber + 1 >= numPages ? numPages : pageNumber + 1,\n        );\n    return !loading && (\n        <Col md={12} sm={12} xs={12} className=\"overlay-form-container\">\n            <Link to={'/'}>\n                <img\n                    className={'logo-container'}\n                    src={'/assets/img/logo-white.png'}\n                    alt={'logo'}\n                />\n            </Link>\n\n            <Row style={{ width: \"100%\" }}>\n                <Col xl='6' style={{ textAlign: \"left\", width: \"100%\" }}>\n                    <Row >\n                        <Col>\n                            <QRCode\n                                size={256}\n                                className={'logo-container'}\n                                style={{ marginTop: \"20px\", height: \"100px\", maxWidth: \"100%\", width: \"100%\" }}\n                                value={shareUrl}\n                                viewBox={`0 0 256 256`}\n                            />\n                        </Col>\n                    </Row>\n                    <Row >\n\n                        <Col style={{ textAlign: \"left\" }}>\n                            {\n                                companyProfile && (\n                                    <>\n\n                                        <Row>\n                                            <Col><h1>{companyProfile.companyName}</h1></Col> </Row>\n                                        <Row>   <Col><i className=\"fa-solid fa-address\"></i> {property.streetNumber + ' ' + property.route + ' ' + property.locality + ',' + property.city + ',' + property.postalCode} </Col> </Row>\n                                        <Row>   <Col><i className=\"fa-solid fa-phone\"></i> {companyProfile.phone} </Col> </Row>\n                                        <Row>   <Col><i className=\"fa-solid fa-globe\"></i> <a href={companyProfile.website} target=\"_blank\" className='business_link'>Company Website</a> </Col> </Row>\n                                        {/* {property.binding_email && property.binding_email !== null && property.binding_email !== 'null' ? <Row>   <Col><i className=\"fa-solid fa-envelope\"></i> {property.binding_email} </Col> </Row> : null} */}\n                                        {property.email && property.email !== null && property.email !== 'null' ? <Row>   <Col><i className=\"fa-solid fa-envelope\"></i> {property.email + '@' + companyProfile.companyName + '.com'} </Col> </Row> : null}\n                                        <Row>\n                                            <Col>\n                                                {companyProfile.android_url ? <a href={companyProfile.android_url} target='_blank' >\n                                                    <img\n                                                        className={'app-container'}\n                                                        src={'/assets/img/google-play-badge.png'}\n                                                        alt={'Android App Download'}\n                                                    />\n                                                </a> : null}\n                                            </Col>\n                                            <Col>\n                                                {companyProfile.ios_url ? <a href={companyProfile.ios_url} target='_blank' >\n                                                    <img\n                                                        className={'app-container'}\n                                                        src={'/assets/img/appstore-badge.png'}\n                                                        alt={'iOS App Download'}\n                                                    />\n                                                </a> : null}\n                                            </Col>\n                                        </Row>\n\n                                        <Row>\n                                            <Col> <hr /></Col>\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                Monday:\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 0, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    We're Closed\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        {getWorkingHourValue(workingHour, 0, 1)} - {getWorkingHourValue(workingHour, 0, 2)}\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                Tuesday:\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 1, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    We're Closed\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        {getWorkingHourValue(workingHour, 1, 1)} - {getWorkingHourValue(workingHour, 1, 2)}\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                Wednesday:\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 2, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    We're Closed\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        {getWorkingHourValue(workingHour, 2, 1)} - {getWorkingHourValue(workingHour, 2, 2)}\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                Thursday:\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 3, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    We're Closed\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        {getWorkingHourValue(workingHour, 3, 1)} - {getWorkingHourValue(workingHour, 3, 2)}\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                Friday:\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 4, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    We're Closed\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        {getWorkingHourValue(workingHour, 4, 1)} - {getWorkingHourValue(workingHour, 4, 2)}\n                                                    </Col>\n                                                </>\n                                            }\n\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                Saturday:\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 5, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    We're Closed\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        {getWorkingHourValue(workingHour, 5, 1)} - {getWorkingHourValue(workingHour, 5, 2)}\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                Sunday:\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 6, 3) == true ?\n                                                <>       <Col md={6}>\n                                                    We're Closed\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        {getWorkingHourValue(workingHour, 6, 1)} - {getWorkingHourValue(workingHour, 6, 2)}\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                    </>\n                                )\n                            }\n\n                        </Col>\n                    </Row>\n\n                    <Row xl={6}>\n                        <Col>\n\n                            {property.connected === \"1\" ?\n                                <Button\n                                    className=\"mt-1 mb-5\"\n                                    color={'success'}\n                                    block\n                                    onClick={() => disConnectToMerchant()}>\n                                    DisConnect\n                                </Button> :\n                                <Button\n                                    className=\"mt-1 mb-5\"\n                                    color={'success'}\n                                    block\n                                    onClick={() => connectToMerchant()}>\n                                    Connect\n                                </Button>\n                            }\n                        </Col>\n\n                    </Row>\n                </Col>\n                <Col xl='6'>\n\n                    {flyer && flyer.length > 0 ?\n                        <>\n                            <Row>\n                                <Col> Flyers: {flyer[0].attributes.description} <br />Published At: {flyer[0].attributes.updatedAt.split('T')[0]}</Col>\n                                <Col> <a href={serverUrl + flyer[0].attributes.flyer_files.data[0].attributes.fileUrl} target='_blank'> View At Full Size </a></Col>\n                            </Row>\n                            <Row>\n                                <Col>\n\n                                    <div>\n                                        <Document file={serverUrl + flyer[0].attributes.flyer_files.data[0].attributes.fileUrl}\n\n                                            onLoadSuccess={onDocumentLoadSuccess}\n                                            onLoadError={onDocumentLoadError}\n                                        >\n                                            <Page pageNumber={pageNumber} />\n                                        </Document>\n\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col style={{ marginTop: '20px', textAlign: 'center', width: '50%' }}>\n                                    <Row ><Col>\n                                        <button className='pdfViewer' onClick={goToPrevPage}> {'<'} </button>\n                                    </Col>\n                                        <Col>\n                                            <p className='pdfViewer'>\n                                                Page {pageNumber} of {numPages}\n                                            </p>\n                                        </Col>\n                                        <Col>\n                                            <button className='pdfViewer' onClick={goToNextPage}> {'>'} </button>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </> : 'No Flyer'\n                    }\n                </Col>\n\n            </Row>\n\n        </Col>\n    );\n};\nexport default BusinessPortal;","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Button,\n    Row,\n    Col,\n    FormGroup,\n    Label,\n    Form,\n    FormFeedback,\n    Spinner\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { getBusinessProfile, unSubscribeMerchant, loadConnectedTotal } from '../../../redux/actionCreators/adminActionCreators';\nimport { useHistory } from 'react-router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { toastr } from 'react-redux-toastr';\nconst bindingSchema = Yup.object().shape({\n    content: Yup.string().required('This field is required'),\n});\n\nconst UnSubscribe = ({ match }) => {\n\n    // console.log('..match..' + JSON.stringify(match));\n    const history = useHistory();\n    const queryPage = history.location.search;\n    const mobileNumber = queryPage.split('&')[0].split('=')[1];\n    const bindingProperty = queryPage.split('&')[1].split('=')[1];\n    // console.log('..queryPage..' + queryPage);\n    const propertyId = match.params.id;\n    const utilsData = useSelector((state) => state.utilsData);\n    const [totalConnected, setTotalConnected] = useState(null);\n    const dispatch = useDispatch();\n    // const property = utilsData.selectedProperty;\n    // console.log('..property.. ' + JSON.stringify(property));\n    const user = useSelector((state) => state.auth.me);\n    const [companyProfile, setCompanyProfile] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [property, setProperty] = useState(null);\n    const [unscribed, setUnscribed] = useState(false);\n\n    const getWorkingHourValue = (hours, dayOfWeek, index) => {\n        const item = hours.filter((hour) => {\n            return parseInt(hour.dayOfWeek) === dayOfWeek;\n\n        });\n        // console.log('..item..' + JSON.stringify(item));\n        if (item && item.length > 0) {\n            if (index === 1) return item[0].openHour;\n            if (index === 2) return item[0].closeHour;\n            if (index === 3) {\n                // console.log('..item[0].closed..' + item[0].closed);\n                return item[0].closed;\n            }\n        }\n        return '';\n    };\n    const [workingHour, setWorkingHour] = useState([]);\n    useEffect(() => {\n        // setLoading(true);\n        dispatch(getBusinessProfile({ id: propertyId })).then((resp) => {\n            console.log('..property ..info..' + JSON.stringify(resp.value));\n            setCompanyProfile(resp.value.companyProfile);\n            setWorkingHour(resp.value.workingHour);\n            setProperty(resp.value.property);\n            setLoading(false);\n\n        }\n\n        );\n        const jsonData = {\n            id_type: 1,\n            id: propertyId\n        }\n        dispatch(loadConnectedTotal(jsonData)).then(resp => {\n            console.log('..get total ..' + JSON.stringify(resp));\n            let total1 = parseInt(resp.value.value[0].iCount) + parseInt(resp.value.value2);\n            setTotalConnected(total1 > 0 ? total1 : 0);\n        }).catch(error => {\n\n        });\n        return () => { };\n    }, [dispatch]);\n\n\n    const formik = useFormik({\n        initialValues: {\n            content: ''\n        },\n        isInitialValid: false,\n        validationSchema: bindingSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n            const jsonData = {\n                propertyId: propertyId,\n                mobileNumber: mobileNumber,\n                message: values.content,\n                bindingProperty: bindingProperty\n            }\n            dispatch(unSubscribeMerchant(jsonData)).then(resp => {\n                console.log('..unsubscribe return..' + JSON.stringify(resp));\n                if (resp.value.status === 'failed') {\n                    toastr.error('Error', resp.value.message);\n                    setSubmitting(false);\n                } else {\n                    setUnscribed(true);\n                }\n            }).catch(error => {\n                console.log('..unscribe error..' + JSON.stringify(error));\n            })\n\n        }\n    });\n    const {\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        isValid,\n        isSubmitting,\n        setFieldValue,\n        values,\n    } = formik;\n\n    const shareUrl = \"https://klosertoyou.com/business-portal/\" + propertyId;\n    const [current, setCurrent] = useState(0);\n    const limitWords = (e) => {\n        const currentLength = e.target.value.length;\n        setCurrent(currentLength)\n    }\n    return !loading && (\n        <Col md={12} sm={12} xs={12} className=\"overlay-form-container\">\n            <Link to={'/'}>\n                <img\n                    className={'logo-container'}\n                    src={'/assets/img/logo-white.png'}\n                    alt={'logo'}\n                />\n            </Link>\n            {unscribed ? <Row>\n                <Col> UnSubscribe Successful! Sorry to see you go!\n                </Col>\n            </Row> :\n                <Form onSubmit={handleSubmit} style={{ width: \"80%\" }}>\n                    <Row md={12} sm={12} xs={12} style={{ width: \"100%\" }} >\n\n                        <Col style={{ textAlign: \"left\" }}>\n                            {\n                                companyProfile && (\n                                    <>\n\n                                        <Row>\n                                            <Col><h3>{companyProfile.companyName}</h3></Col> </Row>\n                                        <Row>   <Col><i className=\"fa-solid fa-address\"></i> {(property.unit_no ? property.unitNo + ' - ' : '') + property.streetNumber + ' ' + property.route + ' ' + property.locality + ',' + property.city + ',' + property.postalCode} </Col> </Row>\n                                        <Row>   <Col><i className=\"fa-solid fa-phone\"></i> {companyProfile.phone} </Col> </Row>\n                                        {companyProfile.website ? <Row>   <Col><i className=\"fa-solid fa-globe\"></i> <a href={companyProfile.website} className='business_link'>Company Website</a>  </Col> </Row> : null}\n                                        {totalConnected ? <Row>   <Col>Connected: {totalConnected} </Col> </Row> : null}\n                                        <Row>   <Col><i className=\"fa-solid fa-globe\"></i> <a className='business_link' href={shareUrl} target=\"_blank\"> {shareUrl}</a>\n\n                                        </Col> </Row>\n                                        {property.email && property.email !== null && property.email !== 'null' ? <Row>\n                                            <Col><i className=\"fa-solid fa-envelope\"></i> {property.email + '@' + companyProfile.companyName + '.com'}\n                                                {property.connected !== \"1\" || (user !== undefined && user.property !== undefined && property.id === user.property.id) ? null : <Button size={'sm'} onClick={(e) => cbSendEmail(e, property)} >Send Email</Button>}\n                                            </Col>\n                                        </Row> : null}\n                                        <Row>\n                                            <Col> <hr /></Col>\n\n                                        </Row>\n                                        <Row>\n                                            <Col>Working Hours <hr /></Col>\n\n                                        </Row>\n                                        <Row className=\"unSubscribe-form\">\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\", color: \"white\" }} for=\"lblPropertyName\">Monday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 0, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\" style={{ color: \"white\" }} >We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\" style={{ color: \"white\" }}> {getWorkingHourValue(workingHour, 0, 1)} - {getWorkingHourValue(workingHour, 0, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\", color: \"white\" }} for=\"lblPropertyName\">Tuesday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 1, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\" style={{ color: \"white\" }}>We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\" style={{ color: \"white\" }}> {getWorkingHourValue(workingHour, 1, 1)} - {getWorkingHourValue(workingHour, 1, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\", color: \"white\" }} for=\"lblPropertyName\">Wednesday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 2, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\" style={{ color: \"white\" }}>We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\" style={{ color: \"white\" }}> {getWorkingHourValue(workingHour, 2, 1)} - {getWorkingHourValue(workingHour, 2, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\", color: \"white\" }} for=\"lblPropertyName\">Thursday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 3, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\" style={{ color: \"white\" }}>We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\" style={{ color: \"white\" }}> {getWorkingHourValue(workingHour, 3, 1)} - {getWorkingHourValue(workingHour, 3, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\", color: \"white\" }} for=\"lblPropertyName\">Friday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 4, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\" style={{ color: \"white\" }}>We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\" style={{ color: \"white\" }}> {getWorkingHourValue(workingHour, 4, 1)} - {getWorkingHourValue(workingHour, 4, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\", color: \"white\" }} for=\"lblPropertyName\">Saturday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 5, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\" style={{ color: \"white\" }}>We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\" style={{ color: \"white\" }}> {getWorkingHourValue(workingHour, 5, 1)} - {getWorkingHourValue(workingHour, 5, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\", color: \"white\" }} for=\"lblPropertyName\">Sunday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 6, 3) == true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\" style={{ color: \"white\" }}>We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\" style={{ color: \"white\" }}> {getWorkingHourValue(workingHour, 6, 1)} - {getWorkingHourValue(workingHour, 6, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                    </>\n                                )\n                            }\n\n                        </Col>\n                        <Col style={{ textAlign: \"left\" }}>\n                            <Label for=\"lblPropertyName\">Please let us know why you want to disconnect:</Label>\n                            <FormGroup class=\"wrapper\">\n                                <TextArea\n                                    maxLength={1000}\n                                    rows={5}\n                                    type=\"text\"\n                                    name=\"content\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    onKeyUp={(e) => limitWords(e)}\n                                    value={values.content}\n                                    invalid={touched.content && errors.content}\n                                />\n                                <div id=\"the-count\">\n                                    <span id=\"current\">{current}</span>\n                                    <span id=\"maximum\">/ 1000</span>\n                                </div>\n                                <FormFeedback>{errors.content}</FormFeedback>\n                            </FormGroup>\n                            <Button block disabled={!isValid || isSubmitting}>\n                                {isSubmitting ? <Spinner size={'sm'} /> : 'DisConnect'}\n                            </Button>\n\n                        </Col>\n                    </Row>\n\n                </Form>\n            }\n        </Col>\n    );\n};\nexport default UnSubscribe;","import React, { useState, useEffect } from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport { unsubscribeBeforeConnect } from '../../../redux/actionCreators/adminActionCreators';\nimport { useSelector, useDispatch } from 'react-redux';\nconst UnSubscribed = () => {\n    //email=dragon2934%40gmail.com&property_id=153\n    const history = useHistory();\n    const queryPage = history.location.search;\n    const email = queryPage.split('&')[0].split('=')[1];\n    const propertyId = queryPage.split('&')[1].split('=')[1];\n    const dispatch = useDispatch();\n    useEffect(() => {\n\n        const jsonData = {\n            propertyId,\n            email\n        }\n        dispatch(unsubscribeBeforeConnect(jsonData)).then(resp => {\n            console.log('.. unsubscribe Before Connect ..' + JSON.stringify(resp));\n            // let total1 = parseInt(resp.value.value[0].iCount) + parseInt(resp.value.value2);\n            // setTotalConnected(total1 > 0 ? total1 : 0);\n        }).catch(error => {\n\n        });\n        return () => { };\n    }, [dispatch]);\n    return (\n        <Col md={12} sm={12} xs={12} className=\"overlay-form-container\">\n            <Link to={'/'}>\n                <img\n                    className={'logo-container'}\n                    src={'/assets/img/logo-white.png'}\n                    alt={'logo'}\n                />\n            </Link>\n            <br /><br /><br /><br /><br />\n            <p>  </p>\n\n            <Row>\n                <Col> You're unsubscribed.\n                </Col>\n            </Row>\n        </Col>\n    );\n};\n\nexport default UnSubscribed;\n","import { MapMarkerUrls } from '../../../constants';\nimport { useFormik } from 'formik';\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Button,\n    Col,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label,\n    Row,\n    Spinner,\n    InputGroup\n} from 'reactstrap';\nimport {\n    CTabs,\n    CNav,\n    CNavItem,\n    CNavLink,\n    CTabContent,\n    CTabPane,\n} from '@coreui/react';\nimport { Link } from 'react-router-dom';\nimport { getBusinessProfileByConnectToken, confirmConnection } from '../../../redux/actionCreators/adminActionCreators';\nimport { changePropertyColor, cancelShowBusinessInfo, sendVerificationCodeByMobileNumber } from '../../../redux/actionCreators/appActionCreators';\nimport { useHistory } from 'react-router';\nimport { setPropertyRegistrationForm } from '../../../redux/actionCreators/registrationActionCreators';\nimport MobileInput from '../../../common/components/MobileInput';\nimport * as Yup from 'yup';\nimport { toastr } from 'react-redux-toastr';\nimport { setLoginType } from '../../../utils/utils';\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string().required('Mobile number is required'),\n    password: Yup.string()\n        .min(6, 'Create password minimum 6 characters!')\n        .max(16, 'Password is too Long!')\n        .required('Password is required'),\n});\nconst Connect = ({ match }) => {\n\n    // console.log('..match..' + JSON.stringify(match));\n    const propertyId = match.params.id;\n    const utilsData = useSelector((state) => state.utilsData);\n    const history = useHistory();\n    const [activeKey, setActiveKey] = useState(1);\n\n    const [error, setError] = useState(null);\n    const token = history.location.search.split('=')[1];\n    // console.log('..token..' + token);\n    const dispatch = useDispatch();\n    // const property = utilsData.selectedProperty;\n    // console.log('..property.. ' + JSON.stringify(property));\n    const user = useSelector((state) => state.auth.me);\n    const [companyProfile, setCompanyProfile] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [property, setProperty] = useState(null);\n    const [bindingProperty, setBindingProperty] = useState(null);\n    const [merchantId, setMerchantId] = useState(null);\n    const [verifyCode, setVerifyCode] = useState(null);\n    const [connectToken, setConnectToken] = useState(null);\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            passwordConfirmation: '',\n            consent: false\n        },\n        onSubmit: (values, { setSubmitting }) => {\n            // setError(null);\n            // console.log('... activeKey ..' + activeKey);\n\n            // setSubmitting(true);\n            // const data = {\n            //     mobilePhone: values.email,\n            //     password: values.password,\n            //     action: activeKey,\n            //     propertyId: bindingProperty.id,\n            //     bindingName: bindingProperty.bindingName,\n            //     merchantId: merchantId\n            // }\n            // dispatch(confirmConnection(data))\n            //     .then((response) => {\n            //         if (response.value.error && response.value.error.status > 300) {\n            //             toastr.error('Error', response.value.error.details[0].messages[0].message);\n            //         } else {\n            //             console.log('..start get me');\n\n\n            //         }\n            //     })\n            //     .catch((error) => {\n            //         console.log('..login error' + JSON.stringify(error));\n            //         // toastr.error('Error', response.message[0].messages[0].message);\n            //     })\n            //     .finally(() => {\n            //         setSubmitting(false);\n            //     });\n        },\n    });\n\n    const {\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        isSubmitting,\n        values,\n        setFieldValue,\n        setValues,\n        setFieldTouched,\n    } = formik;\n    const getWorkingHourValue = (hours, dayOfWeek, index) => {\n        const item = hours.filter((hour) => {\n            return parseInt(hour.dayOfWeek) === dayOfWeek;\n\n        });\n        // console.log('..item..' + JSON.stringify(item));\n        if (item && item.length > 0) {\n            if (index === 1) return item[0].openHour;\n            if (index === 2) return item[0].closeHour;\n            if (index === 3) {\n                // console.log('..item[0].closed..' + item[0].closed);\n                return item[0].closed;\n            }\n        }\n        return '';\n    };\n    const [workingHour, setWorkingHour] = useState([]);\n    useEffect(() => {\n        // setLoading(true);\n        dispatch(getBusinessProfileByConnectToken({ token: token })).then((resp) => {\n            // console.log('..property ..info..' + JSON.stringify(resp.value));\n            setCompanyProfile(resp.value.companyProfile);\n            setWorkingHour(resp.value.workingHour);\n            setProperty(resp.value.property);\n            setBindingProperty(resp.value.bindingProperty);\n            setLoading(false);\n            setMerchantId(resp.value.merchantId);\n            setConnectToken(resp.value.connectToken);\n            setValues({\n                email: resp.value.connectToken.bindingPhone\n            });\n\n        }\n\n        );\n        return () => { };\n    }, [dispatch]);\n    const getVerifyCode = (e) => {\n        console.log('.. send verify code to:' + connectToken.bindingPhone);\n        const code = Math.floor(100000 + Math.random() * 900000);\n        setVerifyCode(code);\n        dispatch(sendVerificationCodeByMobileNumber(code, connectToken.bindingPhone)).then(response => {\n            if (response.value.error && response.value.error.status > 300) {\n                toastr.error('Error', response.value.error.details[0].messages[0].message);\n            } else {\n                toastr.success('Success', 'Verify Code has been sent!');\n            }\n        })\n    }\n    const confirmConnect = (e) => {\n\n\n        // setSubmitting(true);\n        if (values.password === null || values.password === undefined || values.length < 6) {\n            toastr.error('Error', 'Please enter a valid password, minimun 6 char');\n            return;\n        }\n        if (activeKey === 2) {\n            if (!values.consent) {\n                toastr.error('Error', 'You must agree our Privacy Policy and Terms of Use!');\n                return;\n            }\n            //check verify code\n            if (verifyCode === null || verifyCode === undefined || parseInt(values.verifyCode) !== verifyCode) {\n                toastr.error('Error', 'Verify Code Error!');\n                return;\n            }\n            if (values.passwordConfirmation === null || values.passwordConfirmation === undefined || values.passwordConfirmation.length < 6) {\n                toastr.error('Error', 'Please enter a valid confirm password, minimun 6 char');\n                return;\n            }\n            if (values.password !== values.passwordConfirmation) {\n                toastr.error('Error', 'Passwords must match');\n                return;\n            }\n        }\n        const data = {\n            mobilePhone: values.email,\n            password: values.password,\n            action: activeKey,\n            propertyId: bindingProperty.id,\n            bindingName: bindingProperty.bindingName,\n            merchantId: merchantId,\n            token: token\n        }\n        console.log('..data..' + JSON.stringify(data));\n\n        dispatch(confirmConnection(data))\n            .then((response) => {\n                console.log('..response..' + JSON.stringify(response));\n                if (response.value.error && response.value.error.status > 300) {\n                    toastr.error('Error', response.value.error.details[0].messages[0].message);\n                } else {\n                    setLoginType(1); //This is Client\n                    // console.log('..start get me');\n                    toastr.success('Success', 'Connect successful!');\n                    location.replace('/logout');\n                }\n            })\n            .catch((error) => {\n                console.log('..login error' + JSON.stringify(error));\n                // toastr.error('Error', response.message[0].messages[0].message);\n            })\n            .finally(() => {\n                // setSubmitting(false);\n            });\n    }\n    const [eye, seteye] = useState(true);\n    const [password, setpassword] = useState(\"password\");\n    const [type, settype] = useState(false);\n    const Eye = () => {\n        if (password == \"password\") {\n            setpassword(\"text\");\n            seteye(false);\n            settype(true);\n        }\n        else {\n            setpassword(\"password\");\n            seteye(true);\n            settype(false);\n        }\n    }\n    return !loading && (\n        <Col md={12} sm={12} xs={12} className=\"overlay-form-container\">\n            <Link to={'/'}>\n                <img\n                    className={'logo-container'}\n                    src={'/assets/img/logo-white.png'}\n                    alt={'logo'}\n                />\n            </Link>\n\n            <Row style={{ width: \"100%\" }}>\n\n                <Col style={{ textAlign: \"left\" }}>\n                    {\n                        companyProfile && (\n                            <>\n\n                                <Row>\n                                    <Col><h1>{companyProfile.companyName}</h1></Col> </Row>\n                                <Row>   <Col><i className=\"fa-solid fa-address\"></i> {property.streetNumber + ' ' + property.route + ' ' + property.locality + ',' + property.city + ',' + property.postalCode} </Col> </Row>\n                                <Row>   <Col><i className=\"fa-solid fa-phone\"></i> {companyProfile.phone} </Col> </Row>\n                                <Row>   <Col><i className=\"fa-solid fa-globe\"></i> <a href={companyProfile.website} target=\"_blank\" className='business_link'>Company Website</a> </Col> </Row>\n                                {/* {property.binding_email && property.binding_email !== null && property.binding_email !== 'null' ? <Row>   <Col><i className=\"fa-solid fa-envelope\"></i> {property.binding_email} </Col> </Row> : null} */}\n                                <Row>\n                                    <Col> <hr /></Col>\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        Monday:\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 0, 3) === true ?\n                                        <>       <Col md={6}>\n                                            We're Closed\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                {getWorkingHourValue(workingHour, 0, 1)} - {getWorkingHourValue(workingHour, 0, 2)}\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        Tuesday:\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 1, 3) === true ?\n                                        <>       <Col md={6}>\n                                            We're Closed\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                {getWorkingHourValue(workingHour, 1, 1)} - {getWorkingHourValue(workingHour, 1, 2)}\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        Wednesday:\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 2, 3) === true ?\n                                        <>       <Col md={6}>\n                                            We're Closed\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                {getWorkingHourValue(workingHour, 2, 1)} - {getWorkingHourValue(workingHour, 2, 2)}\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        Thursday:\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 3, 3) === true ?\n                                        <>       <Col md={6}>\n                                            We're Closed\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                {getWorkingHourValue(workingHour, 3, 1)} - {getWorkingHourValue(workingHour, 3, 2)}\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        Friday:\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 4, 3) === true ?\n                                        <>       <Col md={6}>\n                                            We're Closed\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                {getWorkingHourValue(workingHour, 4, 1)} - {getWorkingHourValue(workingHour, 4, 2)}\n                                            </Col>\n                                        </>\n                                    }\n\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        Saturday:\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 5, 3) === true ?\n                                        <>       <Col md={6}>\n                                            We're Closed\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                {getWorkingHourValue(workingHour, 5, 1)} - {getWorkingHourValue(workingHour, 5, 2)}\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        Sunday:\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 6, 3) == true ?\n                                        <>       <Col md={6}>\n                                            We're Closed\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                {getWorkingHourValue(workingHour, 6, 1)} - {getWorkingHourValue(workingHour, 6, 2)}\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                            </>\n                        )\n                    }\n\n                </Col>\n                <Col>\n                    <CTabs activeTab=\"login\">\n                        <CNav variant=\"pills\" role=\"tablist\">\n                            <CNavItem>\n                                <CNavLink\n                                    data-tab=\"login\"\n                                    href=\"javascript:void(0);\"\n                                    active={activeKey === 1}\n                                    onClick={() => setActiveKey(1)}\n                                >\n                                    Existing User\n                                </CNavLink>\n                            </CNavItem>\n                            <CNavItem>\n                                <CNavLink\n                                    data-tab=\"register\"\n                                    href=\"javascript:void(0);\"\n                                    active={activeKey === 2}\n                                    onClick={() => {\n\n                                        setActiveKey(2);\n\n\n                                    }}\n                                >\n                                    New User\n                                </CNavLink>\n                            </CNavItem>\n                        </CNav>\n                        <CTabContent>\n                            <CTabPane role=\"tabpanel\" data-tab=\"login\" aria-labelledby=\"home-tab\" visible={activeKey === 1} >\n                                <div className=\"login-form\">\n                                    <Form onSubmit={handleSubmit}>\n                                        {error && (\n                                            <Col>\n                                                <Alert color={'danger'}>{error}</Alert>\n                                            </Col>\n                                        )}\n                                        <Col>\n                                            <FormGroup>\n                                                <Label for=\"email\">Mobile Number</Label>\n                                                <Input\n                                                    setFieldValue={setFieldValue}\n                                                    setFieldTouched={setFieldTouched}\n                                                    placeholder=\"Mobile Number\"\n                                                    name={'email'}\n                                                    value={values.email}\n                                                    invalid={touched.email && errors.email}\n                                                />\n\n                                                <FormFeedback>{errors.email}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <FormGroup className='passwordFormGroup'>\n                                                <Label for=\"password\">Password</Label>\n                                                <Input\n                                                    type={password}\n                                                    name=\"password\"\n                                                    id=\"password\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    invalid={\n                                                        touched.password && errors.password\n                                                    }\n                                                    placeholder=\"********\"\n                                                /> <i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash\" : \"fa-eye\"}`}></i>\n                                                <FormFeedback>\n                                                    {errors.password}\n                                                </FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n\n                                        <Col>\n                                            <Row>\n                                                <Col>\n                                                    <Button\n                                                        onClick={(e) => confirmConnect(e)}\n                                                        block\n                                                        disabled={isSubmitting}\n                                                        outline\n                                                        className=\"float-right my-3\">\n                                                        {isSubmitting ? (\n                                                            <Spinner size={'sm'} />\n                                                        ) : (\n                                                            'Enter Password to Connect'\n                                                        )}\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <Col>\n                                            <Row>\n                                                <Col>\n                                                    <a target={\"_blank\"} href=\"/reset-password\">Forgot Password ?</a>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </Form>\n                                </div>\n                            </CTabPane>\n                            <CTabPane role=\"tabpanel\" data-tab=\"register\" aria-labelledby=\"home-tab\" visible={activeKey === 2} >\n                                <div className='register-form'>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Col>\n                                            <FormGroup>\n                                                <Label for=\"email\">Mobile Number</Label>\n                                                <Input\n                                                    setFieldValue={setFieldValue}\n                                                    setFieldTouched={setFieldTouched}\n                                                    placeholder=\"Mobile Number\"\n                                                    name={'email'}\n                                                    value={values.email}\n                                                    invalid={touched.email && errors.email}\n                                                />\n                                                <FormFeedback>{errors.email}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <FormGroup>\n                                                <Row>\n                                                    <Col md={8}>\n                                                        <FormGroup className=\"passwordFormGroup\">\n                                                            <Label for=\"password\">Verify Code</Label>\n                                                            <Input\n                                                                setFieldValue={setFieldValue}\n                                                                setFieldTouched={setFieldTouched}\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                placeholder=\"Verify Code\"\n                                                                name={'verifyCode'}\n                                                                value={values.verifyCode}\n                                                                invalid={touched.verifyCode && errors.verifyCode}\n                                                            />\n                                                            <FormFeedback>{errors.verifyCode}</FormFeedback>\n                                                        </FormGroup>\n                                                    </Col><Col md={4} className='mt-4' style={{ paddingTop: \"6px\" }}>\n                                                        <Button\n                                                            onClick={(e) => getVerifyCode(e)}\n                                                            className='active'\n                                                            outline\n                                                        >\n                                                            Get Code\n                                                        </Button>\n                                                    </Col>\n                                                </Row>\n\n\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <FormGroup className=\"passwordFormGroup\">\n                                                <Label for=\"password\">Password</Label>\n                                                <Input\n                                                    type={password}\n                                                    placeholder=\"Password\"\n                                                    name={'password'}\n                                                    value={values.password}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    invalid={touched.password && errors.password}\n                                                /> <i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash\" : \"fa-eye\"}`}></i>\n                                                <FormFeedback>{errors.password}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <FormGroup className=\"passwordFormGroup\">\n                                                <Label for=\"password\">Confirm Password</Label>\n                                                <Input\n                                                    type={password}\n                                                    placeholder=\"Password Confirmation\"\n                                                    name={'passwordConfirmation'}\n                                                    value={values.passwordConfirmation}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    invalid={\n                                                        touched.passwordConfirmation &&\n                                                        errors.passwordConfirmation\n                                                    }\n                                                /> <i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash\" : \"fa-eye\"}`}></i>\n                                                <FormFeedback>\n                                                    {errors.passwordConfirmation}\n                                                </FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <InputGroup className='mb-3'>\n                                                <Label check style={{ marginLeft: \"20px\" }}>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"consent\"\n                                                        onChange={(e) => {\n                                                            setFieldTouched('consent');\n                                                            setFieldValue(\n                                                                'consent',\n                                                                e.currentTarget.checked,\n                                                            );\n                                                        }}\n                                                        checked={values.consent}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.consent && errors.consent}\n                                                    />\n                                                    I've read{' '}\n                                                    <a target={'_blank'} href=\"/privacy-policy\">Privacy Policy</a> and{' '}\n                                                    <a target={'_blank'} href=\"/terms-of-use\">Terms of Use</a>.\n                                                </Label>\n                                            </InputGroup>\n                                        </Col>\n                                        <Col>\n                                            <Row className=\"contact-us-submit-container\">\n                                                <Col>\n                                                    <Button\n                                                        onClick={(e) => confirmConnect(e)}\n                                                        block\n                                                        disabled={isSubmitting}\n                                                        outline\n                                                        className=\"float-right my-3\">\n                                                        {isSubmitting ? (\n                                                            <Spinner size=\"sm\" />\n                                                        ) : (\n                                                            'Register and Connect'\n                                                        )}\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </Form>\n                                </div>\n                            </CTabPane>\n                        </CTabContent>\n                    </CTabs>\n                </Col>\n            </Row>\n\n        </Col>\n    );\n};\nexport default Connect;","import { useFormik } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    InputGroup,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport MobileInput from '../../../common/components/MobileInput';\nimport { resetPassword } from '../../../redux/actionCreators/authActionCreators';\nimport { toastr } from 'react-redux-toastr';\nimport Footer from './Footer';\nimport Header from './Header';\nconst validationSchema = Yup.object({\n    mobileNumber: Yup.number().required('Mobile number is required'),\n});\n\nconst ResetPassword = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            mobileNumber: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n            dispatch(resetPassword(values.mobileNumber))\n                .then((response) => {\n                    console.log('.. res:' + JSON.stringify(response));\n                    if (response.value.error && response.value.error.status > 300) {\n                        toastr.error('Error', response.value.error.details[0].messages[0].message);\n                    } else {\n                        history.push(\n                            `/verify-reset-password/` + values.mobileNumber,\n                        );\n                    }\n                })\n                .catch((e) => {\n                    setFieldError(\n                        'mobileNumber',\n                        e.message[0].messages[0].message,\n                    );\n                })\n                .finally(() => {\n                    setSubmitting(false);\n                });\n        },\n    });\n\n    const {\n        values,\n        touched,\n        errors,\n        handleSubmit,\n        isValid,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n        setFieldError,\n    } = formik;\n\n    return (\n        <main>\n            <Header />\n            <div className=\"full-screen\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Reset Password</Col>\n                    </Row>\n                    <Form onSubmit={handleSubmit}>\n                        <InputGroup className=\"mb-3\">\n                            <MobileInput\n                                setFieldValue={setFieldValue}\n                                setFieldTouched={setFieldTouched}\n                                placeholder=\"Mobile Number\"\n                                name={'mobileNumber'}\n                                value={values.mobileNumber}\n                                invalid={\n                                    touched.mobileNumber && errors.mobileNumber\n                                }\n                            />\n                            <FormFeedback>{errors.mobileNumber}</FormFeedback>\n                        </InputGroup>\n                        <Row className=\"contact-us-submit-container\">\n                            <Col>\n                                <Button\n                                    type={'submit'}\n                                    block\n                                    disabled={!isValid || isSubmitting}\n                                    outline\n                                    className=\"float-right my-3\">\n                                    {isSubmitting ? (\n                                        <Spinner bsSize=\"sm\" />\n                                    ) : (\n                                        'Submit'\n                                    )}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default ResetPassword;\n","import { useFormik } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    Input,\n    InputGroup,\n    Label,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport { verifyResetPassword } from '../../../redux/actionCreators/authActionCreators';\nimport { toastr } from 'react-redux-toastr';\nimport Footer from './Footer';\nimport Header from './Header';\nconst validationSchema = Yup.object({\n    verificationCode: Yup.number().required('Mobile number is required'),\n});\n\nconst VerifyResetPassword = ({\n    match: {\n        params: { mobileNumber },\n    },\n}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            verificationCode: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n            console.log('values: ', values);\n            dispatch(verifyResetPassword(mobileNumber, values.verificationCode))\n                .then((response) => {\n                    if (response.value.error && response.value.error.status > 300) {\n                        toastr.error('Error', response.value.error.details[0].messages[0].message);\n                    } else {\n                        history.push(`/reset-password-change-password/${mobileNumber}`);\n                    }\n                })\n                .catch((e) => {\n                    setFieldError(\n                        'verificationCode',\n                        e.message[0].messages[0].message,\n                    );\n                })\n                .finally(() => {\n                    setSubmitting(false);\n                });\n        },\n    });\n\n    const {\n        isValid,\n        isSubmitting,\n        setFieldError,\n        handleSubmit,\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n    } = formik;\n\n    return (\n        <main>\n            <Header />\n            <div className=\"full-screen\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Reset Password</Col>\n                    </Row>\n                    <Form onSubmit={handleSubmit}>\n                        <div className=\"mb-4\">\n                            <Label for=\"verificationCode\">\n                                Mobile Verification Code\n                            </Label>\n                            <InputGroup className=\"mb-3\">\n                                <Input\n                                    name=\"verificationCode\"\n                                    placeholder=\"Enter verification code sent to your mobile...\"\n                                    value={values.verificationCode}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    invalid={\n                                        touched.verificationCode &&\n                                        errors.verificationCode\n                                    }\n                                />\n                                <FormFeedback>\n                                    {errors.verificationCode}\n                                </FormFeedback>\n                            </InputGroup>\n                        </div>\n                        <Button\n                            type={'submit'}\n                            block\n                            disabled={!isValid || isSubmitting}\n                            outline\n                            className=\"float-right my-3\">\n                            {isSubmitting ? <Spinner bsSize=\"sm\" /> : 'Submit'}\n                        </Button>\n                    </Form>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default VerifyResetPassword;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    Input,\n    FormGroup,\n    Row,\n    Spinner,\n    Label\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport { iOSChangePassword } from '../../../redux/actionCreators/authActionCreators';\nimport { useHistory } from 'react-router';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst validationSchema = Yup.object({\n    password: Yup.string()\n        // eslint-disable-next-line no-template-curly-in-string\n        .min(6, 'Password must be at least ${min} characters!')\n        .max(32)\n        .required('Password is required'),\n    // .matches(\n    //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n    //     'Must contain 8 characters, one uppercase, one lowercase and one number',\n    // ),\n    passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref('password')], 'Passwords must match')\n        .required('This field is required'),\n});\n\nconst ResetPassword3 = ({\n    match: {\n        params: { mobileNumber },\n    },\n}) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            passwordConfirmation: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n\n            dispatch(iOSChangePassword(mobileNumber, values.password)).then((response) => {\n                setSubmitting(false);\n                if (response.value.error && response.value.error.status > 300) {\n                    toastr.error('Error', response.value.error.details[0].messages[0].message);\n\n                } else {\n                    toastr.success('Successful!', 'Password has been changed.');\n                }\n            });\n        },\n    });\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isValid,\n        isSubmitting,\n    } = formik;\n    const [eye, seteye] = useState(true);\n    const [password, setpassword] = useState(\"password\");\n    const [type, settype] = useState(false);\n    const Eye = () => {\n        if (password == \"password\") {\n            setpassword(\"text\");\n            seteye(false);\n            settype(true);\n        }\n        else {\n            setpassword(\"password\");\n            seteye(true);\n            settype(false);\n        }\n    }\n    return (\n        <main>\n            <Header />\n            <div className=\"full-screen\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Change Password</Col>\n                    </Row>\n                    <Form onSubmit={handleSubmit}>\n                        <Col>\n                            <FormGroup className='passwordFormGroup'>\n                                <Label for=\"password\">Password</Label>\n\n                                <Input\n                                    type={password}\n                                    placeholder=\"Password\"\n                                    name={'password'}\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    invalid={touched.password && errors.password}\n                                /><i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash\" : \"fa-eye\"}`}></i>\n                                <FormFeedback>{errors.password}</FormFeedback>\n                            </FormGroup>\n                        </Col>\n                        <Col>\n                            <FormGroup className='passwordFormGroup'>\n                                <Label for=\"password\">Password</Label>\n\n                                <Input\n                                    type={password}\n                                    placeholder=\"Password Confirmation\"\n                                    name={'passwordConfirmation'}\n                                    value={values.passwordConfirmation}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    invalid={\n                                        touched.passwordConfirmation &&\n                                        errors.passwordConfirmation\n                                    }\n                                /><i onClick={Eye} className={`fa ${eye ? \"fa-eye-slash\" : \"fa-eye\"}`}></i>\n                                <FormFeedback>\n                                    {errors.passwordConfirmation}\n                                </FormFeedback>\n                            </FormGroup>\n                        </Col>\n                        <Col>\n                            <Row className=\"contact-us-submit-container\">\n                                <Col>\n                                    <Button\n                                        type={'submit'}\n                                        block\n                                        disabled={isSubmitting}\n                                        outline\n                                        className=\"float-right my-3\">\n                                        {isSubmitting ? (\n                                            <Spinner size=\"sm\" />\n                                        ) : (\n                                            'Submit'\n                                        )}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Form>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default ResetPassword3;\n","import React, { lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport '../styles/site/app.scss';\n// import {isAdmin} from './/utils/authUtils';\n\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\nconst Logout = lazy(() => import(\"./pages/Logout\"));\n\n// const User = React.lazy(() => import('../admin/views/users/User'));\n// const UserEdit = React.lazy(() => import('../admin/views/users/UserEdit'));\n// const Users = React.lazy(() => import('../admin/views/users/Users'));\n\nconst Coupon = React.lazy(() => import('../admin/views/coupon/Coupon'));\nconst CouponEdit = React.lazy(() => import('../admin/views/coupon/CouponEdit'));\nconst Coupons = React.lazy(() => import('../admin/views/coupon/Coupons'));\n\nconst Event = React.lazy(() => import('../admin/views/events/Event'));\nconst EventEdit = React.lazy(() => import('../admin/views/events/EventEdit'));\nconst Events = React.lazy(() => import('../admin/views/events/Events'));\n\n// const Properties = React.lazy(() => import('../admin/views/properties/Properties'));\n// const Property = React.lazy(() => import('../admin/views/properties/Property'));\n// const PropertyEdit = React.lazy(() =>\n//     import('../admin/views/properties/PropertyEdit'),\n// );\n\nconst PropertyFileUpload = React.lazy(() => import('../admin/views/properties/file-upload'));\n\nimport AboutUs from './pages/newHome/AboutUs';\nimport ContactUs from './pages/newHome/ContactUs';\nimport HowItWorks from './pages/newHome/HowItWorks';\nimport NewsRelease from './pages/newHome/NewsRelease';\nimport OurPromise from './pages/newHome/OurPromise';\nimport OurStory from './pages/newHome/OurStory';\nimport OurVideo from './pages/newHome/OurVideo';\nimport Patents from './pages/newHome/Patents';\nimport PrivacyPolicy from './pages/newHome/PrivacyPolicy';\nimport TermsOfUse from './pages/newHome/TermsOfUse';\n\nimport EditProperty from './pages/profile/EditProperty';\nimport MobileAccountVerification from './pages/mobile/MobileAccountVerification';\nimport ChangeEMail from './pages/newHome/ChangeEMail';\nimport ChangeMobile from './pages/newHome/ChangeMobile';\nimport ChangePassword from \"./pages/newHome/ChangePassword\";\nimport MemberShip from \"./pages/newHome/MemberShip\";\nimport MapProvider from '../common/contexts/MapContext/MapProvider';\nimport Checkout from \"./pages/newHome/Checkout\";\nimport CheckoutSuccess from './pages/newHome/CheckoutSuccess';\nimport CheckoutFailed from './pages/newHome/CheckoutFailed';\nimport BusinessProfile from \"./pages/newHome/BusinessProfile\";\nimport Cart from \"./pages/cart\";\nimport BusinessPortal from \"./pages/newHome/BusinessPortal\";\nimport UnSubscribe from \"./pages/newHome/UnSubscribe\";\nimport UnSubscribed from \"./pages/newHome/UnSubscribed\";\n\nimport Connect from \"./pages/newHome/Connect\";\nimport ResetPassword from \"./pages/newHome/ResetPassword\";\nimport VerifyResetPassword from './pages/newHome/VerifyResetPassword';\nimport ResetPassword3 from './pages/newHome/ResetPassword3';\n// import Admin from \"../admin/Admin\";\n\nconst Users = React.lazy(() => import('../admin/views/users/Users'));\nconst User = React.lazy(() => import('../admin/views/users/User'));\nconst UserEdit = React.lazy(() => import('../admin/views/users/UserEdit'));\n\nconst Properties = React.lazy(() => import('../admin/views/properties/Properties'));\nconst Property = React.lazy(() => import('../admin/views/properties/Property'));\nconst PropertyEdit = React.lazy(() =>\n  import('../admin/views/properties/PropertyEdit'),\n);\n\nconst Templates = React.lazy(() => import('../admin/views/templates/Templates'));\nconst Template = React.lazy(() => import('../admin/views/templates/Template'));\nconst TemplateEdit = React.lazy(() => import('../admin/views/templates/TemplateEdit'));\n\nconst CreateEmailCampaign = React.lazy(() => import('../admin/views/emailCampaigns/CreateEmailCampaigns'));\nconst EmailCampaigns = React.lazy(() => import('../admin/views/emailCampaigns/EmailCampaigns'));\nconst ViewCampaign = React.lazy(() => import('../admin/views/emailCampaigns/ViewCampaign'));\n\n\nconst Flyer = React.lazy(() => import('../admin/views/flyer/Flyer'));\nconst FlyerEdit = React.lazy(() => import('../admin/views/flyer/FlyerEdit'));\nconst Flyers = React.lazy(() => import('../admin/views/flyer/Flyers'));\n\nconst Site = () => {\n  return (\n    <Switch>\n      <Route component={Login} path={`/login`} exact />\n      <Route component={Logout} path={`/logout`} exact />\n\n      <Route\n        component={MobileAccountVerification}\n        path={`/mobile-verify`}\n        exact\n      />\n      <Route\n        component={(props) => (\n          <MapProvider>\n            <EditProperty {...props} />\n          </MapProvider>\n        )}\n        path={`/edit-property`}\n        exact\n      />\n\n\n\n      <Route exact path=\"/admin/email-campaigns\" component={EmailCampaigns} />\n      {/* <Route exact path=\"/admin/email-campaigns/new\" component={CreateEmailCampaign} /> */}\n      <Route exact path=\"/admin/email-campaign/:id\" component={ViewCampaign} />\n      <Route\n        component={(props) => (\n          <MapProvider>\n            <CreateEmailCampaign {...props} />\n          </MapProvider>\n        )}\n        path={`/admin/email-campaigns/new`}\n        exact\n      />\n\n\n      <Route exact path=\"/admin/file-upload\" component={PropertyFileUpload} />\n      <Route exact path=\"/admin/flyers\" component={Flyers} />\n      <Route exact path=\"/admin/flyers/new\" component={FlyerEdit} />\n      <Route exact path=\"/admin/flyers/:id\" component={Flyer} />\n      <Route exact path=\"/admin/edit/flyer/:id\" component={FlyerEdit} />\n\n      <Route exact path=\"/admin/coupons\" component={Coupons} />\n      <Route exact path=\"/admin/coupons/new\" component={CouponEdit} />\n      <Route exact path=\"/admin/coupons/:id\" component={Coupon} />\n      <Route exact path=\"/admin/edit/coupon/:id\" component={CouponEdit} />\n\n      <Route exact path=\"/admin/events\" component={Events} />\n      <Route exact path=\"/admin/events/new\" component={EventEdit} />\n      <Route exact path=\"/admin/events/:id\" component={Event} />\n      <Route exact path=\"/admin/edit/event/:id\" component={EventEdit} />\n\n      <Route exact path=\"/admin/users\" component={Users} />\n      <Route exact path=\"/admin/users/new\" component={UserEdit} />\n      <Route exact path=\"/admin/users/:id\" component={User} />\n      <Route exact path=\"/admin/edit/user/:id\" component={UserEdit} />\n\n      <Route exact path=\"/admin/properties\" component={Properties} />\n      <Route exact path=\"/admin/properties/new\" component={PropertyEdit} />\n      <Route exact path=\"/admin/properties/:id\" component={Property} />\n      <Route exact path=\"/admin/edit/properties/:id\" component={PropertyEdit} />\n\n      <Route exact path=\"/admin/templates\" component={Templates} />\n      <Route exact path=\"/admin/templates/new\" component={TemplateEdit} />\n      <Route exact path=\"/admin/templates/:id\" component={Template} />\n      <Route exact path=\"/admin/edit/templates/:id\" component={TemplateEdit} />\n\n\n      {/* <Route exact path=\"/admin\" component={Admin} /> */}\n      <Route exact path=\"/connect\" component={Connect} />\n      <Route exact path=\"/cart\" component={Cart} />\n      <Route exact path=\"/change-email\" component={ChangeEMail} />\n      <Route exact path=\"/pricing\" component={MemberShip} />\n      <Route exact path=\"/checkout/:id\" component={Checkout} />\n      <Route exact path=\"/change-mobile\" component={ChangeMobile} />\n      <Route exact path=\"/change-password\" component={ChangePassword} />\n      <Route exact path=\"/reset-password\" component={ResetPassword} />\n      <Route exact path=\"/verify-reset-password/:mobileNumber\" component={VerifyResetPassword} />\n      <Route exact path=\"/reset-password-change-password/:mobileNumber\" component={ResetPassword3} />\n\n      <Route exact path=\"/checkout_success\" component={CheckoutSuccess} />\n      <Route exact path=\"/checkout_failed\" component={CheckoutFailed} />\n      <Route exact path=\"/business-profile\" component={BusinessProfile} />\n      <Route exact path=\"/business-portal/:id\" component={BusinessPortal} />\n      <Route exact path=\"/un-subscribe/:id\" component={UnSubscribe} />\n      <Route exact path=\"/unsubscribed\" component={UnSubscribed} />\n\n\n      <Route exact path=\"/about-us\" component={AboutUs} />\n      <Route exact path=\"/how-it-works\" component={HowItWorks} />\n      <Route exact path=\"/patents\" component={Patents} />\n      <Route exact path=\"/contact-us\" component={ContactUs} />\n      {/* <Route exact path=\"/app-introduction\" component={AppLanding} /> */}\n      <Route exact path=\"/our-story\" component={OurStory} />\n      <Route exact path=\"/our-promise\" component={OurPromise} />\n      <Route exact path=\"/news-release\" component={NewsRelease} />\n      <Route exact path=\"/our-video\" component={OurVideo} />\n      <Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />\n      <Route exact path=\"/terms-of-use\" component={TermsOfUse} />\n\n      {/* <Route render={()=>{\n                isAdmin() ? <Component component={Site} path=\"/\" />: <Redirect to=\"/login\" />\n              }} /> */}\n\n      <Route component={Home} path={`/`} />\n\n\n    </Switch>\n  );\n};\n\nexport default Site;\n","import moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Collapse,\n    FormFeedback,\n    Input,\n    InputGroup,\n    Label,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport { resendEmailVerificationCode } from '../../../redux/actionCreators/appActionCreators';\nimport { verifyAccount } from '../../../redux/actionCreators/registrationActionCreators';\nimport { toastr } from 'react-redux-toastr';\n\nconst EmailVerification = ({ currentUser }) => {\n    const [error, setError] = useState(null);\n    const [verificationCode, setVerificationCode] = useState();\n    const [remainingTime, setRemainingTime] = useState(0);\n\n    const [resendVisible, setResendVisible] = useState(false);\n    const [pendingResend, setPendingResend] = useState(false);\n    const [pendingVerify, setPendingVerify] = useState(false);\n\n    const dispatch = useDispatch();\n    let user = useSelector((state) => state.auth.user);\n    const registrationUser = useSelector((state) => state.registerForm.user);\n    if (currentUser === null || currentUser === undefined) {\n        if (user === null || user === undefined) {\n            user = registrationUser;\n        }\n    } else {\n        user = currentUser;\n    }\n\n    // console.log('EmailVerification...'+ JSON.stringify(user));\n    const onClickVerify = useCallback(() => {\n        setPendingVerify(true);\n        dispatch(\n            verifyAccount({\n                userId: user.id,\n                emailVerificationCode: verificationCode,\n            }),\n        )\n            .then(({ value: { user } }) => {\n                if (!user.emailVerified) setError('Invalid Verification Code');\n                else {\n                    setError(null);\n                    if (currentUser != null || currentUser != undefined) {\n                        if (window.ReactNativeWebView) {\n                            window.ReactNativeWebView.postMessage(\n                                JSON.stringify({ result: 'verified' }),\n                            );\n                        }\n                        window.location.reload();\n\n                    }\n                }\n            })\n            .finally(() => {\n                setPendingVerify(false);\n            });\n    }, [dispatch, verificationCode, user]);\n\n    const onClickResendVerificationCode = useCallback(() => {\n        setPendingResend(true);\n\n        dispatch(resendEmailVerificationCode()).finally(() => {\n            setPendingResend(false);\n        });\n    }, [dispatch]);\n\n    useEffect(() => {\n        const calculateRemainingTime = () => {\n            if (!user) return;\n\n            const lastTimeAvail = moment(\n                moment(user.lastEmailVerificationTime)\n                    .add(1, 'minutes')\n                    .format(),\n            );\n            const now = moment(moment().format());\n\n            const diff = moment.duration(lastTimeAvail.diff(now)).asSeconds();\n\n            if (diff < 0 || Number.isNaN(diff)) {\n                clearInterval(handle);\n                setRemainingTime(0);\n            } else {\n                setRemainingTime(diff);\n            }\n        };\n\n        const handle = setInterval(calculateRemainingTime, 1000);\n\n        return () => {\n            clearInterval(handle);\n        };\n    }, [user]);\n\n    const userHasEmail = user.username !== user.email;\n\n    if (!userHasEmail) return null;\n\n    if (user.emailVerified)\n        return (\n            <div className=\"mb-4 d-flex flex-row align-items-center\">\n                <i className=\"fa fa-3x fa-check text-success\" /> Email Verified\n            </div>\n        );\n\n    return (\n        <div className=\"mb-4\">\n            <Label for=\"verificationCode\">Email Verification</Label>\n\n            <InputGroup className=\"mb-3\">\n                <Input\n                    type=\"text\"\n                    size={'lg'}\n                    name=\"verificationCode\"\n                    invalid={!!error}\n                    placeholder=\"Enter verification code sent to your email address...\"\n                    onChange={(e) => setVerificationCode(e.currentTarget.value)}\n                />\n                <FormFeedback>{error}</FormFeedback>\n            </InputGroup>\n\n            <Row noGutters className=\"mt-2 mb-2 justify-content-end\">\n                <Button\n                    className=\"btn-no-focus\"\n                    color={'link'}\n                    tag={'a'}\n                    onClick={() => setResendVisible(!resendVisible)}>\n                    Did not Receive Email\n                </Button>\n\n                <Button\n                    className=\"btn-no-focus\"\n                    onClick={onClickVerify}\n                    color={pendingVerify ? 'link' : 'primary'}>\n                    {pendingVerify ? <Spinner size=\"sm\" /> : 'Verify Email'}\n                </Button>\n            </Row>\n\n            <Collapse isOpen={resendVisible}>\n                <Row noGutters className=\"justify-content-end\">\n                    <Button\n                        className=\"btn-no-focus\"\n                        size={'lg'}\n                        disabled={remainingTime !== 0}\n                        color={\n                            pendingResend\n                                ? 'link'\n                                : remainingTime !== 0\n                                    ? 'danger'\n                                    : 'success'\n                        }\n                        onClick={onClickResendVerificationCode}>\n                        {pendingResend ? (\n                            <Spinner size=\"sm\" />\n                        ) : (\n                            <>\n                                Resend Verification Code{' '}\n                                {remainingTime !== 0 && (\n                                    <>\n                                        {moment()\n                                            .startOf('day')\n                                            .seconds(remainingTime)\n                                            .format('mm:ss')}\n                                    </>\n                                )}\n                            </>\n                        )}\n                    </Button>\n                </Row>\n            </Collapse>\n        </div>\n    );\n};\n\nexport default EmailVerification;\n","import moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Collapse,\n    FormFeedback,\n    Input,\n    InputGroup,\n    Label,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport { resendMobileVerificationCode } from '../../../redux/actionCreators/appActionCreators';\nimport { verifyAccount } from '../../../redux/actionCreators/registrationActionCreators';\n\nconst MobileVerification = ({ currentUser }) => {\n    const [error, setError] = useState(null);\n    const [verificationCode, setVerificationCode] = useState();\n    const [remainingTime, setRemainingTime] = useState(0);\n\n    const [resendVisible, setResendVisible] = useState(false);\n    const [pendingResend, setPendingResend] = useState(false);\n    const [pendingVerify, setPendingVerify] = useState(false);\n\n    const dispatch = useDispatch();\n\n    let user = useSelector((state) => state.auth.user);\n    const registrationUser = useSelector((state) => state.registerForm.user);\n    if (currentUser === null || currentUser === undefined) {\n        if (user === null || user === undefined) {\n            user = registrationUser;\n        }\n    } else {\n        user = currentUser;\n    }\n\n    const onClickVerify = useCallback(() => {\n        setPendingVerify(true);\n        dispatch(\n            verifyAccount({\n                userId: user.id,\n                mobileVerificationCode: verificationCode,\n            }),\n        )\n            .then(({ value: { user } }) => {\n                if (!user.mobileVerified) setError('Invalid Verification Code');\n                else {\n                    setError(null);\n                    console.log('mobile verfied...' + JSON.stringify(user));\n                    if (currentUser != null || currentUser != undefined) {\n                        window.location.reload();\n                    }\n                }\n            })\n            .finally(() => {\n                setPendingVerify(false);\n            });\n    }, [dispatch, verificationCode, user]);\n\n    const onClickResendVerificationCode = useCallback(() => {\n        setPendingResend(true);\n\n        dispatch(resendMobileVerificationCode()).finally(() => {\n            setPendingResend(false);\n        });\n    }, [dispatch]);\n\n    useEffect(() => {\n        const calculateRemainingTime = () => {\n            if (!user) return;\n\n            const lastTimeAvail = moment(\n                moment(user.lastMobileVerificationTime)\n                    .add(10, 'minutes')\n                    .format(),\n            );\n            const now = moment(moment().format());\n\n            const diff = moment.duration(lastTimeAvail.diff(now)).asSeconds();\n\n            if (diff < 0 || Number.isNaN(diff)) {\n                clearInterval(handle);\n                setRemainingTime(0);\n            } else {\n                setRemainingTime(diff);\n            }\n        };\n\n        const handle = setInterval(calculateRemainingTime, 1000);\n\n        return () => {\n            clearInterval(handle);\n        };\n    }, [user]);\n\n    if (user.mobileVerified)\n        return (\n            <div className=\"mb-4 d-flex flex-row align-items-center\">\n                <i className=\"fa fa-3x fa-check text-success\" /> Mobile Number\n                Verified\n            </div>\n        );\n\n    return (\n        <div className=\"mb-4\">\n            <Label for=\"verificationCode\">Mobile Verification</Label>\n\n            <InputGroup className=\"mb-3\">\n                <Input\n                    type=\"text\"\n                    size={'lg'}\n                    name=\"verificationCode\"\n                    invalid={!!error}\n                    placeholder=\"Enter verification code sent to your mobile...\"\n                    onChange={(e) => setVerificationCode(e.currentTarget.value)}\n                />\n                <FormFeedback>{error}</FormFeedback>\n            </InputGroup>\n\n            <Row noGutters className=\"mt-2 mb-2 justify-content-end\">\n                <Button\n                    className=\"btn-no-focus\"\n                    color={'link'}\n                    tag={'a'}\n                    onClick={() => setResendVisible(!resendVisible)}>\n                    Did not Receive SMS\n                </Button>\n\n                <Button\n                    className=\"btn-no-focus\"\n                    onClick={onClickVerify}\n                    color={pendingVerify ? 'link' : 'primary'}>\n                    {pendingVerify ? <Spinner size=\"sm\" /> : 'Verify Mobile'}\n                </Button>\n            </Row>\n\n            <Collapse isOpen={resendVisible}>\n                <Row noGutters className=\"justify-content-end\">\n                    <Button\n                        className=\"btn-no-focus\"\n                        size={'lg'}\n                        disabled={remainingTime !== 0}\n                        color={\n                            pendingResend\n                                ? 'link'\n                                : remainingTime !== 0\n                                    ? 'danger'\n                                    : 'success'\n                        }\n                        onClick={onClickResendVerificationCode}>\n                        {pendingResend ? (\n                            <Spinner size=\"sm\" />\n                        ) : (\n                            <>\n                                Resend Verification Code{' '}\n                                {remainingTime !== 0 && (\n                                    <>\n                                        {moment()\n                                            .startOf('day')\n                                            .seconds(remainingTime)\n                                            .format('mm:ss')}\n                                    </>\n                                )}\n                            </>\n                        )}\n                    </Button>\n                </Row>\n            </Collapse>\n        </div>\n    );\n};\n\nexport default MobileVerification;\n","import React, { useState } from \"react\";\nimport { NavLink as ReactRouterLink } from \"react-router-dom\";\nimport {\n    Collapse,\n    Nav,\n    Navbar,\n    NavbarToggler,\n    NavItem,\n    NavLink,\n} from 'reactstrap';\n\nconst Footer = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const collapse = () => setIsOpen(false);\n\n    return (\n        <Navbar className=\"footer fixed-bottom\" color=\"dark\" dark expand=\"md\">\n            <Collapse isOpen={isOpen} navbar>\n                <Navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/our-story\">\n                                Our Story\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/our-promise\">\n                                Our Promise\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/contact-us\">\n                                Contact us\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/news-release\">\n                                News Release\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/our-video\">\n                                Our Video\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/how-it-works\">\n                                How it works\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/about-us\">\n                                About KloserToYou\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <Nav className=\"ml-auto mr-2\" navbar>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/privacy-policy\">\n                                Privacy Policy\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/terms-of-use\">\n                                Terms of Use\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </Navbar>\n            </Collapse>\n            <NavbarToggler onClick={toggle} tag={'div'}>\n                <i className=\"fa fa-bars\" />\n            </NavbarToggler>\n        </Navbar>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Toggle(props) {\n  const {\n    text,\n    size = \"default\",\n    checked,\n    disabled,\n    onChange,\n    offstyle = \"btn-danger\",\n    onstyle = \"btn-success\"\n  } = props;\n\n  let displayStyle = checked ? onstyle : offstyle;\n  return (\n    <>\n      <label className=\"switch_label\">\n        <span className={`${size} switch-wrapper`}>\n          <input\n            type=\"checkbox\"\n            checked={checked}\n            disabled={disabled}\n            onChange={e => onChange(e)}\n          />\n          <span className={`${displayStyle} switch`}>\n            <span className=\"switch-handle\" />\n          </span>\n        </span>\n        <span className=\"switch-label\">{text}</span>\n      </label>\n    </>\n  );\n}\n\nexport default Toggle;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink as ReactRouterLink, useHistory } from \"react-router-dom\";\nimport {\n    Collapse,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    NavItem,\n    NavLink,\n    Button,\n    ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle, Dropdown\n} from 'reactstrap';\n\nimport Toggle from '../../components/Toggle';\nimport { setEditMode } from '../../../redux/actionCreators/registrationActionCreators';\nimport { deleteAccount } from '../../../redux/actionCreators/appActionCreators';\nimport { logoutUser } from '../../../redux/actionCreators/authActionCreators';\nimport { toastr } from 'react-redux-toastr';\nimport { getLoginType, setLoginType, clearLoginType, checkUseLevel } from '../../../utils/utils';\nimport { loadConnectedTotal, sendPasswordBeforeDeleteAccount } from '../../../redux/actionCreators/adminActionCreators';\n// import { useMitt } from 'react-mitt'\nimport EventBus from '../../../utils/eventBus';\nimport { showPreferenceForm } from \"../../../redux/actionCreators/appActionCreators\";\nconst Header = () => {\n    const user = useSelector((state) => state.auth.me);\n    const history = useHistory();\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const collapse = () => setIsOpen(false);\n    const [dropDownOpen, setDropDownOpen] = useState(false);\n    const utilsData = useSelector((state) => state.utilsData);\n    const [editSwitch, setEditSwitch] = useState(utilsData.editMode);\n    // const { emitter } = useMitt();\n    const dispatch = useDispatch();\n\n    let userName = '';\n    let userEmail = '';\n    let loginType = 0;\n    const [totalConnected, setTotalConnected] = useState(null);\n\n    useEffect(() => {\n\n        EventBus.$on('onTotalConnectChange', (data) => {\n            console.log(data);\n            const data1 = totalConnected;\n            if (totalConnected) {\n                const data2 = data.totalConnected;\n                console.log(' .. data1..' + data1 + ' ..data2.. ' + data2);\n                setTotalConnected(parseInt(data1) + parseInt(data2));\n            }\n        })\n        return () => {\n\n        };\n    }, [totalConnected]);\n\n    try {\n        userName = [user.firstName, user.lastName]\n            .filter((i) => i)\n            .join(' ')\n            .trim();\n    } catch (e) { }\n    loginType = getLoginType();\n    // console.log('...loginType=' + loginType);\n    // const [connectionSwitch, setConnectionSwitch] = useState(parseInt(loginType) === 2 ? true : false);\n    let roleName = ''\n    if (user !== null && user !== undefined && user.property !== null && user.property !== undefined) {\n        // console.log('user =' + JSON.stringify(user));\n        roleName = user.role.name;\n        // console.log('..loginType=..' + loginType);\n        if (user.companyName) {\n            userEmail = user.property.email + '@' + user.companyName + '.com';\n            localStorage.setItem(\"current_domain\", user.companyName + '.com');\n        } else if (user.lastName) {\n            userEmail = user.property.email + '@' + user.lastName + '.com';\n            localStorage.setItem(\"current_domain\", user.lastName + '.com');\n        } else {\n            userEmail = user.property.email + '@klosertoyou.com';\n            localStorage.setItem(\"current_domain\", 'klosertoyou.com');\n        }\n        if (user.noDelivery && user.noDelivery === 1) {\n            userEmail = '';\n        }\n\n\n    } else {\n        userEmail = 'Enter your address to create your account';\n    }\n    useEffect(() => {\n        if (user && parseInt(loginType) === 2) {\n            const jsonData = {\n                id_type: 0,\n                id: user.id\n            }\n            dispatch(loadConnectedTotal(jsonData)).then(resp => {\n                console.log('..get total ..' + JSON.stringify(resp));\n                let total1 = parseInt(resp.value.value[0].iCount) + parseInt(resp.value.value2) + parseInt(resp.value.value3[0].iCount);\n                setTotalConnected(total1 > 0 ? total1 : 0);\n            }).catch(error => {\n\n            });\n        }\n    }, [dispatch, loginType]);\n    const toggleDropDownMenu = useCallback(() => {\n        setDropDownOpen(!dropDownOpen)\n    });\n    // const handleConnectionChange = useCallback(() => {\n    //     if (connectionSwitch) {\n    //         setLoginType(1);\n    //     } else {\n    //         setLoginType(2);\n    //     }\n    //     window.location.reload();\n    // });\n    const handleEditModeChange = useCallback(() => {\n        // setEditMode(!editMode);\n        if (utilsData.drawing) {\n            toastr.error('Error', 'Drawing addresses boundary, can not switch');\n            return;\n        }\n        utilsData.editMode = !editSwitch;\n        if (utilsData.editMode) {\n            console.log('...edit mode is enable !!!!..');\n        } else {\n            console.log('...edit mode is turn off !!!..');\n        }\n\n        setEditSwitch(utilsData.editMode);\n        const data = {\n            utilsData: {\n                editMode: !editSwitch\n            }\n        };\n        dispatch(setEditMode(data));\n\n    });\n    const onClickDeleteAccount = useCallback(() => {\n\n        dispatch(sendPasswordBeforeDeleteAccount()).then(({ value: retObj }) => {\n            console.log('..retObj..' + JSON.stringify(retObj));\n            const token = prompt('Please enter the verify code from your e-mail');\n            if (token) {\n                dispatch(deleteAccount(token)).then(({ value: retObj }) => {\n                    console.log('....delete acount return...' + JSON.stringify(retObj));\n                    clearLoginType();\n                    if (retObj.status === 'successed') {\n                        dispatch(logoutUser()).then(() => {\n                            // history.push('/');\n                            localStorage.removeItem(\"current_domain\");\n                            setTimeout(() => {\n                                window.location.href = '/';\n                                location.reload(true);\n                            }, 500);\n\n                        });\n                    } else {\n                        console.log('error message:' + retObj.message);\n                        toastr.error('Error !', retObj.error.details[0].messages[0].message);\n                    }\n                });\n            }\n        });\n    }, [dispatch, history]);\n    const adminGroup = [process.env.REACT_APP_ROLE_ADMIN_NAME, process.env.REACT_APP_ROLE_PM_NAME];\n    const menuLinks = parseInt(loginType) === 1 ? [\n        { menuText: 'Change Address', menuID: 1 },\n        { menuText: 'Change Email', menuID: 2 },\n        { menuText: 'Change Mobile', menuID: 3 },\n        { menuText: 'Change Password', menuID: 6 },\n        { menuText: 'Preference', menuID: 7 },\n        { menuText: 'Delete Account', menuID: 4 },\n        { menuText: 'logout', menuID: 5 },\n\n    ] : [\n        { menuText: 'Import Customers', menuID: 8 },\n        { menuText: 'Change Address', menuID: 1 },\n        { menuText: 'Change Email', menuID: 2 },\n        { menuText: 'Change Mobile', menuID: 3 },\n        { menuText: 'Change Password', menuID: 6 },\n        { menuText: 'Delete Account', menuID: 4 },\n        { menuText: 'logout', menuID: 5 },\n\n    ]\n    return (\n        <Navbar className=\"header fixed-top\" color=\"light\" light expand=\"md\">\n            <NavbarBrand className=\"pixels\" href=\"mailto:anything@AlphC.com\">\n                <img src={'/assets/img/logo2.png'} alt={'logo2'} />\n            </NavbarBrand>\n            <NavbarBrand tag={ReactRouterLink} className=\"mr-auto\" to=\"/\">\n                <img src={'/assets/img/logo-alphc.png'} alt={'logo'} />\n            </NavbarBrand>\n            <NavbarToggler onClick={toggle} tag={'div'}>\n                <i className=\"fa fa-bars\" />\n            </NavbarToggler>\n            <Collapse isOpen={isOpen} navbar>\n                <div style={{ width: \"64%\", textAlign: \"center\", fontSize: \"20px\", fontWeight: \"bold\" }}> {userEmail}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {totalConnected ? 'Connected:' + totalConnected : ''} </div>\n                <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                        {/* {user ? <Toggle\n                            checked={connectionSwitch}\n                            text=\"Connect Mode\"\n                            size=\"default\"\n                            disabled={false}\n                            onChange={handleConnectionChange}\n                            offstyle=\"btn-danger\"\n                            onstyle=\"btn-success\"\n                        /> : null} */}\n                        {\n                            user ? <div style={{ marginTop: \"10px\", fontSize: \"14px\" }}>Connect Mode</div> : null\n                        }\n\n                    </NavItem>\n                    <NavItem>\n                        {user && parseInt(loginType) === 2 ? <Toggle\n                            checked={editSwitch}\n                            text=\"Edit Mode\"\n                            size=\"default\"\n                            disabled={false}\n                            onChange={handleEditModeChange}\n                            offstyle=\"btn-danger\"\n                            onstyle=\"btn-success\"\n                        /> : null}\n                    </NavItem>\n                    {checkUseLevel(roleName) === 1 ? <NavItem>\n                        <NavLink\n                            tag={ReactRouterLink}\n                            onClick={collapse}\n                            to=\"/admin/users\">\n                            Admin\n                        </NavLink>\n                    </NavItem> : null}\n                    <NavItem>\n                        <NavLink\n                            tag={ReactRouterLink}\n                            onClick={collapse}\n                            to=\"/patents\">\n                            Patents\n                        </NavLink>\n                    </NavItem>\n                    {user ? (\n                        <>\n\n                            <ButtonDropdown >\n                                <Dropdown isOpen={dropDownOpen} toggle={toggleDropDownMenu} >\n                                    <DropdownToggle className=\"head-dropdown-toggle\">\n                                        Menu\n                                    </DropdownToggle>\n                                    <DropdownMenu className=\"city-dropdown\">\n                                        {\n                                            menuLinks.map(menu => {\n                                                return <DropdownItem key={'key' + menu.menuID} onClick={() => {\n                                                    // setSelectedCity(city.full_name);\n                                                    console.log('selected menu..' + menu.menuID);\n                                                    switch (menu.menuID) {\n                                                        case 1:\n                                                            history.push('/edit-property');\n                                                            break;\n                                                        case 2:\n                                                            history.push('/change-email');\n                                                            break;\n                                                        case 3:\n                                                            history.push('/change-mobile');\n                                                            break;\n                                                        case 4:\n                                                            //delete account\n                                                            toastr.confirm(\n                                                                'Are you sure you want to delete your account? This action is irreversible!',\n                                                                {\n                                                                    onOk: onClickDeleteAccount,\n                                                                },\n                                                            );\n                                                            break;\n                                                        case 5:\n                                                            localStorage.removeItem(\"current_domain\");\n                                                            clearLoginType();\n                                                            history.push('/logout')\n                                                            break;\n                                                        case 6:\n                                                            history.push('/change-password');\n                                                            break;\n                                                        case 7:\n                                                            // history.push('/change-password');\n                                                            utilsData.showPreference = true;\n                                                            dispatch(showPreferenceForm());\n                                                            break;\n                                                        case 8:\n                                                            // history.push('/change-password');\n                                                            utilsData.showImportCustomer = true;\n                                                            dispatch(showPreferenceForm());\n                                                            break;\n                                                    }\n                                                    // localStorage.setItem('city_short_name',city.short_name);\n                                                    // localStorage.setItem('city_full_name',city.full_name);\n                                                    // //do search\n                                                    // window.location.reload();\n                                                }\n                                                } >{menu.menuText}</DropdownItem>\n                                            })\n                                        }\n                                    </DropdownMenu>\n                                </Dropdown>\n                            </ButtonDropdown>\n\n                            {/* <NavItem>\n                                <NavLink\n                                    tag={ReactRouterLink}\n                                    onClick={collapse}\n                                    to=\"/logout\">\n                                    Logout(\n                                    {userName ? userName : user.mobileNumber})\n                                </NavLink>\n                            </NavItem> */}\n                        </>\n                    ) : (\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/login\">\n                                Login\n                            </NavLink>\n                        </NavItem>\n                    )}\n                </Nav>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header;\n","const EventBus = {\n\n    $on(eventType, callback) {\n        document.addEventListener(eventType, (ev) => callback(ev.detail))\n    },\n\n    $dispatch(eventType, data) {\n        const event = new CustomEvent(eventType, { detail: data })\n        document.dispatchEvent(event)\n    },\n\n    $remove(eventType, callback) {\n        document.removeEventListener(eventType, callback)\n    }\n}\n\nexport default EventBus","import mapboxgl from 'mapbox-gl';\nimport ReactDOM from 'react-dom';\nimport {\n    AlertStatus,\n    MapMarkerUrls,\n    PendingStatuses,\n    PropertyStatus,\n} from '../constants';\n\nexport const getNavigatorLocation = () => {\n    return new Promise((resolve, reject) => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) =>\n                    resolve({\n                        latitude: position.coords.latitude,\n                        longitude: position.coords.longitude,\n                    }),\n                (positionError) => reject(positionError),\n            );\n        } else {\n            reject('No geolocation api');\n        }\n    });\n};\n\nconst showPropertyTooltip = (map, renderTooltip, e) => {\n    let features = map.queryRenderedFeatures(e.point, {\n        layers: [\n            'other-properties',\n            'safe-properties',\n            'pending-properties',\n            'has_injured-properties',\n            'restaurant-layer',\n            'groceries-layer',\n            'cannibus-layer',\n        ],\n    });\n\n    if (!features.length) {\n        return;\n    }\n\n    var feature = features[0];\n\n    const element = document.createElement('div');\n\n    let domain = localStorage.getItem('current_domain');\n    if (domain === undefined || domain === null) {\n        domain = 'alphc.com'\n    }\n    if (feature.properties.companyName) {\n        domain = feature.properties.companyName + \".com\";\n    } else if (feature.properties.lastName) {\n        domain = feature.properties.lastName + \".com\";\n    }\n    if (feature.properties.email.includes(\"@\")) {\n        domain = '';\n    }\n    if (domain.length > 0) {\n        domain = \"@\" + domain;\n    }\n    ReactDOM.render(\n        renderTooltip({\n            email: feature.properties.email + domain, // CHANGE THIS TO REFLECT THE PROPERTIES YOU WANT TO SHOW\n            id: feature.properties.id,\n            property: feature.properties\n        }),\n        element,\n    );\n\n    new mapboxgl.Popup({\n        closeButton: false,\n        // closeOnClick: false,\n        maxWidth: 'none',\n        offset: [0, -55],\n    })\n        .setDOMContent(element)\n        .setLngLat(feature.geometry.coordinates)\n        .addTo(map);\n};\nexport const removeAllImages = (map) => {\n    map.removeStyleImage(MapMarkerUrls.property.default);\n    map.removeStyleImage(MapMarkerUrls.property.hasInjured);\n    map.removeStyleImage(MapMarkerUrls.property.pending);\n    map.removeStyleImage(MapMarkerUrls.property.safe);\n    map.removeStyleImage(MapMarkerUrls.property.secondary);\n}\nexport const showPropertiesOnMapEx = (map, data, renderTooltip, bAddImage) => {\n    const propertiesWithAlert = data.filter((i) => i.property_alert);\n\n    const other = data.filter((i) => !i.property_alert);\n\n    const safe = propertiesWithAlert.filter(\n        (i) => i.property_alert.status === PropertyStatus.SAFE,\n    );\n    const pending = propertiesWithAlert.filter(\n        (i) => i.property_alert.status === PropertyStatus.PENDING,\n    );\n    const hasInjured = propertiesWithAlert.filter(\n        (i) => i.property_alert.status === PropertyStatus.HAS_INJURED,\n    );\n\n    const secondaryAddress = data.filter((p) => !p.primaryHolder);\n    const primaryAddress = other.filter((p) => p.primaryHolder);\n\n    console.log('..primary ..' + primaryAddress.length + ' secondary ..' + secondaryAddress.length);\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.default,\n        'primary-properties',\n        primaryAddress,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.secondary,\n        'secondary-properties',\n        secondaryAddress,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.safe,\n        'safe-properties',\n        safe,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.pending,\n        'pending-properties',\n        pending,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.hasInjured,\n        'has_injured-properties',\n        hasInjured,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    map.on('click', showPropertyTooltip.bind(undefined, map, renderTooltip));\n};\nexport const showPropertiesOnMap = (map, data, renderTooltip, bAddImage) => {\n    const businessProperty = data.filter((i) => (i.usuage === 2 || i.color === 'red') && !i.category);\n\n    const confirmedConsumer = data.filter((i) => [0, 1, 3].includes(i.usuage) && i.color === 'default' && !i.category);\n    const pendingConsumer = data.filter((i) => [0, 1, 3].includes(i.usuage) && i.color === 'grey' && !i.category);\n\n    const restaurantProperty = data.filter((i) => i.category && i.category === 'restaurant');\n    const groceriesProperty = data.filter((i) => i.category && i.category === 'groceries');\n\n    const cannibusProperty = data.filter((i) => i.category && i.category === 'cannibus');\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.businessCategory.cannibus,\n        'cannibus-layer',\n        cannibusProperty,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.businessCategory.groceries,\n        'groceries-layer',\n        groceriesProperty,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.businessCategory.restaurant,\n        'restaurant-layer',\n        restaurantProperty,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.default,\n        'other-properties',\n        confirmedConsumer,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.secondary,\n        'secondary-properties',\n        [],\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.safe,\n        'safe-properties',\n        [],\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.pending,\n        'pending-properties',\n        pendingConsumer,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.property.hasInjured,\n        'has_injured-properties',\n        businessProperty,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    map.on('click', showPropertyTooltip.bind(undefined, map, renderTooltip));\n};\n\nexport const clearPropertiesFromMap = (map) => {\n    clearLayer(map, 'has_injured-properties');\n    clearLayer(map, 'pending-properties');\n    clearLayer(map, 'safe-properties');\n    clearLayer(map, 'other-properties');\n    clearLayer(map, 'restaurant-layer');\n    clearLayer(map, 'groceries-layer');\n    clearLayer(map, 'cannibus-layer');\n};\n\nconst showResidentTooltip = (map, renderTooltip, e) => {\n    let features = map.queryRenderedFeatures(e.point, {\n        layers: [\n            'injured-residents',\n            'pending-residents',\n            'safe-residents',\n            'away-residents',\n            'other-residents',\n            'restaurant-layer',\n            'groceries-layer',\n            'cannibus-layer'\n        ],\n    });\n\n    if (!features.length) {\n        return;\n    }\n\n    var feature = features[0];\n    console.log('feature =' + JSON.stringify(feature));\n\n    const element = document.createElement('div');\n\n    ReactDOM.render(\n        renderTooltip({\n            email: feature.properties.email,\n            id: feature.properties.id,\n            user: feature.properties,\n            location: JSON.parse(feature.properties.location),\n        }),\n        element,\n    );\n\n    new mapboxgl.Popup({\n        closeButton: false,\n        maxWidth: 'none',\n        offset: [0, -55],\n    })\n        .setDOMContent(element)\n        .setLngLat(feature.geometry.coordinates)\n        .addTo(map);\n};\n\nexport const showResidentsOnMap = (map, data, renderTooltip) => {\n    const residentsWithLocation = data.filter(\n        (i) => i.location && i.location.latitude,\n    );\n\n    const residentsWithAlert = residentsWithLocation.filter(\n        (i) => i.user_alert,\n    );\n    const other = residentsWithLocation.filter((i) => !i.user_alert);\n\n    const away = residentsWithAlert.filter(\n        (i) => i.user_alert.status === AlertStatus.AWAY,\n    );\n    const safe = residentsWithAlert.filter(\n        (i) => i.user_alert.status === AlertStatus.SAFE,\n    );\n    const pending = residentsWithAlert.filter((i) =>\n        PendingStatuses.includes(i.user_alert.status),\n    );\n    const injured = residentsWithAlert.filter(\n        (i) => i.user_alert.status === AlertStatus.INJURED,\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.user.default,\n        'other-residents',\n        other,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.user.away,\n        'away-residents',\n        away,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        map,\n        MapMarkerUrls.user.safe,\n        'safe-residents',\n        safe,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.user.pending,\n        'pending-residents',\n        pending,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    showPointLayer(\n        bAddImage,\n        map,\n        MapMarkerUrls.user.injured,\n        'injured-residents',\n        injured,\n        (i) => [i.location.longitude, i.location.latitude],\n    );\n\n    map.on('click', showResidentTooltip.bind(undefined, map, renderTooltip));\n};\n\nexport const clearResidentsFromMap = (map) => {\n    clearLayer(map, 'injured-residents');\n    clearLayer(map, 'pending-residents');\n    clearLayer(map, 'safe-residents');\n    clearLayer(map, 'away-residents');\n    clearLayer(map, 'other-residents');\n    clearLayer(map, 'restaurant-layer');\n    clearLayer(map, 'groceries-layer');\n    clearLayer(map, 'cannibus-layer')\n\n};\n\nexport const showDistancesOnMap = (map, residents) => {\n    const residentsWithLocation = residents.filter(\n        (i) =>\n            i.location &&\n            i.location.latitude &&\n            i.property &&\n            i.property.location &&\n            i.property.location.latitude,\n    );\n\n    showLineLayer(\n        map,\n        MapMarkerUrls.user.injured,\n        'resident-property-distances',\n        residentsWithLocation,\n        (i) => [\n            [i.location.longitude, i.location.latitude],\n            [i.property.location.longitude, i.property.location.latitude],\n        ],\n    );\n};\n\nexport const clearDistancesFromMap = (map) => {\n    clearLayer(map, 'resident-property-distances');\n    clearLayer(map, 'home-business-distances');\n};\nexport const showSolidLineLayer = (\n    map,\n    imageUrl,\n    layerId,\n    data,\n    coordinateSelector,\n    callback,\n) => {\n    map.addSource(layerId, {\n        type: 'geojson',\n        data: {\n            type: 'FeatureCollection',\n            features: data.map((p) => ({\n                type: 'Feature',\n                properties: p,\n                geometry: {\n                    type: 'LineString',\n                    coordinates: coordinateSelector(p).filter((i) => i),\n                },\n            })),\n        },\n    });\n\n    map.addLayer({\n        id: layerId,\n        source: layerId,\n        type: 'line',\n        layout: {\n            'line-join': 'round',\n            'line-cap': 'round',\n        },\n        paint: {\n            'line-color': '#888888',\n            'line-width': 4,\n            // 'line-dasharray': [2, 2],\n        },\n    });\n\n    if (callback) callback();\n};\nexport const showLineLayer = (\n    map,\n    imageUrl,\n    layerId,\n    data,\n    coordinateSelector,\n    callback,\n) => {\n    map.addSource(layerId, {\n        type: 'geojson',\n        data: {\n            type: 'FeatureCollection',\n            features: data.map((p) => ({\n                type: 'Feature',\n                properties: p,\n                geometry: {\n                    type: 'LineString',\n                    coordinates: coordinateSelector(p).filter((i) => i),\n                },\n            })),\n        },\n    });\n\n    map.addLayer({\n        id: layerId,\n        source: layerId,\n        type: 'line',\n        layout: {\n            'line-join': 'round',\n            'line-cap': 'round',\n        },\n        paint: {\n            'line-color': '#888888',\n            'line-width': 3,\n            'line-dasharray': [2, 2],\n        },\n    });\n\n    if (callback) callback();\n};\n\nconst showPointLayer = (\n    bAddImage,\n    map,\n    imageUrl,\n    layerId,\n    data,\n    coordinateSelector,\n    callback,\n) => {\n    // if(bAddImage)\n    {\n        map.loadImage(imageUrl, function (error, image) {\n            if (error) throw error;\n\n            try {\n\n                map.addImage(`${layerId}-marker`, image);\n\n                map.addSource(layerId, {\n                    type: 'geojson',\n                    data: {\n                        type: 'FeatureCollection',\n                        features: data.map((p) => ({\n                            type: 'Feature',\n                            properties: p,\n                            geometry: {\n                                type: 'Point',\n                                coordinates: coordinateSelector(p).filter((i) => i),\n                            },\n                        })),\n                    },\n                });\n\n                map.addLayer({\n                    id: layerId,\n                    source: layerId,\n                    type: 'symbol',\n                    layout: {\n                        'icon-image': `${layerId}-marker`,\n                        'icon-allow-overlap': true,\n                        'icon-anchor': 'bottom',\n                        'icon-size': 0.6,\n                    },\n                });\n            } catch (error) {\n                console.log('add layer error:' + JSON.stringify(error));\n            };\n\n            if (callback) callback();\n        });\n    }\n    // else{\n    //     map.addSource(layerId, {\n    //         type: 'geojson',\n    //         data: {\n    //             type: 'FeatureCollection',\n    //             features: data.map((p) => ({\n    //                 type: 'Feature',\n    //                 properties: p,\n    //                 geometry: {\n    //                     type: 'Point',\n    //                     coordinates: coordinateSelector(p).filter((i) => i),\n    //                 },\n    //             })),\n    //         },\n    //     });\n\n    //     map.addLayer({\n    //         id: layerId,\n    //         source: layerId,\n    //         type: 'symbol',\n    //         layout: {\n    //             'icon-image': `${layerId}-marker`,\n    //             'icon-allow-overlap': true,\n    //             'icon-anchor': 'bottom',\n    //             'icon-size': 0.6,\n    //         },\n    //     });\n    //     if (callback) callback();\n    // }\n};\n\nexport const clearLayer = (map, layerId) => {\n    if (map.hasImage(`${layerId}-marker`)) map.removeImage(`${layerId}-marker`);\n\n    if (map.getLayer(layerId)) map.removeLayer(layerId);\n    if (map.getSource(layerId)) map.removeSource(layerId);\n};\nexport const showHomeAndBusinessOnMap = (map, properties, user) => {\n    //Home Address\n    const residentsWithLocation = properties.filter(\n        (i) =>\n            i.location &&\n            i.location.latitude && parseInt(i.user_id) === user.id && parseInt(i.usuage) === 1\n    );\n    const primaryAddress = properties.filter(\n        (i) =>\n            parseInt(i.user_id) === user.id && parseInt(i.usuage) === 2\n    );\n\n    //Business Address\n\n    showSolidLineLayer(\n        map,\n        MapMarkerUrls.user.injured,\n        'home-business-distances',\n        residentsWithLocation,\n        (i) => [\n            [primaryAddress[0].location.longitude, primaryAddress[0].location.latitude],\n            [i.location.longitude, i.location.latitude],\n        ],\n    );\n};\nexport const showPrimaryDistancesOnMap = (map, properties, user) => {\n    const residentsWithLocation = properties.filter(\n        (i) =>\n            i.location &&\n            i.location.latitude && i.connected === \"1\"\n    );\n    const primaryAddress = properties.filter(\n        (i) =>\n            i.id === user.property.id\n    );\n\n    showLineLayer(\n        map,\n        MapMarkerUrls.user.injured,\n        'resident-property-distances',\n        residentsWithLocation,\n        (i) => [\n            [primaryAddress[0].location.longitude, primaryAddress[0].location.latitude],\n            [i.location.longitude, i.location.latitude],\n        ],\n    );\n};","import { SERVICE_URL, PARTNER_TOKEN } from '../constants';\n\nexport const reverseGeocodePoint = ({ latitude, longitude }) => {\n    return fetch(`${SERVICE_URL}/public/geocode-point?tenant=${PARTNER_TOKEN}`, {\n        body: JSON.stringify({ latitude, longitude }),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        method: 'POST',\n    }).then((r) => r.json());\n};\n\nexport const geocodeAddress = ({ address }) => {\n    return fetch(`${SERVICE_URL}/public/geocode-address?tenant=${PARTNER_TOKEN}`, {\n        body: JSON.stringify({ address }),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        method: 'POST',\n    }).then((r) => r.json());\n};\n\nexport const generateEmail = ({\n    streetNumber,\n    route,\n    locality,\n    city,\n    country,\n    postalCode,\n    longitude,\n    latitude,\n    unitNo,\n\n    lotNo,\n    plotNo,\n    region,\n    province,\n}) => {\n    let components = [streetNumber, route, locality, city, postalCode];\n\n    if (lotNo && plotNo) {\n        components = [\n            streetNumber,\n            route,\n            locality,\n            `lot${lotNo}`,\n            `plot${plotNo}`,\n            region,\n            province,\n            city,\n            country,\n            postalCode,\n        ].filter((i) => i);\n    }\n\n    if (unitNo) {\n        components = [unitNo, ...components];\n    }\n\n    // console.log('..components..' + JSON.stringify(components));\n\n    if (components.some((value) => !value)) {\n        return `Lati${latitude}_Long${longitude}`;\n    }\n\n    return components\n        .map((c) => (c ? c.trim().replace(/[ ]/g, '-') : c))\n        .join('-')\n        .toLowerCase();\n};\n"],"names":["el","document","querySelector","ReactDOM","className","value","name","options","invalid","setFieldValue","setFieldTouched","rest","classNames","push","type","country","containerClass","join","onChange","onBlur","MapContext","createContext","Provider","Consumer","MapProvider","state","map","setMap","setState","disabled","setDisabled","clearContext","children","this","props","Component","defaultProps","propertySchema","Yup","shape","primaryAddress","required","oneOf","addressType","when","is","hightRiseOrCommercial","then","settlementType","unitNo","propertyName","additionalPropertySchema","require","SERVICE_URL","process","PARTNER_TOKEN","STRIPE_URL","MapMarkerUrls","property","default","hasInjured","pending","safe","secondary","user","injured","away","businessCategory","restaurant","groceries","cannibus","extra","edit_mode","connect_mode","setShowSidebar","data","dispatch","ADMIN_SHOW_SIDEBAR","payload","fetchCoupon","id","getState","token","auth","jwt","ADMIN_FETCH_COUPON","fetch","headers","Accept","Authorization","method","r","json","responseData","statusCode","Promise","reject","saveCoupon","url","console","log","JSON","stringify","ADMIN_ADD_COUPON","body","fetchCoupons","ownerId","page","pageSize","start","ADMIN_FETCH_COUPONS","deleteCoupon","ADMIN_DELETE_COUPON","fetchUsers","ADMIN_FETCH_USERS","fetchUser","ADMIN_FETCH_USER","fetchUserCount","ADMIN_FETCH_USER_COUNT","text","deleteUser","ADMIN_DELETE_USER","saveTenant","ADMIN_ADD_USER","saveUser","fetchProperties","roleName","undefined","mobile","mobileNumber","ADMIN_FETCH_PROPERTIES","fetchProperty","param","params","Array","isArray","URLSearchParams","ADMIN_FETCH_PROPERTY","fetchPropertyCount","ADMIN_FETCH_PROPERTY_COUNT","deleteProperty","ADMIN_DELETE_PROPERTY","saveProperty","ADMIN_ADD_PROPERTY","fetchEmailCampaigns","jsonData","ADMIN_FETCH_ACTION","fetchCampaign","ADMIN_FETCH_ALERT","fetchRoles","ADMIN_FETCH_ROLES","roles","listFiles","ADMIN_LIST_FILES","propertyBinding","ADMIN_PROPERTY_BINDING","sendPromotionContents","ADMIN_SEND_PROMOTE_EMAIL","saveBusinessProfile","ADMIN_SAVE_BUSINESS_PROFILE","getBusinessProfile","ADMIN_GET_BUSINESS_PROFILE","getBusinessProfileByConnectToken","loadBusinessAddress","ADMIN_GET_BUSINESS_ADDRESS","loadConnected","loginType","getLoginType","saveMerchantConnection","ADMIN_SAVE_MERCHANT_CONNECTION","saveShoppingCart","ADMIN_SAVE_SHOPPING_CART","disConnectionMerchant","unSubscribeMerchant","ADMIN_UNSUBSCRIBE","unsubscribeBeforeConnect","loadConnectedTotal","ADMIN_TOTAL_CONNECTED","confirmConnection","ADMIN_CONFIRM_CONNECTION","getAddressByType","ADMIN_GET_ADDRESS_BY_TYPE","checkBusinessProfile","ADMIN_CHECK_BUSINESS_PROFILE","sendPasswordBeforeDeleteAccount","getHighRiseInfo","email","ADMIN_GET_HIGHRISE_INFO","removeHighRiseBinding","userId","userPropertyId","removeNoDelivery","consumerId","merchantId","userPropertiesId","getHighRiseBusinessInfo","ADMIN_GET_HIGHRISE_BUSINESS_INFO","fetchTemplates","fetchTemplate","saveTemplate","ADMIN_SAVE_ACTION","deleteTemplate","ADMIN_DELETE_ACTION","deleteCampaign","IsDeleted","createCampaigns","fetchFlyers","fetchFlyer","saveFlyers","deleteFlyer","batchImportCompany","saveUserPreference","fetchUserPreference","fetchEvent","saveEvent","fetchEvents","deleteEvent","importCustomer","sendContactForm","SEND_CONTACT_FORM","changePropertyColor","CHANGE_PROPERTY_COLOR","cancelChangePropertyColor","CANCEL_CHANGE_PROPERTY_COLOR","showPreferenceForm","isShow","SHOW_PREFERENCE_FORM","cancelShowBusinessInfo","CANCEL_DISPLAY_BUSINESS","cancelShowHighRiseInfo","CANCEL_DISPLAY_HIGHRISE","cancelShowNoDelivery","CANCEL_DISPLAY_NODELIVERY","deleteAccount","verifyCode","DELETE_ACCOUNT","deleteUserAdditionalAddressById","propertyId","DELETE_ADDITIONAL_ADDRESS","getUserPropertyById","GET_USER_PROPERTY","saveUserProperty","SAVE_USER_PROPERTY","resendMobileVerificationCode","RESEND_MOBILE_VERIFICATION_CODE","sendVerificationCodeByMobileNumber","code","SEND_VERIFICATION_CODE","resendEmailVerificationCode","RESEND_EMAIL_VERIFICATION_CODE","toggleVerificationModal","TOGGLE_VERIFICATION_MODAL","updateAccount","UPDATE_ACCOUNT","saveBatchProperties","SAVE_SECONDORY_PROPERTY","loginUser","identifier","password","loginAs","AUTH_LOGIN","logoutUser","AUTH_LOGOUT","resolve","changePassword","AUTH_CHANGE_PASSWORD","iOSChangePassword","hash","md5","AUTH_CHANGE_PASSWORD_ALT","resetPassword","AUTH_RESET_PASSWORD","verifyResetPassword","mobileVerificationCode","AUTH_RESET_PASSWORD_VERIFY","getMe","AUTH_GET_ME","verifyAccount","REGISTRATION_VERIFY_ACCOUNT","resetRegistrationForm","REGISTRATION_RESET_FORM","registerUser","AUTH_REGISTER","setPropertyRegistrationForm","SET_PROPERTY_REGISTRATION_FORM","setEditMode","SET_EDIT_MODE","isPropertyRegistered","REGISTER_PROPERTY","Header","Container","Row","Col","href","target","style","textAlign","fontSize","src","alt","Footer","phone","message","useState","alert","setAlert","useDispatch","setName","setEmail","setPhone","setMessage","loading","setLoading","color","isOpen","toggle","Form","onSubmit","e","preventDefault","match","length","toastr","resp","success","finally","InputGroup","Input","placeholder","autoComplete","rows","Button","outline","block","md","lg","CardBody","activeTab","setActiveTab","onActiveTabChange","idx","variant","active","rel","location","useLocation","pathname","history","useHistory","setIsOpen","useEffect","useCallback","Modal","size","centered","backdrop","onClosed","ModalHeader","ModalBody","width","height","mapboxgl","mapContainer","useRef","context","useContext","window","google","maps","Map","current","center","lat","lng","zoom","mapTypeControl","mapTypeControlOptions","position","ControlPosition","LEFT_BOTTOM","mapTypeIds","MapTypeId","SATELLITE","ROADMAP","fullscreenControl","initializeMap","MapLegend","ref","searchText","setSearchText","searching","setSearching","currentUser","useSelector","primaryHolder","Marker","draggable","marker","formik","useFormik","initialValues","rural","totalFloors","totalUnitsEachFloor","postalCode","streetNumber","route","locality","lotNo","plotNo","region","province","city","validationSchema","values","setSubmitting","geocodeAddress","address","response","latitude","longitude","changeMarkerPosition","ReactNativeWebView","postMessage","result","setTimeout","handleChange","handleBlurOrig","handleBlur","handleSubmit","errors","touched","isValid","isSubmitting","setValues","generateEmail","geocode","setPosition","reverseGeocodePoint","Object","keys","forEach","i","some","panTo","addListener","latLng","handle","event","clearListeners","removeListener","onSubmitSearchText","stopPropagation","trim","Card","CardHeader","xs","bsSize","currentTarget","onClick","FormGroup","Label","htmlFor","minWidth","FormFeedback","tag","for","parseInt","check","checked","Collapse","inValidProperty","Spinner","CardFooter","marginTop","registrationUser","registerForm","me","userHasEmail","username","emailVerified","mobileVerified","action","localStorage","setItem","EmailVerification","MobileVerification","noGutters","eMailAddress","eMailAddressSelected","setEMailAddressSelected","res","catch","error","mobileNumberSelected","setMobileNumberSelected","MobileInput","min","max","passwordConfirmation","eye","seteye","setpassword","settype","Eye","productId","pathInfo","split","productInfo","setProductInfo","stripeUrl","ADMIN_FETCH_PRODDUCT_DETAIL","fetchProductDetails","Checkout","STRIPE_CHECKOUT_SESSION","stripePriceId","stripePlanId","isSubscription","productName","title","createStripeSession","replace","description","price","CartContext","storage","getItem","parse","useCart","cartItems","sumItems","checkout","ctx","bindingSchema","companyName","utilsData","domain","search","companyProfile","setCompanyProfile","getWorkingHourValue","hours","dayOfWeek","index","item","filter","hour","openHour","closeHour","closed","setWorkingHour","addProduct","increase","website","androidUrl","iOSUrl","isInitialValid","data0","data1","data2","data3","data4","data5","data6","close0","openHour0","closeHour0","close1","openHour1","closeHour1","close2","openHour2","closeHour2","close3","openHour3","closeHour3","close4","openHour4","closeHour4","close5","openHour5","closeHour5","close6","openHour6","closeHour6","postData","profileId","property_id","workingHour","profile","android_url","ios_url","sm","MinusCircleIcon","fill","viewBox","d","clipRule","fillRule","PlusCircleIcon","TrashIcon","product","decrease","removeProduct","margin","maxHeight","photo","formatNumber","quantity","styles","total","itemCount","clearCart","handleCheckout","to","pdfjs","shareUrl","serverUrl","setProperty","flyer","setFlyer","numPages","setNumPages","pageNumber","setPageNumber","users","xl","maxWidth","connected","merchant_property_id","showBusinessInfo","fncCallback","disConnectToMerchant","connectToMerchantId","connectToMerchant","attributes","updatedAt","flyer_files","fileUrl","Document","file","onLoadSuccess","onLoadError","Page","content","queryPage","bindingProperty","totalConnected","setTotalConnected","unscribed","setUnscribed","id_type","total1","iCount","value2","status","setCurrent","unit_no","cbSendEmail","class","TextArea","maxLength","onKeyUp","currentLength","limitWords","activeKey","setActiveKey","setBindingProperty","setMerchantId","setVerifyCode","connectToken","setConnectToken","consent","bindingPhone","confirmConnect","mobilePhone","bindingName","details","messages","setLoginType","role","visible","Alert","paddingTop","Math","floor","random","getVerifyCode","marginLeft","setFieldError","verificationCode","Home","lazy","Login","Logout","Coupon","React","CouponEdit","Coupons","Event","EventEdit","Events","PropertyFileUpload","Users","User","UserEdit","Properties","Property","PropertyEdit","Templates","Template","TemplateEdit","CreateEmailCampaign","EmailCampaigns","ViewCampaign","Flyer","FlyerEdit","Flyers","component","path","exact","MobileAccountVerification","Connect","Cart","ChangeEMail","MemberShip","ChangeMobile","ChangePassword","ResetPassword","VerifyResetPassword","ResetPassword3","CheckoutSuccess","CheckoutFailed","BusinessProfile","BusinessPortal","UnSubscribe","UnSubscribed","AboutUs","HowItWorks","Patents","ContactUs","OurStory","OurPromise","NewsRelease","OurVideo","PrivacyPolicy","TermsOfUse","setError","setVerificationCode","remainingTime","setRemainingTime","resendVisible","setResendVisible","pendingResend","setPendingResend","pendingVerify","setPendingVerify","onClickVerify","emailVerificationCode","reload","onClickResendVerificationCode","setInterval","lastTimeAvail","moment","lastEmailVerificationTime","add","format","now","diff","asSeconds","Number","isNaN","clearInterval","startOf","seconds","lastMobileVerificationTime","collapse","dark","expand","navbar","ReactRouterLink","offstyle","onstyle","displayStyle","dropDownOpen","setDropDownOpen","editMode","editSwitch","setEditSwitch","userEmail","EventBus","firstName","lastName","noDelivery","value3","toggleDropDownMenu","handleEditModeChange","drawing","onClickDeleteAccount","retObj","prompt","clearLoginType","removeItem","menuLinks","menuText","menuID","Navbar","light","NavbarBrand","NavbarToggler","fontWeight","Nav","NavItem","checkUseLevel","NavLink","ButtonDropdown","Dropdown","DropdownToggle","DropdownMenu","menu","DropdownItem","onOk","showPreference","showImportCustomer","$on","eventType","callback","addEventListener","ev","detail","$dispatch","CustomEvent","dispatchEvent","$remove","removeEventListener","showPropertyTooltip","renderTooltip","features","queryRenderedFeatures","point","layers","feature","element","createElement","properties","includes","closeButton","offset","setDOMContent","setLngLat","geometry","coordinates","addTo","showPropertiesOnMap","bAddImage","businessProperty","usuage","category","confirmedConsumer","pendingConsumer","restaurantProperty","groceriesProperty","cannibusProperty","showPointLayer","on","bind","clearPropertiesFromMap","clearLayer","clearResidentsFromMap","clearDistancesFromMap","showLineLayer","imageUrl","layerId","coordinateSelector","addSource","p","addLayer","source","layout","paint","loadImage","image","addImage","hasImage","removeImage","getLayer","removeLayer","getSource","removeSource","showHomeAndBusinessOnMap","residentsWithLocation","user_id","showSolidLineLayer","showPrimaryDistancesOnMap","components","c","toLowerCase"],"sourceRoot":""}