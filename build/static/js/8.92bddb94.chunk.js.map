{"version":3,"file":"static/js/8.92bddb94.chunk.js","mappings":"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","sources":["common/components/MapLegend.js","common/components/MobileInput.js","common/contexts/MapContext/MapContext.js","common/contexts/MapContext/MapProvider.js","common/validation/propertySchema.js","site/pages/newHome/AboutUs.js","site/pages/newHome/contact/ContactForm.js","site/pages/newHome/ContactUs.js","site/pages/newHome/KeyFeatures.js","site/pages/newHome/HowItWorks.js","site/pages/newHome/NewsRelease.js","site/pages/newHome/OurPromise.js","site/pages/newHome/OurStory.js","site/pages/newHome/OurVideo.js","site/pages/newHome/Patents.js","site/pages/newHome/PrivacyPolicy.js","site/pages/newHome/TermsOfUse.js","common/components/GMap.js","site/pages/profile/EditProperty.js","site/pages/mobile/MobileAccountVerification.js","site/pages/newHome/ChangeEMail.js","site/pages/newHome/ChangeMobile.js","site/pages/newHome/ChangePassword.js","site/pages/newHome/MemberShip.js","site/pages/newHome/Checkout.js","redux/actionCreators/checkoutCreators.js","site/pages/newHome/CheckoutSuccess.js","site/pages/newHome/CheckoutFailed.js","common/contexts/CartContext.js","site/hooks/useCart.js","site/pages/newHome/BusinessProfile.js","site/components/icons/index.js","site/pages/cart/CartItem.js","site/pages/cart/CartProducts.module.scss","site/pages/cart/CartProducts.js","site/components/Layout.js","site/pages/cart/index.js","site/pages/newHome/BusinessPortal.js","site/pages/newHome/UnSubscribe.js","site/Site.js","site/pages/accountVerification/EmailVerification.js","site/pages/accountVerification/MobileVerification.js","site/pages/newHome/Footer.js","utils/propertyUtils.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport ReactDOM from 'react-dom';\nimport {MapMarkerUrls} from '../../constants';\n\n\n\nconst MapLegend = () => {\n    const el = document.querySelector('.mapboxgl-ctrl-top-right');\n    // const [active, setActive] = useState(false);\n\n    if (!el) {\n        return null;\n    } else {\n        return ReactDOM.createPortal(\n            <div className=\"map-legend mapboxgl-ctrl\">\n                  \n            </div>,\n            el,\n        );\n    }\n};\n\nexport default MapLegend;\n","import React from \"react\";\nimport PhoneInput from 'react-phone-input-2';\n\nconst MobileInput = ({\n    value,\n    options,\n    name,\n    invalid,\n    setFieldValue,\n    setFieldTouched,\n    ...rest\n}) => {\n    const classNames = ['custom-react-phone-input', 'form-control'];\n\n    if (invalid) classNames.push('is-invalid');\n\n    return (\n        <PhoneInput\n            type={'number'}\n            country={'us'}\n            name={name}\n            value={value}\n            invalid={invalid}\n            containerClass={classNames.join(' ')}\n            onChange={(value) => setFieldValue(name, value)}\n            onBlur={() => setFieldTouched(name)}\n            {...rest}\n        />\n    );\n};\n\nexport default MobileInput;\n","import {createContext} from \"react\";\n\nconst MapContext = createContext(null);\nconst Provider = MapContext.Provider;\nconst Consumer = MapContext.Consumer;\n\nexport {Provider};\nexport {Consumer};\nexport default MapContext;\n","import React, {Component} from 'react';\nimport {Provider} from './MapContext';\n\nclass MapProvider extends Component {\n    static propTypes = {};\n\n    static defaultProps = {};\n\n    state = {\n        map: null,\n        setMap: (map) => {\n            this.setState({\n                map,\n            });\n        },\n        disabled: false,\n        setDisabled: (value) =>\n            this.setState({\n                disabled: value,\n            }),\n        clearContext: async () => {\n            await this.setState(() => {\n                return {};\n            });\n        },\n    };\n\n    render() {\n        const {children} = this.props;\n        return <Provider value={this.state}>{children}</Provider>;\n    }\n}\n\nexport default MapProvider;\n","import * as Yup from 'yup';\n\n// export const propertySchema = Yup.object().shape({\n//     address: Yup.string().required('This field is required'),\n//     area: Yup.string().required('This field is required'),\n//     serial_no: Yup.string().required('This field is required'),\n//     acreage: Yup.string().required('This field is required'),\n// });\n\nexport const propertySchema = Yup.object().shape({\n    primaryAddress: Yup.boolean()\n        .required()\n        .oneOf([true], 'This field is required'),\n    addressType: Yup.string().when([],{\n        is: (hightRiseOrCommercial) => hightRiseOrCommercial===false,\n        then: Yup.string().required('This field is required'),\n    }),\n    settlementType: Yup.string().required('This field is required'),\n    unitNo: Yup.string().when(['settlementType','hightRiseOrCommercial'], {\n        is: (settlementType,hightRiseOrCommercial) => settlementType === 'highRise' && !hightRiseOrCommercial,\n        then: Yup.string().required('This field is required'),\n    }),\n    propertyName: Yup.string().when(['addressType','hightRiseOrCommercial'], {\n        is: (addressType,hightRiseOrCommercial) => (addressType === 'Incorporate' || addressType==='School') && !hightRiseOrCommercial,\n        then: Yup.string().required('This field is required'),\n    }),\n});\nexport const additionalPropertySchema = Yup.object().shape({\n    addressType: Yup.string().when([],{\n        is: (hightRiseOrCommercial) => hightRiseOrCommercial===false,\n        then: Yup.string().required('This field is required'),\n    }),\n    settlementType: Yup.string().required('This field is required'),\n    unitNo: Yup.string().when(['settlementType'], {\n        is: (settlementType) => settlementType === 'highRise',\n        then: Yup.string().required('This field is required'),\n    }),\n});","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst AboutUs = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content about-us\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>About Us</Col>\n                    </Row>\n                    <p>\n                        {/* Alphabet Communication™ (AlphC)™ opens up many opportunities\n                    to make the world safer and increase our collective\n                    security. Our focus will always be on “saving lives”,\n                    including those of our first responders. Imagine if, during\n                    an emergency, first responders had the ability to identify\n                    who needs immediate help and to triage response efforts en\n                    route before even arriving on scene. Imagine if they knew\n                    which addresses and which individuals at that address\n                    required help and which residents were safe. AlphC’s unique\n                    technological platform permits mapped, real-time\n                    communication with all residents at every address. This\n                    technology will increase public safety and is a game changer\n                    in emergency response. */}\n                        Alphabet Communication™ (AlphC)™ opens up many <a href=\"/how-it-works\">opportunities</a> to make the world safer and increase our collective security. <a href=\"https://www.linkedin.com/pulse/alphc-our-journey-focus-part-15-shafin-valla/\">Our focus</a> will always be on <a href=\"https://www.linkedin.com/pulse/alphc-e-alert-app-part-25-shafin-valla\">“saving lives”</a>, including those of our first responders. AlphC's unique technological platform permits mapped, real-time communication with all residents at every address.\n                        <br />\n                        <br />\n                        <a href=\"https://alphcmap.com/about-us\" target=\"_blank\">AlphCMap</a> is an extension of our <a href=\"https://www.alphc.com/patents\">IP and technology</a>  with <a href=\"https://www.newswire.ca/news-releases/alphabet-communication-patent-granted-by-the-uspto-we-have-the-ability-to-map-the-global-population-and-connect-all-humanity-668560533.html\" target=\"_blank\">infinite possibilities</a>. This communication breakthrough is based on a closed and secure communication network between addresses. Opt-in businesses and consumers can communicate for mutual benefit via their mapped address.  As an example, when a food delivery order is placed by a customer their address is provided to the restaurant for delivery purposes.  AlphCMap, maps all the addresses, providing the ability for restaurants to communicate with their customers via their address.\n\n                        Benefits for this timely and instant communication for businesses. <ul className='about_us_list'>\n\n                            <li> Instant-mapped and targeted communication with customers based on their address (including high-rise residential). </li>\n\n                            <li> Delivery of time sensitive, special offers by businesses to customers; such as, special food offers (half-price pizza 3-5pm/today only) and coupons. </li>\n\n                            <li> B2C marketing communication - empowering small/medium size (mom/pop) business with an affordable communication network that doesn't exist today. </li>\n\n                            <li> Customers staying connected with their local neighborhood small businesses and save money. </li>\n                        </ul>\n                        Customers have the ability to opt-in or out of this unique communication capability. The closed network eliminates spam and protects the privacy of all users. Currently communication will be via email.\n                    </p>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default AboutUs;\n","import {useFormik} from 'formik';\nimport React, {useCallback, useState,useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {\n    Alert,\n    Button,\n    Col,\n    Form,\n    FormFeedback,\n    Input,\n    InputGroup,\n    Row,\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport {sendContactForm} from '../../../../redux/actionCreators/appActionCreators';\nimport {toastr} from 'react-redux-toastr';\n// import {\n//     GoogleReCaptchaProvider,\n//     GoogleReCaptcha\n//   } from \"react-google-recaptcha-v3\"\n\nconst validationSchema = Yup.object({\n    name: Yup.string().required('This field is required'),\n    email: Yup.string()\n        .email('Email address is not valid')\n        .required('This field is required'),\n    phone: Yup.string().required('This field is required'),\n    message: Yup.string().required('This field is required'),\n});\nconst SITE_KEY = \"6Ldf8uUdAAAAAFk2BsP18xvLR5CdEJ6b0O528oSH\";\n\nconst ContactForm = () => {\n    const [alert, setAlert] = useState(false);\n    const dispatch = useDispatch();\n\n    const [name,setName] = useState('');\n    const [email,setEmail] = useState('');\n    const [phone,setPhone] = useState('');\n    const [message,setMessage] = useState('');\n\n    // const formik = useFormik({\n    //     initialValues: {\n    //         name: '',\n    //         email: '',\n    //         phone: '',\n    //         message: '',\n    //     },\n    //     validationSchema,\n    //     validateOnBlur: true,\n    //     onSubmit: (values) => {\n    //         // submitHelpForm(values);\n    //     },\n    // });\n    const [token, setToken] = useState();\n\n    // const { executeRecaptcha } = useGoogleReCaptcha();\n\n    // const [token, setToken] = useState();\n    // Create an event handler so you can call the verification on button click event or form submit\n    // const handleReCaptchaVerify = useCallback(async (values) => {\n    //     if (!executeRecaptcha) {\n    //         console.log('Execute recaptcha not yet available');\n    //         return;\n    //     }\n\n    //     const token = await executeRecaptcha('yourAction');\n    //     // Do whatever you want with the token\n    //     // dispatch(sendContactForm(values))\n    //     // .then(() => {\n    //     //     formik.resetForm();\n    //     //     setAlert(!alert);\n    //     // })\n    //     // .finally(() => {});\n    // }, [alert, dispatch, formik]);\n\n    // const handleOnClick = e => {\n    //     e.preventDefault();\n    //     setLoading(true);\n    //     window.grecaptcha.ready(() => {\n    //       window.grecaptcha.execute(SITE_KEY , { action: 'submit' }).then(token => {\n    //         // submitData(token);\n    //         values['token'] = token;\n    //         dispatch(sendContactForm(values))\n    //         .then(() => {\n    //             formik.resetForm();\n    //             setAlert(!alert);\n    //         })\n    //         .finally(() => {});\n\n    //       });\n    //     });\n    // }\n    // useEffect(() => {\n    //     const loadScriptByURL = (id, url, callback) => {\n    //       const isScriptExist = document.getElementById(id);\n    \n    //       if (!isScriptExist) {\n    //         var script = document.createElement(\"script\");\n    //         script.type = \"text/javascript\";\n    //         script.src = url;\n    //         script.id = id;\n    //         script.onload = function () {\n    //           if (callback) callback();\n    //         };\n    //         document.body.appendChild(script);\n    //       }\n    \n    //       if (isScriptExist && callback) callback();\n    //     }\n    \n    //     // load the script by passing the URL\n    //     loadScriptByURL(\"recaptcha-key\", `https://www.google.com/recaptcha/api.js?render=${SITE_KEY}`, function () {\n    //       console.log(\"Script loaded!\");\n    //     });\n    //   }, []);\n      const [loading, setLoading] = useState(false);\n\n    // const submitHelpForm = useCallback(\n    //     (values) => {\n    //         handleReCaptchaVerify(values);\n    //     },\n    //     [],\n    // );\n    function validateEmail (emailAdress)\n    {\n      let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (emailAdress.match(regexEmail)) {\n        return true; \n      } else {\n        return false; \n      }\n    }\n    const handleOnSubmit = e => {\n        e.preventDefault()\n        const form = e.target\n        // setServerState({ submitting: true })\n        setLoading(true);\n        const data = {\n            name,\n            email,\n            phone,\n            message\n        }\n        //checking email and phone\n        if(email === null || email === undefined || !validateEmail(email) ){\n            toastr.error(\"Error!\",\"Please enter a valid e-mail address\");\n            setLoading(false);\n            return;\n        }\n        if(phone === null || phone === undefined || phone.length<6){\n            toastr.error(\"Error!\",\"Please enter a valid phone number\");\n            setLoading(false);\n            return;       \n        }\n        \n        console.log(data, \"data\");\n        dispatch(sendContactForm(data))\n        .then((resp) => {\n            // formik.resetForm();\n            console.log('return ...' + JSON.stringify(resp));\n            if(resp.value.success){\n                setAlert(!alert);\n                // toastr.success(\"Message Sent!\",\"Your message has been sent, thanks for contact us!\");\n            }else{\n                toastr.error(\"Error!\",\"Message send failed!\");\n            }\n            \n        })\n        .finally(() => {\n            setName('');\n            setEmail('');\n            setPhone('');\n            setMessage('');\n            setLoading(false);\n        });\n        // axios({\n        //   method: \"post\",\n        //   url: \"https://getform.io/f/b22f10be-75a6-40c0-9ec6-3519dc38fe29\",\n        //   data\n        // })\n        //   .then(r => {\n        //     handleServerResponse(true, \"Thanks!\", form)\n        //   })\n        //   .catch(r => {\n        //     handleServerResponse(false, r.response.data.error, form)\n        //   })\n    }\n    // const {\n    //     values,\n    //     touched,\n    //     errors,\n    //     handleChange,\n    //     handleBlur,\n    //     handleSubmit,\n    // } = formik;\n\n    return (\n       \n        <div>\n            <p className=\"text-muted\">\n                Please feel free to contact us for more information\n            </p>\n            <Alert\n                color=\"success\"\n                isOpen={alert}\n                toggle={() => setAlert(!alert)}>\n                Your message has been sent. We will get in touch with you soon.\n            </Alert>\n            <Form className=\"help-Form\" onSubmit={handleOnSubmit}>\n                <InputGroup className=\"mb-3\">\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        name={'name'}\n                        value={name}\n                        onChange={(e)=>setName(e.target.value)}\n                        // onBlur={handleBlur}\n                        // invalid={touched.name && errors.name}\n                    />\n                    {/* <FormFeedback>{errors.name}</FormFeedback> */}\n                </InputGroup>\n\n                <InputGroup className=\"mb-3\">\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Email\"\n                        name={'email'}\n                        value={email}\n                        onChange={(e)=>setEmail(e.target.value)}\n                        // onBlur={handleBlur}\n                        autoComplete=\"email\"\n                        // invalid={touched.email && errors.email}\n                    />\n                    {/* <FormFeedback>{errors.email}</FormFeedback> */}\n                </InputGroup>\n                <InputGroup className=\"mb-3\">\n                    <Input\n                        type=\"text\"\n                        placeholder=\"Mobile Phone\"\n                        name={'phone'}\n                        value={phone}\n                        onChange={(e)=>setPhone(e.target.value)}\n                        // onBlur={handleBlur}\n                        autoComplete=\"phone\"\n                        // invalid={touched.phone && errors.phone}\n                    />\n                    {/* <FormFeedback>{errors.phone}</FormFeedback> */}\n                </InputGroup>\n\n                <Input\n                    type=\"textarea\"\n                    name={'message'}\n                    id=\"textarea-input\"\n                    rows=\"5\"\n                    placeholder=\"Message...\"\n                    value={message}\n                    onChange={(e)=>setMessage(e.target.value)}\n                    // onBlur={handleBlur}\n                    // invalid={touched.message && errors.message}\n                />\n                {/* <FormFeedback>{errors.message}</FormFeedback> */}\n            {/* <Row>\n                <Col>\n                <GoogleReCaptcha\n                    onVerify={token => {\n                        setToken(token)\n                    }}\n                    />\n                </Col>\n            </Row> */}\n                <Row className=\"contact-us-submit-container\">\n                    <Col>\n                        <Button\n                            type={'submit'}\n                            outline\n                            block\n                            disabled={loading}\n                            className=\"float-right my-3\">\n                            {loading ? 'Submitting...' : 'Submit'}\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n\n    );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport {CardBody, Col, Container, Row} from 'reactstrap';\nimport ContactForm from './contact/ContactForm';\n// import { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst ContactUs = () => {\n    return (\n        <main>\n            <Header />\n        <div className=\"full-screen contact-us\">\n            <Container>\n                <Row className=\"section-title\">\n                    <Col>Contact Us</Col>\n                </Row>\n                <Row>\n                    <Col md={12} lg={6}>\n                        <CardBody className=\"contact text-center\">\n                            <h3 className=\"my-4 pb-2\">Contact information</h3>\n                            <ul className=\"text-lg-left list-unstyled ml-4\">\n                                <li>\n                                    <p>\n                                        <i className=\"fa fa-envelope pr-2\" />\n                                        anything@alphc.com\n                                    </p>\n                                </li>\n                            </ul>\n                            <hr className=\"hr-light my-4\" />\n                            <ul className=\"list-inline text-center list-unstyled\">\n                                <li className=\"list-inline-item\">\n                                    <a\n                                        href=\"https://www.instagram.com\"\n                                        className=\"p-2 fa-lg tw-ic\">\n                                        <i className=\"fa fa-twitter\" />\n                                    </a>\n                                </li>\n                                <li className=\"list-inline-item\">\n                                    <a\n                                        href=\"https://www.linkedin.com\"\n                                        className=\"p-2 fa-lg li-ic\">\n                                        <i className=\"fa fa-linkedin\" />\n                                    </a>\n                                </li>\n                                <li className=\"list-inline-item\">\n                                    <a\n                                        href=\"https://www.facebook.com\"\n                                        className=\"p-2 fa-lg ins-ic\">\n                                        <i className=\"fa fa-instagram\" />\n                                    </a>\n                                </li>\n                            </ul>\n                        </CardBody>\n                        {/*{*/}\n                        {/*    \"location\": {*/}\n                        {/*    \"lat\": 43.790261,*/}\n                        {/*    \"lng\": -79.3604798*/}\n                        {/*}*/}\n                        {/*}*/}\n                    </Col>\n                    <Col md={12} lg={6}>\n                        <ContactForm />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n        <Footer />\n        </main>\n    );\n};\nexport default ContactUs;\n","import React from 'react';\nimport {Col, Container, Row} from 'reactstrap';\n\nconst KeyFeatures = () => {\n    return (\n        <div className=\"key-features\">\n            <Container>\n                <Row noGutters>\n                    <Col\n                        sm=\"12\"\n                        md={{size: 10, offset: 1}}\n                        className={'slogan-text'}>\n                        <div className={'title'}>Key Features and Usage</div>\n                        <div className={'text-block'}>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Compatible and easy to integrate into most\n                                existing emergency response systems\n                            </div>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Real time mapping of impacted geographies\n                            </div>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Two-way communications with casualties\n                            </div>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Scalable to neighborhoods, residential\n                                high-rise, commercial buildings, schools, hotels\n                                and resorts, cities and countries\n                            </div>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Reduced emergency response times\n                            </div>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Increased emergency response effectiveness\n                            </div>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Real time tracking of response efforts\n                            </div>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Deployable by local and private agencies\n                            </div>\n                            <div>\n                                <img\n                                    src={'/assets/img/icon-white-small.png'}\n                                    alt={''}\n                                />\n                                Extremely low cost\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\nexport default KeyFeatures;\n","import React from 'react';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { Col, Container, Row } from 'reactstrap';\nimport KeyFeatures from './KeyFeatures';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst HowItWorks = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content how-it-works\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>How it works</Col>\n                    </Row>\n                    <p>\n                        AlphC’s patented technology assigns an email address to\n                        every physical address. Residents of an address are linked\n                        via their mobile device to this unique email. A message sent\n                        to the email associated with the physical address connects\n                        you to all the mobile numbers of the residents for that\n                        address in real-time. AlphC’s messages are geo-coded, so\n                        they cannot be duplicated, adding transparency and security\n                        that does not exist with current systems.\n                    </p>\n                    <p>\n                        In any emergency, such as an earthquake, fire, hurricane or\n                        terrorist attack, an alert can be initiated by individuals\n                        directly to first responders using a simple alert format or\n                        from responders to individuals. First responders can also\n                        create a geo-fenced or targeted alert to a specified panned\n                        area. Based on a simple one-button alert message stating, \"I\n                        am safe,\" \"I am away\" or \"I need help,\" rescue missions can\n                        be planned, targeted and mapped to the addresses in a way\n                        that maximizes efficiency, speed and crucially, the safety\n                        of first responders. A real-time, color-coded crisis map\n                        further aids response efforts and allows tracking of\n                        progress through an area.\n                    </p>\n\n                    <Row>\n                        <Col className=\"text-center\">\n                            <figure className=\"figure\">\n                                <img\n                                    src=\"/assets/img/how-it-works/how-it-works-1.png\"\n                                    className=\"figure-img img-fluid rounded\"\n                                    alt=\"Simple one-button alert for residents and first responders\"\n                                />\n                                <figcaption className=\"figure-caption\">\n                                    Simple one-button alert for residents and first\n                                    responders\n                                </figcaption>\n                            </figure>\n                        </Col>\n                    </Row>\n\n                    <p>\n                        AlphC technology fills many gaps that current emergency\n                        alerts fail to address and it can be embedded into virtually\n                        any existing emergency communication system. Users can map\n                        areas and grade impact levels using any criteria and\n                        communicate with residents in real time. Our “two-way mapped\n                        alert technology” and “address-based communication” platform\n                        is the first in the world. Everything AlphC does is new\n                        knowledge. There is no cost for citizens to use our\n                        technology.\n                    </p>\n\n                    <Row>\n                        <Col className=\"text-center\">\n                            <figure className=\"figure\">\n                                <img\n                                    src=\"/assets/img/how-it-works/how-it-works-2.png\"\n                                    className=\"figure-img img-fluid rounded\"\n                                    alt=\"Current national alert versus AlphC mapped address-based communication\"\n                                />\n                                <figcaption className=\"figure-caption\">\n                                    Current national alert versus AlphC mapped\n                                    address-based communication\n                                </figcaption>\n                            </figure>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col className=\"text-center\">\n                            <figure className=\"figure\">\n                                <img\n                                    src=\"/assets/img/how-it-works/how-it-works-3.png\"\n                                    className=\"figure-img img-fluid rounded\"\n                                    alt=\"Community alerting system for minor or major emergencies\"\n                                />\n                                <figcaption className=\"figure-caption\">\n                                    Community alerting system for minor or major\n                                    emergencies\n                                </figcaption>\n                            </figure>\n                        </Col>\n                    </Row>\n\n                    <p>\n                        AlphC’s products and services may be covered by U.S. Patent\n                        Nos.{' '}\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9860203.PN.&OS=PN/9860203&RS=PN/9860203\">\n                            9,860,203\n                        </a>\n                        ,\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=10,356,028.PN.&OS=PN/10,356,028&RS=PN/10,356,028\">\n                            10,356,028\n                        </a>\n                        , and{' '}\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=10659414.PN.&OS=PN/10659414&RS=PN/10659414\">\n                            10,659,414\n                        </a> and <a target='_blank' href=\"https://ppubs.uspto.gov/pubwebapp/static/pages/ppubsbasic.html\"> 11,444,904</a> {' '}\n                        , European Union (EU) Patent <a target='_blank' href=\"https://worldwide.espacenet.com/patent/search/family/060411925/publication/EP3466003A1?q=pn%3DEP3466003\">EP 3466003</a>,\n                        Australian Patent <a target='_blank' href=\"http://pericles.ipaustralia.gov.au/ols/auspat/applicationDetails.do?applicationNo=2017269953\">2017269953</a>,{' '}\n                        as well as other patents that are pending. For additional\n                        information, please contact{' '}\n                        <a href=\"mailto:patents@alphc.com\">patents@alphc.com</a>.\n                    </p>\n                </Container>\n\n                <ParallaxProvider>\n                    <KeyFeatures />\n                </ParallaxProvider>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default HowItWorks;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst NewsRelease = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content news-release\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>News Release</Col>\n                    </Row>\n                    August 8, 2017\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.newswire.ca/news-releases/alphabet-communication-aims-to-connect-every-address-and-make-the-world-safer-639131043.html\">\n                            https://www.newswire.ca/news-releases/alphabet-communication-aims-to-connect-every-address-and-make-the-world-safer-639131043.html\n                        </a>\n                    </p>\n                    January 10, 2018\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.newswire.ca/news-releases/alphabet-communication-patent-granted-by-the-uspto-we-have-the-ability-to-map-the-global-population-and-connect-all-humanity-668560533.html\">\n                            https://www.newswire.ca/news-releases/alphabet-communication-patent-granted-by-the-uspto-we-have-the-ability-to-map-the-global-population-and-connect-all-humanity-668560533.html\n                        </a>\n                    </p>\n                    September 12, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/alphc-our-journey-focus-part-15-shafin-valla\">\n                            https://www.linkedin.com/pulse/alphc-our-journey-focus-part-15-shafin-valla\n                        </a>\n                    </p>\n\n                    September 13, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/alphc-e-alert-app-part-25-shafin-valla\">\n                            https://www.linkedin.com/pulse/alphc-e-alert-app-part-25-shafin-valla\n                        </a>\n                    </p>\n                    September 14, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/future-targeted-first-responders-alerts-part-35-shafin-valla\">\n                            https://www.linkedin.com/pulse/future-targeted-first-responders-alerts-part-35-shafin-valla\n                        </a>\n                    </p>\n                    September 15, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/first-responders-benefits-2-way-communication-early-alert-valla\">\n                            https://www.linkedin.com/pulse/first-responders-benefits-2-way-communication-early-alert-valla\n                        </a>\n                    </p>\n                    September 16, 2022\n                    <p>\n                        <a\n                            className=\"text-muted\"\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://www.linkedin.com/pulse/alphc-vision-goals-part-55-shafin-valla\">\n                            https://www.linkedin.com/pulse/alphc-vision-goals-part-55-shafin-valla\n                        </a>\n                    </p>\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default NewsRelease;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst OurPromise = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content our-promise\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Our Promise</Col>\n                    </Row>\n                    <p>\n                        Protecting the privacy of individuals and the security of\n                        data is fundamental to us. There is a fine balance between\n                        state security and protecting the privacy and safety of\n                        citizens. We have all witnessed the erosion of privacy with\n                        our electronic devices. Our licensing agreements will\n                        specify opt-in use only. This means, individuals must\n                        specifically allow themselves to be included in the system\n                        to receive and send alerts or messages. Depending on your\n                        region the security of the state is always fundamental.\n                        Area-wide alerts can only be sent by licensed domain users\n                        using a geo-coded address within that geographical area or\n                        country, further enhancing secure communication. This\n                        ensures transparency and encourages user responsibility.\n                    </p>\n\n                    <p>\n                        AlphC IP is the next generation of emergency response\n                        technology. Our aim is to work with governments,\n                        institutions and agencies. We create a safer world for their\n                        communities and citizens.\n                    </p>\n\n                    <p>\n                        Please feel free to{' '}\n                        <a\n                            className=\"text-muted\"\n                            href=\"mailto:anything@alphabetcommunication.com\">\n                            contact us\n                        </a>{' '}\n                        for more information.\n                    </p>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default OurPromise;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\n\nimport Footer from './Footer';\nimport Header from './Header';\nconst OurStory = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content our-story\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Our Story</Col>\n                    </Row>\n                    <p>\n                        AlphC journey began in silence over five years ago with two\n                        lines and an @ symbol. The lines represented latitude and\n                        longitude.\n                    </p>\n\n                    <Row>\n                        <Col className=\"text-center\">\n                            <figure className=\"figure\">\n                                <img\n                                    alt=\"2 lines\"\n                                    src=\"/assets/img/our-story/our-story-1.png\"\n                                    className=\"figure-img img-fluid rounded mr-2\"\n                                />\n                                <img\n                                    alt=\"at symbol\"\n                                    src=\"/assets/img/our-story/our-story-2.png\"\n                                    className=\"figure-img img-fluid rounded\"\n                                />\n                            </figure>\n                        </Col>\n                    </Row>\n\n                    <p>\n                        With trademarks and three USPTO Patents Granted in 2018,\n                        2019 and 2020, we are now in a position to license our IP\n                        and technology to institutions and governments. All\n                        information post-testing is housed on the clients secure\n                        institutional or government servers. AlphC does not have\n                        access to this information.\n                    </p>\n\n                    <p>\n                        This site is specifically developed to permit testing and\n                        pilot-studies with our partners, prior to implementation\n                        within their regions.\n                    </p>\n\n                    <p>\n                        To license our IP and technology, you can contact us at{' '}\n                        <a className=\"text-muted\" href=\"mailto:anything@alphc.com\">\n                            anything@alphc.com\n                        </a>\n                    </p>\n\n                    <p>\n                        General inquiries can be sent to{' '}\n                        <a\n                            className=\"text-muted\"\n                            href=\"mailto:anything@alphabetcommunication.com\">\n                            anything@alphabetcommunication.com\n                        </a>\n                    </p>\n                </Container>\n            </div><Footer />\n        </main>\n    )\n        ;\n};\n\nexport default OurStory;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport ReactPlayer from 'react-player';\nimport {useHistory, useLocation} from 'react-router';\nimport {Modal, ModalBody, ModalHeader} from 'reactstrap';\n\n\nconst OurVideo = () => {\n    const {pathname: location} = useLocation();\n    const history = useHistory();\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    useEffect(() => {\n        if (location === '/our-video') setIsOpen(true);\n\n        return () => setIsOpen(false);\n    }, [location]);\n\n    const toggle = useCallback(() => {\n        setIsOpen(!isOpen);\n    }, [isOpen]);\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            backdrop={true}\n            onClosed={() => history.push('/')}\n            className={'video-modal-container'}>\n            <ModalHeader toggle={toggle} />\n            <ModalBody className={'video-container'}>\n                <ReactPlayer\n                    width={'100%'}\n                    height={'80vh'}\n                    url={'https://youtu.be/Cp4CSOacwDw'}\n                />\n            </ModalBody>\n        </Modal>\n    );\n};\n\nexport default OurVideo;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Patents = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content patents\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Patents</Col>\n                    </Row>\n\n                    <p>\n                        Alphabet Communication (AlphC) continues to revolutionize\n                        electronic communication every day by inventing world-class\n                        technology. The Company invests significant time and\n                        resources in research and development. To protect the\n                        Company’s R&D efforts, AlphC has vigorously developed a\n                        robust intellectual property portfolio all part of a\n                        strategy for protecting the innovations that make AlphC an\n                        industry leader in electronic communications and connecting\n                        people via their addresses. As an example, our IP can be\n                        used to connect and{' '}\n                        <a href=\"https://www.newswire.ca/news-releases/alphabet-communication-patent-granted-by-the-uspto-we-have-the-ability-to-map-the-global-population-and-connect-all-humanity-668560533.html\">\n                            map the global population\n                        </a>\n                        . AlphC gives a lifeline for governments to reach their\n                        citizens via their address linked to their mobile, a\n                        technological breakthrough for emergency communication and\n                        real-time census.{' '}\n                        <a href=\"https://www.alphc.com/our-promise\">Privacy</a> of\n                        the state and citizens is fundamental to our core values.\n                    </p>\n\n                    <p>\n                        Our technology further maps the rural world and its\n                        addresses based on their current country address\n                        designations (Lot, Plot No, etc.). This breakthrough gives\n                        3.5 billion people an address and connects over 1 billion\n                        addresses to their state. AlphC IP provides infinite\n                        possibilities and new knowledge to the world.\n                    </p>\n\n                    <p>\n\n\n                        AlphC’s products and services may be covered by U.S. Patent\n                        Nos.{' '}\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=9860203.PN.&OS=PN/9860203&RS=PN/9860203\">\n                            9,860,203\n                        </a>\n                        ,\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=10,356,028.PN.&OS=PN/10,356,028&RS=PN/10,356,028\">\n                            10,356,028\n                        </a>\n                        ,\n                        <a target='_blank' href=\"http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2=HITOFF&d=PALL&p=1&u=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r=1&f=G&l=50&s1=10659414.PN.&OS=PN/10659414&RS=PN/10659414\">\n                            10,659,414\n                        </a> and <a target='_blank' href=\"https://ppubs.uspto.gov/pubwebapp/static/pages/ppubsbasic.html\"> 11,444,904</a> {' '}\n                        , European Union (EU) Patent <a target='_blank' href=\"https://worldwide.espacenet.com/patent/search/family/060411925/publication/EP3466003A1?q=pn%3DEP3466003\">EP 3466003</a>,\n                        Australian Patent <a target='_blank' href=\"http://pericles.ipaustralia.gov.au/ols/auspat/applicationDetails.do?applicationNo=2017269953\">2017269953</a>,{' '}\n                        as well as other patents that are pending. <br /><br /> For additional\n                        information, please contact{' '}\n                        <a href=\"mailto:patents@alphc.com\">patents@alphc.com</a>.\n                    </p>\n                </Container>\n            </div><Footer />\n        </main>\n    );\n};\n\nexport default Patents;\n","import React from 'react';\nimport {Col, Container, Row} from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nconst PrivacyPolicy = () => {\n    return (\n        <main>\n            <Header />\n        <div className=\"content privacy-policy\">\n            <Container>\n                <Row className=\"section-title\">\n                    <Col>Alphabet Communication Privacy Policy</Col>\n                </Row>\n\n                <p>Updated October 28, 2021</p>\n\n<p>Websites available at www.alphc.com and certain related online products and services, including mobile and/or tablet applications (collectively, “Services”), are provided by Alphabet Communications, Inc., a Delaware corporation, having offices at 603-125 Western Battery Rd., Toronto, Ontario, Canada M6K 3S2 (hereinafter “AlphC”).</p>\n\n<p>This Privacy Policy applies to our Services. By accessing or using our Services, you are agreeing to this Privacy Policy and to our Terms of Use. Do not use our Services if you do not agree to this Privacy Policy or to the Terms of Use.</p>\n\n<p>AlphC reserves the right to modify, delete, and/or change this Privacy Policy without prior notice.</p>\n\n<p>Unless explicitly defined otherwise, the terms used in this Privacy Policy have the same meanings as in our Terms of Use, available at https://www.alphc.com/terms-of-use.</p>\n\n<p>Alphabet Communication built the AlphC EMERGENCY ALERT app as a free app for your Main Registered Address. This SERVICE is provided by Alphabet Communication and is intended for use as is. </p>\n\n<p>In an emergency contact your local first responders directly. Our App is only to be used as an aid. First responders can license our technology to increase the safety of your community.</p>\n\n<h2>Information We Collect</h2>\n\n\n<p>We collect information from you when you use our Services. We may require you to provide us with Personal Data including, but not limited to, your location.</p>\n\n<p>Whenever you use our Services, we may collect various Log Data including, but not limited to, your device’s Internet Protocol address, device name, operating system version, configuration of the Services (for example, mobile application configuration), the time and date of your use of the Services, and other information.</p>\n\n<h2>How We Use Information We Collect</h2>\n\n\n<p>We may use the information we collect to provide our Services. We may use the information we collect to improve your use of our Services or to improve our Services.</p>\n\n<h2>Third Parties</h2>\n\n\n<p>We may use third-party companies and individuals for the following reasons:</p>\n<ul>\n<li>To facilitate our Services</li>\n<li>To provide our Services on our behalf</li>\n<li>To perform services related to our Services</li>\n<li>To assist us in analyzing how our Services are used.</li>\n</ul>\n\n\n<p>Third parties may have access to your Personal Data and to Log Data in order to perform tasks related to the above reasons. </p>\n\n<h2>Cookies</h2>\n\n\n<p>AlphC’s Services may make use of cookies. We will never use cookies to store personally identifying information. Additionally, third party code and libraries used by our Services may use cookies. By using our Services, you agree to the use of cookies. If you refuse cookies, you may not be able to use some portions of our Services.</p>\n\n<h2>Security</h2>\n\n<p>We value your trust and strive to use commercial acceptable means of protecting your Personal Data. However, no method of electronic transmission or storage is completely without risk, and we cannot guarantee the absolute security of your Personal Data.</p>\n\n<h2>External Sites and Services</h2>\n\n<p>Our Services may contain links to external sites or services. We have no control over and assume no responsibility for content, privacy policies, or practices of any external sites or services. This Privacy Policy does not apply to external sites and services.</p>\n\n<h2>Children’s Privacy</h2>\n\n<p>We do not address anyone under the age of 13. We do not knowingly collect personally identifiable information from anyone under the age of 13. If we discover that a child under 13 has provided us with personal information, we will delete that information from our servers. If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact us and we will take steps to remove the information.</p>\n\n\n<h2>Contact</h2>\n\n<p>If you have any questions or concerns about this Privacy Policy, you can reach us at anything@alphc.com.</p>\n\n\n                <p>\n                    Copyright © 2022 – Alphabet Communications (AlphC), Inc. All\n                    rights reserved.\n                </p>\n            </Container>\n        </div>\n         <Footer />\n         </main>\n    );\n};\n\nexport default PrivacyPolicy;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nconst TermsOfUse = () => {\n    return (\n        <main>\n            <Header />\n            <div className=\"content terms-of-use\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Alphabet Communication Terms of Use</Col>\n                    </Row>\n\n                    <p> Welcome to Alphabet Communication! Websites available at www.alphc.com (\"Websites\") and certain related online products and services, including mobile and/or tablet applications (\"Services\"), are provided by Alphabet Communications, Inc., a Delaware corporation, having offices at 603-125 Western Battery Rd., Toronto, Ontario, Canada M6K 3S2 (hereinafter \"AlphC\").</p>\n\n                    <p>By accessing or using the Websites and/or Services, you are agreeing to the following Terms of Use. Do not use the Websites or Services if you do not agree with any of these Terms of Use. AlphC reserves the right to modify, delete, and/or change these Terms of Use without prior notice.</p>\n\n                    <h2>Permitted Use of Websites and Services</h2>\n\n                    <p>AlphC allows you to access and use the Websites and Services, provided that you comply with these Terms of Use. You may use the Websites and Services only as permitted by law. AlphC reserves the right to suspend and/or terminate your account and/or deny access to the Websites and/or Services if you do not comply with these Terms of Use or any other policies of AlphC or if you are suspected of engaging in any conduct not in compliance with these Terms of Use or any other policies of AlphC, as to be determined solely by AlphC at its discretion.</p>\n                    <p>You agree not to use the Websites or Services for any illegal or prohibited purpose or in connection with any illegal or prohibited activities. You agree not to engage in or attempt to engage in any of the following activities in connection with the Websites or Services: access any data not intended for you; breach any security measures; interfere with the use of or access to the Websites or Services; decipher, decompile, disassemble, or reverse engineer any code or software used by or on the Websites or Services; and navigate or search the Websites or Services using any tool or other mechanism, including but not limited to browsers, spiders, or robots.</p>\n\n                    <h2>AlphC Account</h2>\n\n                    <p>Certain features of the Websites and Services may require an AlphC account to be created. You are responsible for any and all activity that occurs on or through your AlphC account regardless of the actual user. If any suspicious activity arises in connection with your AlphC account, including but not limited to non-compliance with these Terms of Use or any other AlphC policies, illegal activities, fraudulent conduct, and abusive conduct, AlphC reserves the right to suspend and/or terminate your AlphC account without being refunded any credits, as to be determined solely by AlphC at its discretion.</p>\n\n                    <h2>Intellectual Property</h2>\n\n                    <p>The Websites, Services, and any product and content appearing thereon are the property of AlphC or other respective owners. Use of the Websites and/or Services does not give you ownership of any intellectual property rights, including but not limited to any trademarks, patents, or copyrights.</p>\n                    <p>The trademarks, service marks, trade dress, and logos appearing on the Websites and Services owned by AlphC are protected under U.S. and foreign trademark laws and may not be used, copied, modified, reproduced, displayed, posted, downloaded, broadcast or distributed in any way, in whole or in part, unless expressly authorized in writing by AlphC or otherwise permitted by law.</p>\n                    <p>The Websites, Services, and content appearing thereon owned by AlphC are protected under U.S. and foreign copyright laws, and may not be used, copied, modified, reproduced, displayed, posted, downloaded, broadcast or distributed in any way, in whole or in part, unless expressly authorized in writing by AlphC or otherwise permitted by law.</p>\n                    <p>Certain content owned by a third party (\"Third Party Content\") may appear on the Websites and/or Services. AlphC reserves the right to remove or refuse to display any Third Party Content as to be solely determined by AlphC at its discretion.</p>\n\n                    <h2>Privacy Policy</h2>\n\n                    <p>AlphC’s Privacy Policy may be found at https://alphc.com. AlphC’s Privacy Policy is hereby incorporated by reference into these Terms of Use. By accessing or using the Websites and/or Services, you are agreeing to AlphC’s use of your Personal and Non-Personal Information in accordance with AlphC’s Privacy Policy. You agree not to hold liable AlphC or any recipient of your Personal and Non-Personal Information from AlphC and in no event shall AlphC or any recipient of your Personal and Non-Personal Information from AlphC be liable for any damages arising from use or sharing of your Personal and Non-Personal Information. Test….</p>\n\n                    <h2>Electronic Communications</h2>\n\n                    <p>You agree to receive electronic communications from AlphC by e-mail and/or through posts made publicly available on the Websites and/or Services. All such electronic communications, which may include agreements, notices, and disclosures, among others, will be deemed to satisfy any legal requirement that such communications be in writing.</p>\n\n                    <h2>Modification of Website and/or Services</h2>\n\n                    <p>AlphC reserves the right to change, modify, improve, remove, and/or suspend, wholly or in part, the Websites and/or Services, solely at AlphC’s discretion.</p>\n\n                    <h2>Warranties and Disclaimers</h2>\n\n                    <p>In an emergency contact your local first responders directly. Our App is only to be used as an aid. First responders can license our technology to increase the safety of your community.</p>\n\n                    <p>The Websites and Services, and any content, product, or portion thereof, are provided on an \"as is\" basis. AlphC makes no representations or warranties of any kind, express or implied, with respect to the Websites and Services and any content, product, or portion thereof. To the extent permissible by law, AlphC disclaims all warranties of any kind, express or implied, including but not limited to implied warranties of merchantability, fitness for a particular purpose, and non-infringement.</p>\n                    <p>AlphC makes no representations or warranties that (a) the functionality of the Websites and Services and any content, product, or portion thereof will be uninterrupted and/or free of error, or (b) the Websites and Services will meet your requirements or expectations, or (c) defects of the Websites and Services will be corrected, or (d) the Websites or Services will be free of viruses, spyware, or any other harmful or malicious content, known and unknown.</p>\n                    <p>The Websites and/or Services may be unavailable from time to time due to technical and/or other reasons. AlphC cannot predict or control such downtime or the duration thereof. AlphC shall not be liable for any such downtime.</p>\n                    <p>You agree that your use of the Websites and Services and any content, product, or portion thereof is at your sole risk. You agree not to hold AlphC liable, and in no event shall AlphC be liable, for any damages arising from your use of the Website or Services or any content, product, or portion thereof, including but not limited to lost profits, revenues, data losses, financial losses, direct, indirect, incidental, punitive, exemplary, and consequential damages.</p>\n                    <p>You agree to indemnify and hold AlphC and its officers, employees, and agents harmless from any claim, including reasonable attorney’s fees, made by any third party arising out of your use of the Websites and/or Services or violation of these Terms of Use and/or Privacy Policy.</p>\n                    <p>You may discontinue use of the Websites and/or Services at any time if you do not agree with any of these Terms of Use or if you are dissatisfied with the Websites and/or Services. You agree that your discontinued use of the Websites and/or Services will be your sole and exclusive remedy for any claim that may arise from your use of the Websites and/or Services against AlphC.</p>\n\n                    <h2>General</h2>\n\n                    <p>Any provision of these Terms of Use that is deemed invalid, void or unenforceable for any reason shall be deemed severable and shall not affect the validity and enforceability of any other provision of these Terms of Use.</p>\n                    <p>Captions and titles appearing on these Terms of Use are for convenience of reference only and shall not control or affect the meaning of any provision.</p>\n\n                    <h2>These Terms of Use are applicable worldwide.</h2>\n\n                    <p>The laws of California will be applicable to any dispute or claim arising out of or relating to these Terms of Use or use of the Websites and/or Services. The courts of California have exclusive jurisdiction over all disputes and claims arising out of or relating to these Terms of Use or use of the Websites and/or Services without regard to choice of law or conflict of law provisions.</p>\n                    <p>These Terms of Use are effective as of January 02, 2021.</p>\n                    <p>Any updates or modifications to these Terms of Use will be made available on www.alphc.com. Any and all updates or modifications to these Terms of Use will be effective as of the date the updates or modifications are made available on www.alphc.com. You agree to be bound by any and all updates or modifications to these Terms of Use by your continued use of the Websites and/or Services after the updates or modifications to these Terms of Use are made available online.</p>\n                    <p>Please contact AlphC at anything@alphc.com for any questions relating to these Terms of Use.</p>\n\n\n\n                    <p>\n                        Copyright © 2022 – Alphabet Communications (AlphC), Inc. All\n                        rights reserved.\n                    </p>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default TermsOfUse;\n","import mapboxgl from 'mapbox-gl';\nimport React, {useContext, useEffect, useRef, useState} from \"react\";\nimport MapContext from '../contexts/MapContext/MapContext';\nimport MapLegend from './MapLegend';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_GL_ACCESS_TOKEN;\n\nconst GMap = ({className}) => {\n    const [map, setMap] = useState(null);\n    const mapContainer = useRef(null);\n\n    const context = useContext(MapContext);\n\n    useEffect(() => {\n        const initializeMap = ({setMap, mapContainer}) => {\n            const map = new window.google.maps.Map(mapContainer.current, {\n                center: {lat: 43.63982499999999, lng: -79.4164156},\n                zoom: 5,\n\n                mapTypeControl: true,\n                mapTypeControlOptions: {\n                    position: window.google.maps.ControlPosition.LEFT_BOTTOM,\n                    mapTypeIds: [\n                        window.google.maps.MapTypeId.SATELLITE,\n                        window.google.maps.MapTypeId.ROADMAP,\n                    ],\n                },\n                fullscreenControl: false,\n            });\n\n            setMap(map);\n            context.setMap(map);\n        };\n\n        if (!map) initializeMap({setMap, mapContainer});\n    }, [context, map]);\n\n    return (\n        <div className={`d-flex flex-fill ${className ? className : ''}`}>\n            <MapLegend />\n            <div\n                className=\"flex-fill\"\n                ref={(el) => (mapContainer.current = el)}\n            />\n        </div>\n    );\n};\n\nexport default GMap;\n","import { useFormik } from 'formik';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nimport { useHistory } from 'react-router';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    Row,\n    Col,\n    Collapse,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label,\n    Spinner,\n} from 'reactstrap';\nimport GMap from '../../../common/components/GMap';\nimport MapContext from '../../../common/contexts/MapContext/MapContext';\nimport { additionalPropertySchema } from '../../../common/validation/propertySchema';\nimport {\n    getUserProperty,\n    saveUserProperty,\n} from '../../../redux/actionCreators/appActionCreators';\nimport {\n    generateEmail,\n    geocodeAddress,\n    reverseGeocodePoint,\n} from '../../../utils/propertyUtils';\nimport Footer from '../newHome/Footer';\nimport Header from '../newHome/Header';\n\nconst EditProperty = () => {\n    const [searchText, setSearchText] = useState('');\n    const [searching, setSearching] = useState(false);\n\n    const currentUser = useSelector((state) => state.auth.me);\n    if (!currentUser.primaryHolder) {\n        toastr.warning('Warning', 'Only Primary Holder can edit this address');\n    }\n\n\n    const { id: propertyId } = useSelector((state) => state.auth.me.property);\n    const dispatch = useDispatch();\n\n    const { map } = useContext(MapContext);\n\n    const [marker] = useState(\n        new window.google.maps.Marker({\n            draggable: true,\n        }),\n    );\n\n    const history = useHistory();\n\n    const formik = useFormik({\n        initialValues: {\n            id: propertyId,\n            email: '',\n            rural: false,\n            primaryAddress: true,\n            hightRiseOrCommercial: false,\n            totalFloors: '1',\n            totalUnitsEachFloor: '1',\n            addressType: '',\n            settlementType: '',\n            unitNo: '',\n            postalCode: '',\n            streetNumber: '',\n            route: '',\n            locality: '',\n            lotNo: '',\n            plotNo: '',\n            region: '',\n            province: '',\n            city: '',\n            country: '',\n            location: {},\n        },\n        validationSchema: additionalPropertySchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n\n            if (values.settlementType === 'lowRise') {\n                values.unitNo = '';\n            }\n\n            const property = {\n                ...values,\n            };\n\n            dispatch(saveUserProperty(property)).then((resp) => {\n                setSubmitting(false);\n\n                if (window.ReactNativeWebView) {\n                    window.ReactNativeWebView.postMessage(\n                        JSON.stringify({ result: 'success' }),\n                    );\n                } else {\n                    console.log('..save property..' + JSON.stringify(resp));\n                    currentUser.property = resp.value;\n                    // history.push('/');\n                    toastr.success(\n                        'Successful!',\n                        'New location is successfully.',\n                    );\n                    setTimeout(() => {\n                        history.push('/');\n                    }, 1000);\n                }\n            });\n        },\n    });\n\n    const {\n        handleChange,\n        handleBlur: handleBlurOrig,\n        handleSubmit,\n        errors,\n        touched,\n        values,\n        isValid,\n        isSubmitting,\n        setValues,\n        setFieldValue,\n    } = formik;\n\n    const handleBlur = (...params) => {\n        console.log('values: ', values);\n        setValues({\n            ...values,\n            email: generateEmail(values),\n        });\n        geocodeAddress({\n            address: [\n                values.postalCode,\n                values.streetNumber,\n                values.route,\n                values.locality,\n                values.city,\n                values.country,\n            ].join(' '),\n        }).then((response) => {\n            if (response && response.latitude && response.longitude) {\n                changeMarkerPosition(\n                    response.longitude,\n                    response.latitude,\n                    false,\n                );\n            }\n        });\n        handleBlurOrig(...params);\n    };\n\n    const changeMarkerPosition = useCallback(\n        (longitude, latitude, geocode = true) => {\n            marker.setPosition({\n                lng: longitude,\n                lat: latitude,\n            });\n\n            if (geocode)\n                reverseGeocodePoint({ latitude, longitude }).then((data) => {\n                    Object.keys(data).forEach((i) => {\n                        if (data[i] === undefined) data[i] = '';\n                    });\n\n                    setValues({\n                        ...values,\n                        ...data,\n                        unitNo: values.unitNo,\n                        rural: Object.values(data).some((value) => !value),\n                        email: generateEmail({\n                            ...data,\n                            unitNo: values.unitNo,\n                        }),\n                        location: {\n                            latitude,\n                            longitude,\n                        },\n                    });\n                });\n        },\n        [marker, setValues, values],\n    );\n\n    useEffect(() => {\n        dispatch(getUserProperty()).then(({ value: property }) => {\n            setValues({\n                ...property,\n                ...property.location,\n            });\n\n            const { latitude, longitude } = property.location;\n\n            if (longitude && latitude && map) {\n                marker.setPosition({\n                    lng: longitude,\n                    lat: latitude,\n                });\n\n                marker.setMap(map);\n                map.panTo({\n                    lng: longitude,\n                    lat: latitude,\n                });\n            }\n        });\n    }, [dispatch, map, marker, propertyId, setValues]);\n\n\n    useEffect(() => {\n        if (map && currentUser.primaryHolder) {\n            const onClickMap = (e) => {\n                changeMarkerPosition(e.latLng.lng(), e.latLng.lat());\n                marker.setMap(map);\n            };\n\n            map.addListener('click', onClickMap);\n\n            const onDragMarker = (e) => {\n                changeMarkerPosition(e.latLng.lng(), e.latLng.lat());\n            };\n\n            const handle = window.google.maps.event.addListener(\n                marker,\n                'dragend',\n                onDragMarker,\n            );\n\n            return () => {\n                window.google.maps.event.clearListeners(map, 'click');\n                if (handle) window.google.maps.event.removeListener(handle);\n            };\n        }\n    }, [changeMarkerPosition, map, marker, setValues, values]);\n\n    const onSubmitSearchText = useCallback(\n        (e) => {\n            setSearching(true);\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (!searchText.trim()) return;\n\n            geocodeAddress({\n                address: searchText,\n            })\n                .then((data) => {\n                    if (!data?.latitude) return false;\n\n                    changeMarkerPosition(data.longitude, data.latitude);\n\n                    map.panTo({\n                        lng: data.longitude,\n                        lat: data.latitude,\n                    });\n                })\n                .finally(() => {\n                    setSearching(false);\n                });\n        },\n        [changeMarkerPosition, map, searchText],\n    );\n\n    return (\n        <main>\n            <Header />\n            <div className='content'>\n                <Card className=\"mb-5\">\n                    <CardHeader>Edit Property</CardHeader>\n\n                    <CardBody className=\"pb-4 d-flex flex-column\">\n                        <Row xs={12}>\n                            <Col xs=\"8\">\n                                <div\n                                    className=\"d-flex flex-fill mb-4\"\n                                    style={{ height: '600px' }}>\n                                    {currentUser.primaryHolder ? <div className={'map-top-actions'}>\n                                        <div className={'search-actions'}>\n                                            <Form onSubmit={onSubmitSearchText}>\n                                                <Input\n                                                    bsSize={'sm'}\n                                                    value={searchText}\n                                                    onChange={(e) =>\n                                                        setSearchText(e.currentTarget.value)\n                                                    }\n                                                    placeholder={'Search...'}\n                                                />\n                                                <Button\n                                                    className=\"btn-no-focus\"\n                                                    color={'info'}\n                                                    size={'sm'}\n                                                    onClick={onSubmitSearchText}\n                                                    type={'submit'}>\n                                                    {searching ? (\n                                                        <i className=\"fa fa-spin fa-spinner\" />\n                                                    ) : (\n                                                        <i className=\"fa fa-search\" />\n                                                    )}\n                                                </Button>\n                                            </Form>\n                                        </div>\n                                    </div> : null}\n                                    <GMap />\n                                </div>\n                            </Col>\n\n                            <Col xs=\"4\">\n                                <Row>\n                                    <Form onSubmit={handleSubmit}>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"firstName\">Email</Label>\n                                                <Input\n                                                    id=\"email\"\n                                                    name=\"email\"\n                                                    style={{ minWidth: \"500px\" }}\n                                                    disabled={true}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={`${values.email}@alphc.com`}\n                                                    invalid={touched.email && errors.email}\n                                                />\n                                                <FormFeedback>{errors.email}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup tag=\"fieldset\">\n                                                <Label for=\"postalCode\">Address Type</Label>\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input\n                                                            type=\"radio\"\n                                                            name=\"addressType\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={'residential'}\n                                                            checked={\n                                                                values.addressType === 'residential'\n                                                            }\n                                                            invalid={\n                                                                touched.addressType &&\n                                                                errors.addressType\n                                                            }\n                                                        />\n                                                        Residential\n                                                    </Label>\n                                                </FormGroup>\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input\n                                                            type=\"radio\"\n                                                            name=\"addressType\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={'commercial'}\n                                                            checked={\n                                                                values.addressType === 'commercial'\n                                                            }\n                                                            invalid={\n                                                                touched.addressType &&\n                                                                errors.addressType\n                                                            }\n                                                        />\n                                                        Commercial\n                                                    </Label>\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup tag=\"fieldset\">\n                                                <Label for=\"postalCode\">Settlement Type</Label>\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input\n                                                            type=\"radio\"\n                                                            name=\"settlementType\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={'lowRise'}\n                                                            checked={\n                                                                values.settlementType === 'lowRise'\n                                                            }\n                                                            invalid={\n                                                                touched.settlementType &&\n                                                                errors.settlementType\n                                                            }\n                                                        />\n                                                        Single Dwelling\n                                                    </Label>\n                                                </FormGroup>\n                                                <FormGroup check>\n                                                    <Label check>\n                                                        <Input\n                                                            type=\"radio\"\n                                                            name=\"settlementType\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={'highRise'}\n                                                            checked={\n                                                                values.settlementType === 'highRise'\n                                                            }\n                                                            invalid={\n                                                                touched.settlementType &&\n                                                                errors.settlementType\n                                                            }\n                                                        />\n                                                        High Rise/Multiple Units\n                                                    </Label>\n                                                </FormGroup>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <Col>\n                                                <Collapse\n                                                    isOpen={values.settlementType === 'highRise'}>\n                                                    <Col>\n                                                        <FormGroup>\n                                                            <Label for=\"postalCode\">Unit No</Label>\n                                                            <Input\n                                                                type=\"text\"\n                                                                name=\"unitNo\"\n                                                                onChange={handleChange}\n                                                                onBlur={handleBlur}\n                                                                value={values.unitNo}\n                                                                invalid={\n                                                                    touched.unitNo && errors.unitNo\n                                                                }\n                                                            />\n                                                            <FormFeedback>\n                                                                {errors.unitNo}\n                                                            </FormFeedback>\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Collapse>\n                                            </Col>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"postalCode\">Postal Code</Label>\n                                                <Input\n                                                    id=\"postalCode\"\n                                                    name=\"postalCode\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.postalCode}\n                                                    invalid={\n                                                        touched.postalCode && errors.postalCode\n                                                    }\n                                                />\n                                                <FormFeedback>{errors.postalCode}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"streetNumber\">Street Number</Label>\n                                                <Input\n                                                    id=\"streetNumber\"\n                                                    name=\"streetNumber\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.streetNumber}\n                                                    invalid={\n                                                        touched.streetNumber && errors.streetNumber\n                                                    }\n                                                />\n                                                <FormFeedback>{errors.streetNumber}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"route\">\n                                                    Street / Route / Lot No / Plot No / Local Identifier\n                                                </Label>\n                                                <Input\n                                                    id=\"route\"\n                                                    name=\"route\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.route}\n                                                    invalid={touched.route && errors.route}\n                                                />\n                                                <FormFeedback>{errors.route}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"locality\"> City / Locality</Label>\n                                                <Input\n                                                    id=\"locality\"\n                                                    name=\"locality\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.locality}\n                                                    invalid={touched.locality && errors.locality}\n                                                />\n                                                <FormFeedback>{errors.locality}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        {values.rural && (\n                                            <>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label for=\"lotNo\">Lot No</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"lotNo\"\n                                                            id=\"lotNo\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.lotNo}\n                                                            invalid={touched.lotNo && errors.lotNo}\n                                                            placeholder=\"\"\n                                                        />\n                                                        <FormFeedback>{errors.lotNo}</FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label for=\"plotNo\">Plot No</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"plotNo\"\n                                                            id=\"plotNo\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.plotNo}\n                                                            invalid={\n                                                                touched.plotNo && errors.plotNo\n                                                            }\n                                                            placeholder=\"\"\n                                                        />\n                                                        <FormFeedback>{errors.plotNo}</FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label for=\"region\">Region</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"region\"\n                                                            id=\"region\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.region}\n                                                            invalid={\n                                                                touched.region && errors.region\n                                                            }\n                                                            placeholder=\"\"\n                                                        />\n                                                        <FormFeedback>{errors.region}</FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col>\n                                                    <FormGroup>\n                                                        <Label for=\"province\">Province</Label>\n                                                        <Input\n                                                            type=\"text\"\n                                                            name=\"province\"\n                                                            id=\"province\"\n                                                            onChange={handleChange}\n                                                            onBlur={handleBlur}\n                                                            value={values.province}\n                                                            invalid={\n                                                                touched.province && errors.province\n                                                            }\n                                                            placeholder=\"\"\n                                                        />\n                                                        <FormFeedback>\n                                                            {errors.province}\n                                                        </FormFeedback>\n                                                    </FormGroup>\n                                                </Col>\n                                            </>\n                                        )}\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"city\">\n                                                    Province / State\n                                                </Label>\n                                                <Input\n                                                    id=\"city\"\n                                                    name=\"city\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.city}\n                                                    invalid={touched.city && errors.city}\n                                                />\n                                                <FormFeedback>{errors.city}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col xs=\"12\">\n                                            <FormGroup>\n                                                <Label htmlFor=\"country\">Country</Label>\n                                                <Input\n                                                    id=\"country\"\n                                                    name=\"country\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.country}\n                                                    invalid={touched.country && errors.country}\n                                                />\n                                                <FormFeedback>{errors.country}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <FormGroup check>\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"primaryAddress\"\n                                                        onChange={(e) => {\n                                                            setFieldValue(\n                                                                'primaryAddress',\n                                                                e.currentTarget.checked,\n                                                            );\n                                                        }}\n                                                        onBlur={handleBlur}\n                                                        invalid={\n                                                            touched.primaryAddress &&\n                                                            errors.primaryAddress\n                                                        }\n                                                        checked={values.primaryAddress}\n                                                    />\n                                                    This is my primary address\n                                                </Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            <FormGroup>\n                                                <Input\n                                                    type=\"hidden\"\n                                                    invalid={errors.inValidProperty}\n                                                />\n                                                <FormFeedback>\n                                                    {errors.inValidProperty}\n                                                </FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col>\n                                            {currentUser.primaryHolder ? <Button\n                                                disabled={!isValid || isSubmitting}\n                                                type=\"submit\"\n                                                block\n                                                color=\"primary\">\n                                                {isSubmitting ? <Spinner size=\"sm\" /> : 'Submit'}\n                                            </Button> : null}\n                                        </Col>\n                                    </Form>\n                                </Row>\n                            </Col>\n\n                        </Row>\n                    </CardBody>\n                    <CardFooter className=\"text-right\">\n\n                    </CardFooter>\n\n                </Card>\n            </div>\n            <Footer />\n        </main>\n\n    );\n};\n\nexport default EditProperty;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Button, Modal, ModalBody, Row } from 'reactstrap';\nimport { toggleVerificationModal } from '../../../redux/actionCreators/appActionCreators';\nimport EmailVerification from '../accountVerification/EmailVerification';\nimport MobileVerification from '../accountVerification/MobileVerification';\nimport { resetRegistrationForm } from '../../../redux/actionCreators/registrationActionCreators';\n\nconst MobileAccountVerification = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        try {\n            document.querySelector('body').style.marginTop = 0;\n            document.querySelector('#root').style.height = '100%';\n            document.querySelector('.content').style.height = '100%';\n        } catch (e) { }\n    });\n\n    const registrationUser = useSelector((state) => state.registerForm.user);\n    // console.log('registrationUser=' + JSON.stringify(registrationUser));\n    let user = useSelector((state) => state.auth.me);\n\n    if (user === null || user === undefined) {\n        user = registrationUser;\n    }\n\n    const userHasEmail = user.email != null && user.email != undefined && user.email.length > 4 && user.username !== user.email;\n\n    const userVerified =\n        (userHasEmail && user.emailVerified && user.mobileVerified) ||\n        (!userHasEmail && user.mobileVerified);\n\n    // if (!showVerificationModal) return null;\n\n    if (!userVerified) {\n        return (\n            <div className=\"content ml-1 mr-1 mt-5 mb-3\">\n\n                <EmailVerification />\n                <MobileVerification />\n                <Row noGutters className=\"justify-content-end\">\n                    <Button\n                        color={'link'}\n                        size={'sm'}\n                        onClick={() => {\n                            history.push('/logout');\n                        }}>\n                        Logout\n                    </Button>\n                </Row>\n\n            </div>\n        );\n    } else {\n        return (\n            <>\n                <div className=\"content ml-1 mr-1 mt-5 mb-3\">\n                    <div className={'success mt-5 mb-3'}>\n                        Verification Successful!\n                    </div>\n                    <Button\n                        block\n                        color={'success'}\n                        onClick={() => {\n                            try {\n                                if (window.ReactNativeWebView) {\n                                    dispatch(resetRegistrationForm());\n                                    window.ReactNativeWebView.postMessage(\n                                        JSON.stringify({ action: 'goBack' }),\n                                    );\n                                }\n                            } catch (e) {\n\n                            }\n                            dispatch(resetRegistrationForm());\n                            setTimeout(() => {\n                                history.push(\"/\");\n                            }, 500);\n\n\n                        }}>\n                        Start Using Website\n                    </Button>\n                </div>\n            </>\n        );\n\n    };\n};\n\nexport default MobileAccountVerification;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    InputGroup,\n    Input,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport * as Yup from 'yup';\n// import MobileInput from '../../../common/components/MobileInput';\nimport {\n    resendEmailVerificationCode,\n    updateAccount,\n} from '../../../redux/actionCreators/appActionCreators';\nimport EmailVerification from '../accountVerification/EmailVerification';\nimport { toastr } from 'react-redux-toastr';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst validationSchema = Yup.object({\n    eMailAddress: Yup.string().email('Invalid email format').required('E-Mail address is required'),\n});\n\nconst ChangeEMail = () => {\n    const [eMailAddressSelected, setEMailAddressSelected] = useState(false);\n    const user = useSelector((state) => state.auth.me);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            eMailAddress: user.email,\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n            dispatch(\n                updateAccount({\n                    email: values.eMailAddress,\n                    emailVerified: false,\n                })\n            ).then((res) => {\n                setSubmitting(false);\n                setEMailAddressSelected(true);\n\n                dispatch(resendEmailVerificationCode(values.eMailAddress))\n                    .then(({ value: { user } }) => {\n                        console.log('change mobile..ret:' + JSON.stringify(user));\n                        if (user.emailVerified) {\n                            if (window.ReactNativeWebView) {\n                                window.ReactNativeWebView.postMessage(\n                                    JSON.stringify({ result: 'success' }),\n                                );\n                            }\n                        }\n                    }).catch(error => {\n                        console.log(' error...' + JSON.stringify(error));\n                    })\n                    .finally(() => {\n                        setSubmitting(false);\n                    });\n            }).catch(error => {\n                if (error.statusCode && error.statusCode === 401) {\n                    toastr.error('Error', error.message);\n                }\n                if (error.statusCode && error.statusCode === 500) {\n                    toastr.error('Error', 'Mobile No. already registered');\n                }\n                setSubmitting(false);\n                console.log('update account...error:' + JSON.stringify(error));\n            });\n        },\n    });\n\n    const {\n        values,\n        touched,\n        errors,\n        handleSubmit,\n        isValid,\n        isSubmitting,\n        handleBlur,\n        handleChange,\n        setFieldValue,\n        setFieldTouched,\n    } = formik;\n\n    return (\n        <main>\n            <Header />\n            <div className=\"full-screen\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Change Email Address</Col>\n                    </Row>\n                    {!eMailAddressSelected && (\n                        <Form onSubmit={handleSubmit}>\n                            <InputGroup className=\"mb-3\">\n                                {/* <Input\n                                type=\"text\"\n                                // setFieldValue={setFieldValue}\n                                // setFieldTouched={setFieldTouched}\n                                placeholder=\"Email address\"\n                                disabled={eMailAddressSelected}\n                                name={'eMailAddress'}\n                                // onChange={handleChange}\n                                value={values.eMailAddress}\n                                invalid={\n                                    touched.eMailAddress && errors.eMailAddress\n                                }\n                            /> */}\n                                <Input\n                                    type=\"email\"\n                                    name=\"eMailAddress\"\n                                    id=\"email\"\n                                    value={values.eMailAddress}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n\n                                    invalid={touched.eMailAddress && errors.eMailAddress}\n                                    placeholder=\"myemail@email.com\"\n                                />\n                                <FormFeedback>{errors.eMailAddress}</FormFeedback>\n                            </InputGroup>\n                            <Row className=\"contact-us-submit-container\">\n                                <Col>\n                                    <Button\n                                        type={'submit'}\n                                        block\n                                        disabled={!isValid || isSubmitting}\n                                        outline\n                                        className=\"float-right my-3\">\n                                        {isSubmitting ? (\n                                            <Spinner size=\"sm\" />\n                                        ) : (\n                                            'Submit'\n                                        )}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    )}\n\n                    {eMailAddressSelected && <EmailVerification />}\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default ChangeEMail;\n","import { useFormik } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    InputGroup,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport MobileInput from '../../../common/components/MobileInput';\nimport {\n    resendMobileVerificationCode,\n    updateAccount,\n} from '../../../redux/actionCreators/appActionCreators';\nimport MobileVerification from '../accountVerification/MobileVerification';\nimport { toastr } from 'react-redux-toastr';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst validationSchema = Yup.object({\n    mobileNumber: Yup.number().required('Mobile number is required'),\n});\n\nconst ChangeMobile = () => {\n    const [mobileNumberSelected, setMobileNumberSelected] = useState(false);\n    const user = useSelector((state) => state.auth.me);\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            mobileNumber: user.mobileNumber,\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n            dispatch(\n                updateAccount({\n                    username: values.mobileNumber,\n                    mobileNumber: values.mobileNumber,\n                    mobileVerified: false,\n                })\n            ).then((res) => {\n                setSubmitting(false);\n                setMobileNumberSelected(true);\n\n                dispatch(resendMobileVerificationCode(values.mobileNumber))\n                    .then(({ value: { user } }) => {\n                        console.log('change mobile..ret:' + JSON.stringify(user));\n                        if (user.mobileVerified) {\n                            if (window.ReactNativeWebView) {\n                                window.ReactNativeWebView.postMessage(\n                                    JSON.stringify({ result: 'success' }),\n                                );\n                            }\n                        }\n                    }).catch(error => {\n                        console.log(' error...' + JSON.stringify(error));\n                    })\n                    .finally(() => {\n                        setSubmitting(false);\n                    });\n            }).catch(error => {\n                if (error.statusCode && error.statusCode === 401) {\n                    toastr.error('Error', error.message);\n                }\n                if (error.statusCode && error.statusCode === 500) {\n                    toastr.error('Error', 'Mobile No. already registered');\n                }\n                setSubmitting(false);\n                console.log('update account...error:' + JSON.stringify(error));\n            });\n        },\n    });\n\n    const {\n        values,\n        touched,\n        errors,\n        handleSubmit,\n        isValid,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n    } = formik;\n\n    return (\n        <main>\n            <Header />\n            <div className=\"full-screen\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Change Mobile Number</Col>\n                    </Row>\n                    {!mobileNumberSelected && (\n                        <Form onSubmit={handleSubmit}>\n                            <InputGroup className=\"mb-3\">\n                                <MobileInput\n                                    setFieldValue={setFieldValue}\n                                    setFieldTouched={setFieldTouched}\n                                    placeholder=\"Mobile Number\"\n                                    disabled={mobileNumberSelected}\n                                    name={'mobileNumber'}\n                                    value={values.mobileNumber}\n                                    invalid={\n                                        touched.mobileNumber && errors.mobileNumber\n                                    }\n                                />\n                                <FormFeedback>{errors.mobileNumber}</FormFeedback>\n                            </InputGroup>\n                            <Row className=\"contact-us-submit-container\">\n                                <Col>\n                                    <Button\n                                        type={'submit'}\n                                        block\n                                        disabled={!isValid || isSubmitting}\n                                        outline\n                                        className=\"float-right my-3\">\n                                        {isSubmitting ? (\n                                            <Spinner size=\"sm\" />\n                                        ) : (\n                                            'Submit'\n                                        )}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    )}\n\n                    {mobileNumberSelected && <MobileVerification />}\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default ChangeMobile;\n","import {useFormik} from 'formik';\nimport React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {toastr} from 'react-redux-toastr';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormFeedback,\n    Input,\n    InputGroup,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport * as Yup from 'yup';\nimport {changePassword} from '../../../redux/actionCreators/authActionCreators';\nimport {useHistory} from 'react-router';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst validationSchema = Yup.object({\n    password: Yup.string()\n        // eslint-disable-next-line no-template-curly-in-string\n        .min(6, 'Password must be at least ${min} characters!')\n        .max(32)\n        .required('Password is required'),\n    // .matches(\n    //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n    //     'Must contain 8 characters, one uppercase, one lowercase and one number',\n    // ),\n    passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref('password')], 'Passwords must match')\n        .required('This field is required'),\n});\n\nconst ChangePassword = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            passwordConfirmation: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, {setSubmitting}) => {\n            setSubmitting(true);\n\n            dispatch(changePassword(values.password)).then(() => {\n                setSubmitting(false);\n\n                if (window.ReactNativeWebView) {\n                    window.ReactNativeWebView.postMessage(\n                        JSON.stringify({result: 'success'}),\n                    );\n                } else {\n                    toastr.success('Successful!', 'Password has been changed.');\n                }\n            });\n        },\n    });\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isValid,\n        isSubmitting,\n    } = formik;\n\n    return (\n        <main>\n            <Header />\n        <div className=\"full-screen\">\n            <Container>\n                <Row className=\"section-title\">\n                    <Col>Change Password</Col>\n                </Row>\n                <Form onSubmit={handleSubmit}>\n                    <InputGroup className=\"mb-3\">\n                        <Input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            name={'password'}\n                            value={values.password}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            invalid={touched.password && errors.password}\n                        />\n                        <FormFeedback>{errors.password}</FormFeedback>\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                        <Input\n                            type=\"password\"\n                            placeholder=\"Password Confirmation\"\n                            name={'passwordConfirmation'}\n                            value={values.passwordConfirmation}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            invalid={\n                                touched.passwordConfirmation &&\n                                errors.passwordConfirmation\n                            }\n                        />\n                        <FormFeedback>\n                            {errors.passwordConfirmation}\n                        </FormFeedback>\n                    </InputGroup>\n                    <Row className=\"contact-us-submit-container\">\n                        <Col>\n                            <Button\n                                type={'submit'}\n                                block\n                                disabled={isSubmitting}\n                                outline\n                                className=\"float-right my-3\">\n                                {isSubmitting ? (\n                                    <Spinner size=\"sm\" />\n                                ) : (\n                                    'Submit'\n                                )}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        </div>\n        <Footer />\n        </main>\n    );\n};\n\nexport default ChangePassword;\n","import React from 'react';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { useHistory } from \"react-router-dom\";\nconst MemberShip = () => {\n    const history = useHistory();\n    const Checkout = (e, productId) => {\n        //do checkout\n        history.push('/checkout/' + productId);\n    }\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Checkout Our MemberShip</Col>\n                    </Row>\n\n                    <Row>\n\n                        <Col xs=\"3\" className='pricing_item'>Essentials</Col>\n                        <Col xs=\"3\" className='pricing_item'>Standard</Col>\n                        <Col xs=\"3\" className='pricing_item'>Premium <hr />\n                            Starts at <br />\n                            C$50/month*\n                            <br />\n                            <Button type=\"button\" className=\"SS_ProductCheckout\" onClick={(e) => Checkout(e, 1)} > Subscribe </Button>\n                        </Col>\n                        <Col xs=\"3\" className='pricing_item'>Free</Col>\n                    </Row>\n\n\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default MemberShip;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport { useHistory } from \"react-router-dom\";\nimport Footer from './Footer';\nimport Header from './Header';\nimport { fetchProductDetails, createStripeSession } from '../../../redux/actionCreators/checkoutCreators';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toastr } from 'react-redux-toastr';\nconst Checkout = ({\n    match: {\n        params: { id },\n    },\n}) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n\n    const pathInfo = history.location.pathname.split(\"/\");\n    console.log('...history. path.. id = ' + JSON.stringify(pathInfo));\n    const [productInfo, setProductInfo] = useState(null);\n    const productId = pathInfo[2];\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setLoading(true);\n        dispatch(fetchProductDetails(productId)).then(resp => {\n            console.log('product info' + JSON.stringify(resp));\n            setProductInfo(resp.value);\n            setLoading(false);\n        }).catch(error => {\n            console.log('get product ');\n            setLoading(false);\n        });\n        return () => { };\n    }, [dispatch]);\n\n    const Checkout = (e) => {\n        //do checkout, create session\n        dispatch(createStripeSession(productInfo)).then(resp => {\n            console.log('..stripe session..' + JSON.stringify(resp));\n            if (resp.value.data === null) {\n                toastr.error('Error', 'Create Payment Error!');\n            } else {\n                window.location.replace(resp.value.url);\n            }\n\n        }).catch(error => {\n            console.log('..checkout failed');\n        })\n    }\n\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Checkout Our MemberShip</Col>\n                    </Row>\n                    {\n                        !loading && (\n                            <>\n                                <Row> {productInfo.title} </Row>\n                                <Row> {productInfo.description} </Row>\n\n                                <Row> C${productInfo.price} </Row>\n                                <Row> <Button onClick={(e) => Checkout(e)}> Checkout</Button> </Row>\n                            </>\n                        )\n                    }\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default Checkout;","import { SERVICE_URL, STRIPE_URL } from '../../constants';\nimport {\n    ADMIN_FETCH_PRODDUCT_DETAIL,\n    STRIPE_CHECKOUT_SESSION\n} from '../actionTypes';\n\nexport const fetchProductDetails = (id) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const stripeUrl = STRIPE_URL;\n\n        return dispatch({\n            type: ADMIN_FETCH_PRODDUCT_DETAIL,\n            payload: fetch(`${stripeUrl}/strapi-stripe/getProduct/${id}`, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                method: 'GET',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};\n\nexport const createStripeSession = (productInfo) => {\n    return (dispatch, getState) => {\n        const token = getState().auth.jwt;\n        const stripeUrl = STRIPE_URL;\n        return dispatch({\n            type: STRIPE_CHECKOUT_SESSION,\n            payload: fetch(`${stripeUrl}/strapi-stripe/createCheckoutSession/`, {\n                body: JSON.stringify({\n                    stripePriceId: productInfo.stripePriceId,\n                    stripePlanId: productInfo.stripePlanId,\n                    isSubscription: productInfo.isSubscription,\n                    productId: productInfo.id,\n                    productName: productInfo.title,\n                }),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n            })\n                .then((r) => r.json())\n                .then((responseData) => {\n                    if (responseData.statusCode >= 300) {\n                        return Promise.reject(responseData);\n                    } else {\n                        return responseData;\n                    }\n                }),\n        });\n    };\n};","import React from 'react';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { useHistory } from \"react-router-dom\";\nconst CheckoutSuccess = () => {\n    const history = useHistory();\n    const Checkout = (e, productId) => {\n        //do checkout\n        history.push('/checkout/' + productId);\n    }\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Checkout Success</Col>\n                    </Row>\n\n\n\n\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default CheckoutSuccess;\n","import React from 'react';\nimport { Button, Col, Container, Row } from 'reactstrap';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { useHistory } from \"react-router-dom\";\nconst CheckoutFailed = () => {\n    const history = useHistory();\n    const Checkout = (e, productId) => {\n        //do checkout\n        history.push('/checkout/' + productId);\n    }\n    return (\n        <main>\n            <Header />\n            <div className=\"content privacy-policy\">\n                <Container>\n                    <Row className=\"section-title\">\n                        <Col>Checkout Failed</Col>\n                    </Row>\n\n\n\n\n\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\n\nexport default CheckoutFailed;\n","import React, { createContext, useReducer } from 'react';\nimport CartReducer from '../../redux/reducers/CartReducer';\nimport { sumItems } from '../../utils/utils';\nexport const CartContext = createContext()\n\nconst storage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst initialState = { cartItems: storage, ...sumItems(storage), checkout: false };\n\nconst CartContextProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(CartReducer, initialState)\n\n    const increase = payload => {\n        dispatch({ type: 'INCREASE', payload })\n    }\n\n    const decrease = payload => {\n        dispatch({ type: 'DECREASE', payload })\n    }\n\n    const addProduct = payload => {\n        dispatch({ type: 'ADD_ITEM', payload })\n    }\n\n    const removeProduct = payload => {\n        dispatch({ type: 'REMOVE_ITEM', payload })\n    }\n\n    const clearCart = () => {\n        dispatch({ type: 'CLEAR' })\n    }\n\n    const handleCheckout = () => {\n        console.log('CHECKOUT', state);\n        dispatch({ type: 'CHECKOUT' })\n    }\n\n    const contextValues = {\n        removeProduct,\n        addProduct,\n        increase,\n        decrease,\n        clearCart,\n        handleCheckout,\n        ...state\n    }\n\n    return (\n        <CartContext.Provider value={contextValues} >\n            {children}\n        </CartContext.Provider>\n    );\n}\n\nexport default CartContextProvider;\n","\nimport React, { useContext } from 'react';\nimport { CartContext } from '../../common/contexts/CartContext';\n\nexport const useCart = () => {\n\n    const ctx = useContext(CartContext)\n\n    return {\n        ...ctx\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Button,\n    Col,\n    Row,\n    Form,\n    FormFeedback,\n    FormGroup,\n    Input,\n    Label,\n    Spinner,\n    Container,\n} from 'reactstrap';\nimport { saveBusinessProfile, getBusinessProfile, saveShoppingCart } from '../../../redux/actionCreators/adminActionCreators';\nimport { useHistory } from 'react-router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Footer from './Footer';\nimport Header from './Header';\nimport { toastr } from 'react-redux-toastr';\nimport { useCart } from '../../hooks/useCart';\nconst bindingSchema = Yup.object().shape({\n    companyName: Yup.string().required('This field is required'),\n    phone: Yup.string().required('This field is required'),\n\n});\nconst BusinessProfile = () => {\n\n    const utilsData = useSelector((state) => state.utilsData);\n    // console.log('...utilsData..' + JSON.stringify(utilsData));\n    const dispatch = useDispatch();\n    const [color, setColor] = useState('default');\n\n    let domain = localStorage.getItem('current_domain');\n    if (domain === undefined || domain === null) {\n        domain = 'alphc.com'\n    }\n    const history = useHistory();\n\n    const queryPage = history.location.search.match(/id=([0-9]+)/, '');\n    // console.log('..queryPage..' + queryPage);\n    const propertyId = queryPage[1];\n    const user = useSelector((state) => state.auth.me);\n    const [companyProfile, setCompanyProfile] = useState({});\n\n    const getWorkingHourValue = (hours, dayOfWeek, index) => {\n        const item = hours.filter((hour) => {\n            return parseInt(hour.dayOfWeek) === dayOfWeek;\n\n        });\n        console.log('..item..' + JSON.stringify(item));\n        if (item && item.length > 0) {\n            if (index === 1) return item[0].openHour;\n            if (index === 2) return item[0].closeHour;\n            if (index === 3) return item[0].closed;\n        }\n        return '';\n    };\n    const [workingHour, setWorkingHour] = useState([]);\n\n    const { addProduct, cartItems, increase } = useCart();\n    const addProductToCard = (product) => {\n        // addProduct(product);\n        const jsonData = {\n            data: {\n                users_id: user.id,\n                products_id: \"1\"\n            }\n        }\n\n        dispatch(saveShoppingCart(jsonData)).then(resp => {\n            // history.push('/cart');\n            history.push('/checkout/1');\n        }).catch(error => {\n            console.log('..add product to cart error..' + JSON.stringify(error));\n        })\n\n    }\n    const formik = useFormik({\n        initialValues: {\n            companyName: '',\n            phone: '',\n            website: '',\n        },\n        isInitialValid: false,\n        validationSchema: bindingSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n\n            const postData = {\n                profileId: companyProfile !== null && companyProfile !== undefined && companyProfile.id !== null && companyProfile.id !== undefined ? companyProfile.id : 0,\n                ...values,\n                property_id: propertyId\n            }\n            dispatch(saveBusinessProfile(postData)).then(resp => {\n                console.log('..save business profile..' + JSON.stringify(resp));\n                setSubmitting(false);\n                toastr.success('Success', 'Business profile saved!');\n                const proudct = {\n                    membershipId: 1,\n\n                }\n\n                addProductToCard(proudct);\n\n            });\n        }\n    });\n    const {\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        isValid,\n        isSubmitting,\n        values,\n        setValues\n    } = formik;\n\n    const [current, setCurrent] = useState(0);\n\n\n    useEffect(() => {\n        dispatch(getBusinessProfile({ id: propertyId })).then(resp => {\n            // console.log('..load profile..' + JSON.stringify(resp));\n            setWorkingHour(resp.value.workingHour);\n\n            const profile = resp.value.companyProfile;\n            const hours = resp.value.workingHour;\n            setCompanyProfile(profile);\n            console.log('..hours..' + JSON.stringify(hours));\n\n            if (profile !== null) {\n                setValues({\n                    companyName: profile.companyName,\n                    phone: profile.phone,\n                    website: profile.website,\n                    openHour0: getWorkingHourValue(hours, 0, 1),\n                    closeHour0: getWorkingHourValue(hours, 0, 2),\n                    close0: getWorkingHourValue(hours, 0, 2) === true ? true : false,\n\n                    openHour1: getWorkingHourValue(hours, 1, 1),\n                    closeHour1: getWorkingHourValue(hours, 1, 2),\n                    close1: getWorkingHourValue(hours, 1, 3) === true ? true : false,\n\n                    openHour2: getWorkingHourValue(hours, 2, 1),\n                    closeHour2: getWorkingHourValue(hours, 2, 2),\n                    close2: getWorkingHourValue(hours, 2, 3) === true ? true : false,\n\n                    openHour3: getWorkingHourValue(hours, 3, 1),\n                    closeHour3: getWorkingHourValue(hours, 3, 2),\n                    close3: getWorkingHourValue(hours, 3, 3) === true ? true : false,\n\n                    openHour4: getWorkingHourValue(hours, 4, 1),\n                    closeHour4: getWorkingHourValue(hours, 4, 2),\n                    close4: getWorkingHourValue(hours, 4, 3) === true ? true : false,\n\n                    openHour5: getWorkingHourValue(hours, 5, 1),\n                    closeHour5: getWorkingHourValue(hours, 5, 2),\n                    close5: getWorkingHourValue(hours, 5, 3) === true ? true : false,\n\n                    openHour6: getWorkingHourValue(hours, 6, 1),\n                    closeHour6: getWorkingHourValue(hours, 6, 2),\n                    close6: getWorkingHourValue(hours, 6, 3) === true ? true : false,\n                });\n\n            }\n        });\n\n    }, [dispatch]);\n\n\n\n    return (\n        <main>\n            <Header />\n            <div className=\"content\">\n                <Container>\n                    <Col md={12} sm={12} xs={12} style={{ marginTop: \"80px\" }}>\n\n                        <Form onSubmit={handleSubmit}>\n                            <Row>\n                                <Col md=\"6\">\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>Business Name:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"companyName\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.companyName}\n                                                    invalid={touched.companyName && errors.companyName}\n                                                />\n                                                <FormFeedback>{errors.companyName}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>Contact Phone:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"phone\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.phone}\n                                                    invalid={touched.phone && errors.phone}\n                                                />\n                                                <FormFeedback>{errors.phone}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={12}>\n                                            <FormGroup>\n                                                <Label>Website:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"website\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.website}\n                                                    invalid={touched.website && errors.website}\n                                                />\n                                                <FormFeedback>{errors.website}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n\n                                    </Row>\n                                </Col>\n                                <Col md=\"6\">\n                                    <Row>\n                                        <Col md={12}>\n                                            <Label>Business Hour</Label></Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ marginTop: \"40px\", textAlign: \"right\" }}>\n                                                <Label>Monday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n                                                <Label>Open:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour0\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour0}\n                                                    invalid={touched.openHour0 && errors.openHour0}\n                                                />\n                                                <FormFeedback>{errors.openHour0}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n                                                <Label>Close:</Label>\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour0\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour0}\n                                                    invalid={touched.closeHour0 && errors.closeHour0}\n                                                />\n                                                <FormFeedback>{errors.closeHour0}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ marginTop: \"40px\" }}>\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close0\"\n                                                        onChange={handleChange}\n                                                        value={values.close0}\n                                                        checked={values.close0}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close0 && errors.close0}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Tuesday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour1\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour1}\n                                                    invalid={touched.openHour1 && errors.openHour1}\n                                                />\n                                                <FormFeedback>{errors.openHour1}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour1\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour1}\n                                                    invalid={touched.closeHour1 && errors.closeHour1}\n                                                />\n                                                <FormFeedback>{errors.closeHour1}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close1\"\n                                                        onChange={handleChange}\n                                                        value={values.close1}\n                                                        checked={values.close1}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close1 && errors.close1}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Wednesday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour2\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour2}\n                                                    invalid={touched.openHour2 && errors.openHour2}\n                                                />\n                                                <FormFeedback>{errors.openHour2}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour2\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour2}\n                                                    invalid={touched.closeHour2 && errors.closeHour2}\n                                                />\n                                                <FormFeedback>{errors.closeHour2}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close2\"\n                                                        onChange={handleChange}\n                                                        value={values.close2}\n                                                        checked={values.close2}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close2 && errors.close2}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Thursday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour3\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour3}\n                                                    invalid={touched.openHour3 && errors.openHour3}\n                                                />\n                                                <FormFeedback>{errors.openHour3}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour3\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour3}\n                                                    invalid={touched.closeHour3 && errors.closeHour3}\n                                                />\n                                                <FormFeedback>{errors.closeHour3}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close3\"\n                                                        onChange={handleChange}\n                                                        value={values.close3}\n                                                        checked={values.close3}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close3 && errors.close3}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Friday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour4\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour4}\n                                                    invalid={touched.openHour4 && errors.openHour4}\n                                                />\n                                                <FormFeedback>{errors.openHour4}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour4\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour4}\n                                                    invalid={touched.closeHour4 && errors.closeHour4}\n                                                />\n                                                <FormFeedback>{errors.closeHour4}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close4\"\n                                                        onChange={handleChange}\n                                                        value={values.close4}\n                                                        checked={values.close4}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close4 && errors.close4}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Saturday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour5\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour5}\n                                                    invalid={touched.openHour5 && errors.openHour5}\n                                                />\n                                                <FormFeedback>{errors.openHour5}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour5\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour5}\n                                                    invalid={touched.closeHour5 && errors.closeHour5}\n                                                />\n                                                <FormFeedback>{errors.closeHour5}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close5\"\n                                                        onChange={handleChange}\n                                                        value={values.close5}\n                                                        checked={values.close5}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close5 && errors.close5}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col md={3}>\n\n                                            <FormGroup style={{ textAlign: \"right\" }}>\n                                                <Label>Sunday:</Label>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"openHour6\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.openHour6}\n                                                    invalid={touched.openHour6 && errors.openHour6}\n                                                />\n                                                <FormFeedback>{errors.openHour6}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n                                            <FormGroup>\n\n                                                <Input\n                                                    type=\"text\"\n                                                    name=\"closeHour6\"\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.closeHour6}\n                                                    invalid={touched.closeHour6 && errors.closeHour6}\n                                                />\n                                                <FormFeedback>{errors.closeHour6}</FormFeedback>\n                                            </FormGroup>\n                                        </Col>\n                                        <Col md={3}>\n\n                                            <FormGroup >\n                                                <Label check>\n                                                    <Input\n                                                        type=\"checkbox\"\n                                                        name=\"close6\"\n                                                        onChange={handleChange}\n                                                        value={values.close6}\n                                                        checked={values.close6}\n                                                        onBlur={handleBlur}\n                                                        invalid={touched.close6 && errors.close6}\n                                                    />\n                                                    We're Close\n                                                </Label></FormGroup>\n                                        </Col>\n                                    </Row>\n\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col>\n                                    <Button block disabled={!isValid || isSubmitting}>\n                                        {isSubmitting ? <Spinner size={'sm'} /> : 'Confirm'}\n                                    </Button>\n\n\n                                </Col>\n                                <Col>\n\n                                </Col>\n\n\n                            </Row>\n\n\n                        </Form>\n                    </Col>\n                </Container>\n            </div>\n            <Footer />\n        </main>\n    );\n};\nexport default BusinessProfile;","import React from 'react';\n\nexport const HomeIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"></path></svg>\n\nexport const MinusCircleIcon = ({width}) => <svg width={width} fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const PlusCircleIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const CartIcon = ({width}) => <svg width={width}  fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\"></path></svg>\n\nexport const TrashIcon = ({width}) => <svg width={width} fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" fillRule=\"evenodd\"></path></svg>\n\nexport const GitHubIcon = ({width}) => <svg width={width} viewBox=\"0 0 16 16\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>","import React from 'react';\n\nimport { useCart } from '../../hooks/useCart';\nimport { formatNumber } from '../../../utils/utils';\nimport { PlusCircleIcon, MinusCircleIcon, TrashIcon } from '../../components/icons';\n\nconst CartItem = ({ product }) => {\n\n    const { increase, decrease, removeProduct } = useCart();\n\n    return (\n        <div className=\"row no-gutters py-2\">\n            <div className=\"col-sm-2 p-2\">\n                <img\n                    alt={product.name}\n                    style={{ margin: \"0 auto\", maxHeight: \"50px\" }}\n                    src={product.photo} className=\"img-fluid d-block\" />\n            </div>\n            <div className=\"col-sm-4 p-2\">\n                <h5 className=\"mb-1\">{product.name}</h5>\n                <p className=\"mb-1\">Price: {formatNumber(product.price)} </p>\n\n            </div>\n            <div className=\"col-sm-2 p-2 text-center \">\n                <p className=\"mb-0\">Qty: {product.quantity}</p>\n            </div>\n            <div className=\"col-sm-4 p-2 text-right\">\n                <button\n                    onClick={() => increase(product)}\n                    className=\"btn btn-primary btn-sm mr-2 mb-1\">\n                    <PlusCircleIcon width={\"20px\"} />\n                </button>\n\n                {\n                    product.quantity > 1 &&\n                    <button\n                        onClick={() => decrease(product)}\n                        className=\"btn btn-danger btn-sm mb-1\">\n                        <MinusCircleIcon width={\"20px\"} />\n                    </button>\n                }\n\n                {\n                    product.quantity === 1 &&\n                    <button\n                        onClick={() => removeProduct(product)}\n                        className=\"btn btn-danger btn-sm mb-1\">\n                        <TrashIcon width={\"20px\"} />\n                    </button>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default CartItem;","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\n\nimport CartItem from './CartItem';\nimport { useCart } from '../../hooks/useCart';\nimport styles from './CartProducts.module.scss';\n\nconst CartProducts = () => {\n\n    const { cartItems } = useCart();\n\n    return ( \n        <div className={styles.p__container}>\n            <div className=\"card card-body border-0\">\n\n                {\n                    cartItems.map(product =>  <CartItem key={product.id} product={product}/>)\n                }\n\n            </div>\n        </div>\n\n     );\n}\n \nexport default CartProducts;","import React from 'react';\nimport Header from '../pages/newHome/Header';\nimport Footer from '../pages/newHome/Footer';\n\n// import { Helmet } from 'react-helmet-async';\n\n// import 'bootswatch/dist/lux/bootstrap.css'\n\nconst Layout = ({ title, description, children }) => {\n    return (\n        <>\n            {/* <Helmet>\n                <title>{title ? title + \" - React Boilerplate\" : \"React.js Boilerplate\"}</title>\n                <meta name=\"description\" content={description || \"React.js Boilerplate\"} />\n            </Helmet> */}\n            <Header />\n            <main className=\"container\">\n                {children}\n            </main>\n            <Footer />\n        </>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CartProducts from './CartProducts';\nimport Layout from '../../components/Layout';\nimport { useCart } from '../../hooks/useCart';\nimport { formatNumber } from '../../../utils/utils';\n\nconst Cart = () => {\n\n    const { total, cartItems, itemCount, clearCart, checkout, handleCheckout } = useCart();\n\n    return cartItems === null || cartItems === undefined ? (\n        <>\n            <div className=\"p-3 text-center text-muted\">\n                Your cart is empty\n            </div>\n        </>\n    ) : (\n        <Layout title=\"Cart\" description=\"This is the Cart page\" >\n            <div >\n                <div className=\"text-center mt-5\">\n                    <h1>Cart</h1>\n                    <p>This is the Cart Page.</p>\n                </div>\n\n                <div className=\"row no-gutters justify-content-center\">\n                    <div className=\"col-sm-9 p-3\">\n                        {\n                            cartItems.length > 0 ?\n                                <CartProducts /> :\n                                <div className=\"p-3 text-center text-muted\">\n                                    Your cart is empty\n                                </div>\n                        }\n\n                        {checkout &&\n                            <div className=\"p-3 text-center text-success\">\n                                <p>Checkout successfull</p>\n                                <Link to=\"/\" className=\"btn btn-outline-success btn-sm\">BUY MORE</Link>\n                            </div>\n                        }\n                    </div>\n                    {\n                        cartItems.length > 0 &&\n                        <div className=\"col-sm-3 p-3\">\n                            <div className=\"card card-body\">\n                                <p className=\"mb-1\">Total Items</p>\n                                <h4 className=\" mb-3 txt-right\">{itemCount}</h4>\n                                <p className=\"mb-1\">Total Payment</p>\n                                <h3 className=\"m-0 txt-right\">{formatNumber(total)}</h3>\n                                <hr className=\"my-4\" />\n                                <div className=\"text-center\">\n                                    <button type=\"button\" className=\"btn btn-primary mb-2\" onClick={handleCheckout}>CHECKOUT</button>\n                                    <button type=\"button\" className=\"btn btn-outlineprimary btn-sm\" onClick={clearCart}>CLEAR</button>\n                                </div>\n\n                            </div>\n                        </div>\n                    }\n\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\nexport default Cart;","import { MapMarkerUrls } from '../../../constants';\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Button,\n    Row,\n    Col,\n    FormGroup,\n    Input,\n    Label,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { getBusinessProfile, saveMerchantConnection } from '../../../redux/actionCreators/adminActionCreators';\nimport { changePropertyColor, cancelShowBusinessInfo } from '../../../redux/actionCreators/appActionCreators';\nimport { useHistory } from 'react-router';\nimport { setPropertyRegistrationForm } from '../../../redux/actionCreators/registrationActionCreators';\nconst BusinessPortal = ({ match }) => {\n\n    // console.log('..match..' + JSON.stringify(match));\n    const propertyId = match.params.id;\n    const utilsData = useSelector((state) => state.utilsData);\n\n    const dispatch = useDispatch();\n    // const property = utilsData.selectedProperty;\n    // console.log('..property.. ' + JSON.stringify(property));\n    const user = useSelector((state) => state.auth.me);\n    const [companyProfile, setCompanyProfile] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [property, setProperty] = useState(null);\n\n    const getWorkingHourValue = (hours, dayOfWeek, index) => {\n        const item = hours.filter((hour) => {\n            return parseInt(hour.dayOfWeek) === dayOfWeek;\n\n        });\n        // console.log('..item..' + JSON.stringify(item));\n        if (item && item.length > 0) {\n            if (index === 1) return item[0].openHour;\n            if (index === 2) return item[0].closeHour;\n            if (index === 3) {\n                // console.log('..item[0].closed..' + item[0].closed);\n                return item[0].closed;\n            }\n        }\n        return '';\n    };\n    const [workingHour, setWorkingHour] = useState([]);\n    useEffect(() => {\n        // setLoading(true);\n        dispatch(getBusinessProfile({ id: propertyId })).then((resp) => {\n            console.log('..property ..info..' + JSON.stringify(resp.value));\n            setCompanyProfile(resp.value.companyProfile);\n            setWorkingHour(resp.value.workingHour);\n            setProperty(resp.value.property);\n            setLoading(false);\n\n        }\n\n        );\n        return () => { };\n    }, [dispatch]);\n\n    const disConnectToMerchant = () => {\n\n    }\n    const connectToMerchant = () => {\n\n        //check user whether login\n        if (user !== null && user !== undefined) {\n            //user already login, just connect them together\n            const jsonData = {\n                merchant_property_id: property.id\n            }\n            dispatch(saveMerchantConnection(jsonData)).then(resp => {\n                //need redraw the map\n                //how to pass redraw map ??\n            }).catch(error => {\n                console.log('...save connection error');\n            })\n        } else {\n            utilsData.connectToMerchantId = property.id;\n            console.log('..start to connect to merchant..' + property.id);\n            const blankAddress = {\n                \"postalCode\": \"\",\n                \"streetNumber\": \"\",\n                \"route\": \"\",\n                \"locality\": \"\",\n                \"city\": \"\",\n                \"country\": \"\",\n            };\n            dispatch(setPropertyRegistrationForm({\n                address: blankAddress,\n                active: true,\n            }));\n        }\n    }\n\n    return !loading && (\n        <Col md={12} sm={12} xs={12} className=\"overlay-form-container\">\n            <Link to={'/'}>\n                <img\n                    className={'logo-container'}\n                    src={'/assets/img/logo-white.png'}\n                    alt={'logo'}\n                />\n            </Link>\n\n            <Row style={{ width: \"100%\" }}>\n\n                <Col style={{ textAlign: \"left\" }}>\n                    {\n                        companyProfile && (\n                            <>\n\n                                <Row>\n                                    <Col><h1>{companyProfile.companyName}</h1></Col> </Row>\n                                <Row>   <Col><i className=\"fa-solid fa-address\"></i> {property.streetNumber + ' ' + property.route + ' ' + property.locality + ',' + property.city + ',' + property.postalCode} </Col> </Row>\n                                <Row>   <Col><i className=\"fa-solid fa-phone\"></i> {companyProfile.phone} </Col> </Row>\n                                <Row>   <Col><i className=\"fa-solid fa-globe\"></i> {companyProfile.website} </Col> </Row>\n                                {property.binding_email && property.binding_email !== null && property.binding_email !== 'null' ? <Row>   <Col><i className=\"fa-solid fa-envelope\"></i> {property.binding_email} </Col> </Row> : null}\n                                <Row>\n                                    <Col>Working Hours <hr /></Col>\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Monday:</Label>\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 0, 3) === true ?\n                                        <>       <Col md={6}>\n                                            <Label for=\"lblPropertyName\">We're Closed </Label>\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 0, 1)} - {getWorkingHourValue(workingHour, 0, 2)} </Label>\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Tuesday:</Label>\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 1, 3) === true ?\n                                        <>       <Col md={6}>\n                                            <Label for=\"lblPropertyName\">We're Closed </Label>\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 1, 1)} - {getWorkingHourValue(workingHour, 1, 2)} </Label>\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Wednesday:</Label>\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 2, 3) === true ?\n                                        <>       <Col md={6}>\n                                            <Label for=\"lblPropertyName\">We're Closed </Label>\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 2, 1)} - {getWorkingHourValue(workingHour, 2, 2)} </Label>\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Thursday:</Label>\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 3, 3) === true ?\n                                        <>       <Col md={6}>\n                                            <Label for=\"lblPropertyName\">We're Closed </Label>\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 3, 1)} - {getWorkingHourValue(workingHour, 3, 2)} </Label>\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Friday:</Label>\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 4, 3) === true ?\n                                        <>       <Col md={6}>\n                                            <Label for=\"lblPropertyName\">We're Closed </Label>\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 4, 1)} - {getWorkingHourValue(workingHour, 4, 2)} </Label>\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Saturday:</Label>\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 5, 3) === true ?\n                                        <>       <Col md={6}>\n                                            <Label for=\"lblPropertyName\">We're Closed </Label>\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 5, 1)} - {getWorkingHourValue(workingHour, 5, 2)} </Label>\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                                <Row>\n                                    <Col md={3}>\n                                        <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Sunday:</Label>\n                                    </Col>\n                                    {getWorkingHourValue(workingHour, 6, 3) == true ?\n                                        <>       <Col md={6}>\n                                            <Label for=\"lblPropertyName\">We're Closed </Label>\n                                        </Col>\n                                        </> :\n                                        <>\n                                            <Col md={6}>\n                                                <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 6, 1)} - {getWorkingHourValue(workingHour, 6, 2)} </Label>\n                                            </Col>\n                                        </>\n                                    }\n\n                                </Row>\n                            </>\n                        )\n                    }\n\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n\n                    {property.connected === \"1\" ?\n                        <Button\n                            className=\"mt-1 mb-5\"\n                            color={'success'}\n                            block\n                            onClick={() => disConnectToMerchant()}>\n                            DisConnect\n                        </Button> :\n                        <Button\n                            className=\"mt-1 mb-5\"\n                            color={'success'}\n                            block\n                            onClick={() => connectToMerchant()}>\n                            Connect\n                        </Button>\n                    }\n                </Col>\n                <Col>\n                    <Button\n                        className=\"mt-1 mb-5\"\n                        color={'danger'}\n                        block\n                        onClick={() => {\n                            // const data = {\n                            //     email: utilsData.emailForChangeColor,\n                            //     color: color\n                            // };\n                            utilsData.showBusinessInfo = false;\n                            dispatch(cancelShowBusinessInfo());\n                        }}>\n                        Cancel\n                    </Button>\n                </Col>\n\n\n            </Row>\n        </Col>\n    );\n};\nexport default BusinessPortal;","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Button,\n    Row,\n    Col,\n    FormGroup,\n    Label,\n    Form,\n    FormFeedback,\n    Spinner\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { getBusinessProfile, unSubscribeMerchant } from '../../../redux/actionCreators/adminActionCreators';\nimport { useHistory } from 'react-router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport TextArea from \"antd/lib/input/TextArea\";\nconst bindingSchema = Yup.object().shape({\n    content: Yup.string().required('This field is required'),\n});\n\nconst UnSubscribe = ({ match }) => {\n\n    // console.log('..match..' + JSON.stringify(match));\n    const history = useHistory();\n    const queryPage = history.location.search;\n    const email = queryPage.split('=')[1]\n    // console.log('..queryPage..' + queryPage);\n    const propertyId = match.params.id;\n    const utilsData = useSelector((state) => state.utilsData);\n\n    const dispatch = useDispatch();\n    // const property = utilsData.selectedProperty;\n    // console.log('..property.. ' + JSON.stringify(property));\n    const user = useSelector((state) => state.auth.me);\n    const [companyProfile, setCompanyProfile] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [property, setProperty] = useState(null);\n    const [unscribed, setUnscribed] = useState(false);\n\n    const getWorkingHourValue = (hours, dayOfWeek, index) => {\n        const item = hours.filter((hour) => {\n            return parseInt(hour.dayOfWeek) === dayOfWeek;\n\n        });\n        // console.log('..item..' + JSON.stringify(item));\n        if (item && item.length > 0) {\n            if (index === 1) return item[0].openHour;\n            if (index === 2) return item[0].closeHour;\n            if (index === 3) {\n                // console.log('..item[0].closed..' + item[0].closed);\n                return item[0].closed;\n            }\n        }\n        return '';\n    };\n    const [workingHour, setWorkingHour] = useState([]);\n    useEffect(() => {\n        // setLoading(true);\n        dispatch(getBusinessProfile({ id: propertyId })).then((resp) => {\n            console.log('..property ..info..' + JSON.stringify(resp.value));\n            setCompanyProfile(resp.value.companyProfile);\n            setWorkingHour(resp.value.workingHour);\n            setProperty(resp.value.property);\n            setLoading(false);\n\n        }\n\n        );\n        return () => { };\n    }, [dispatch]);\n\n\n    const formik = useFormik({\n        initialValues: {\n            content: ''\n        },\n        isInitialValid: false,\n        validationSchema: bindingSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n            const jsonData = {\n                propertyId: propertyId,\n                email: email,\n                message: values.content\n            }\n            dispatch(unSubscribeMerchant(jsonData)).then(resp => {\n                console.log('..unsubscribe return..' + JSON.stringify(resp));\n                setUnscribed(true);\n            }).catch(error => {\n                console.log('..unscribe error..' + JSON.stringify(error));\n            })\n\n        }\n    });\n    const {\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        isValid,\n        isSubmitting,\n        setFieldValue,\n        values,\n    } = formik;\n\n    const [current, setCurrent] = useState(0);\n    const limitWords = (e) => {\n        const currentLength = e.target.value.length;\n        setCurrent(currentLength)\n    }\n    return !loading && (\n        <Col md={12} sm={12} xs={12} className=\"overlay-form-container\">\n            <Link to={'/'}>\n                <img\n                    className={'logo-container'}\n                    src={'/assets/img/logo-white.png'}\n                    alt={'logo'}\n                />\n            </Link>\n            {unscribed ? <Row>\n                <Col> UnSubscribe Successful! Sorry to see you go!\n                </Col>\n            </Row> :\n                <Form onSubmit={handleSubmit} style={{ width: \"80%\" }}>\n                    <Row md={12} sm={12} xs={12} style={{ width: \"100%\" }}>\n\n                        <Col style={{ textAlign: \"left\" }}>\n                            {\n                                companyProfile && (\n                                    <>\n\n                                        <Row>\n                                            <Col><h1>{companyProfile.companyName}</h1></Col> </Row>\n                                        <Row>   <Col><i className=\"fa-solid fa-address\"></i> {property.streetNumber + ' ' + property.route + ' ' + property.locality + ',' + property.city + ',' + property.postalCode} </Col> </Row>\n                                        <Row>   <Col><i className=\"fa-solid fa-phone\"></i> {companyProfile.phone} </Col> </Row>\n                                        <Row>   <Col><i className=\"fa-solid fa-globe\"></i> {companyProfile.website} </Col> </Row>\n                                        {property.binding_email && property.binding_email !== null && property.binding_email !== 'null' ? <Row>   <Col><i className=\"fa-solid fa-envelope\"></i> {property.binding_email} </Col> </Row> : null}\n                                        <Row>\n                                            <Col>Working Hours <hr /></Col>\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Monday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 0, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\">We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 0, 1)} - {getWorkingHourValue(workingHour, 0, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Tuesday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 1, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\">We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 1, 1)} - {getWorkingHourValue(workingHour, 1, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Wednesday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 2, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\">We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 2, 1)} - {getWorkingHourValue(workingHour, 2, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Thursday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 3, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\">We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 3, 1)} - {getWorkingHourValue(workingHour, 3, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Friday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 4, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\">We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 4, 1)} - {getWorkingHourValue(workingHour, 4, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Saturday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 5, 3) === true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\">We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 5, 1)} - {getWorkingHourValue(workingHour, 5, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                        <Row>\n                                            <Col md={3}>\n                                                <Label style={{ textAlign: \"right\" }} for=\"lblPropertyName\">Sunday:</Label>\n                                            </Col>\n                                            {getWorkingHourValue(workingHour, 6, 3) == true ?\n                                                <>       <Col md={6}>\n                                                    <Label for=\"lblPropertyName\">We're Closed </Label>\n                                                </Col>\n                                                </> :\n                                                <>\n                                                    <Col md={6}>\n                                                        <Label for=\"lblPropertyName\"> {getWorkingHourValue(workingHour, 6, 1)} - {getWorkingHourValue(workingHour, 6, 2)} </Label>\n                                                    </Col>\n                                                </>\n                                            }\n\n                                        </Row>\n                                    </>\n                                )\n                            }\n\n                        </Col>\n                        <Col style={{ textAlign: \"left\" }}>\n                            <Label for=\"lblPropertyName\">Please let us know why you want to disconnect:</Label>\n                            <FormGroup class=\"wrapper\">\n                                <TextArea\n                                    maxLength={1000}\n                                    rows={5}\n                                    type=\"text\"\n                                    name=\"content\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    onKeyUp={(e) => limitWords(e)}\n                                    value={values.content}\n                                    invalid={touched.content && errors.content}\n                                />\n                                <div id=\"the-count\">\n                                    <span id=\"current\">{current}</span>\n                                    <span id=\"maximum\">/ 1000</span>\n                                </div>\n                                <FormFeedback>{errors.content}</FormFeedback>\n                            </FormGroup>\n                            <Button block disabled={!isValid || isSubmitting}>\n                                {isSubmitting ? <Spinner size={'sm'} /> : 'DisConnect'}\n                            </Button>\n\n                        </Col>\n                    </Row>\n\n                </Form>\n            }\n        </Col>\n    );\n};\nexport default UnSubscribe;","import React, { lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport '../styles/site/app.scss';\n// import {isAdmin} from './/utils/authUtils';\n\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\nconst Logout = lazy(() => import(\"./pages/Logout\"));\n\n// const User = React.lazy(() => import('../admin/views/users/User'));\n// const UserEdit = React.lazy(() => import('../admin/views/users/UserEdit'));\n// const Users = React.lazy(() => import('../admin/views/users/Users'));\n\n// const City = React.lazy(() => import('../admin/views/cities/City'));\n// const CityEdit = React.lazy(() => import('../admin/views/cities/CityEdit'));\n// const Cities = React.lazy(() => import('../admin/views/cities/Cities'));\n\n\n// const Properties = React.lazy(() => import('../admin/views/properties/Properties'));\n// const Property = React.lazy(() => import('../admin/views/properties/Property'));\n// const PropertyEdit = React.lazy(() =>\n//     import('../admin/views/properties/PropertyEdit'),\n// );\n\n// const PropertyFileUpload = React.lazy(()=>import('../admin/views/properties/file-upload'));\n\nimport AboutUs from './pages/newHome/AboutUs';\nimport ContactUs from './pages/newHome/ContactUs';\nimport HowItWorks from './pages/newHome/HowItWorks';\nimport NewsRelease from './pages/newHome/NewsRelease';\nimport OurPromise from './pages/newHome/OurPromise';\nimport OurStory from './pages/newHome/OurStory';\nimport OurVideo from './pages/newHome/OurVideo';\nimport Patents from './pages/newHome/Patents';\nimport PrivacyPolicy from './pages/newHome/PrivacyPolicy';\nimport TermsOfUse from './pages/newHome/TermsOfUse';\n\nimport EditProperty from './pages/profile/EditProperty';\nimport MobileAccountVerification from './pages/mobile/MobileAccountVerification';\nimport ChangeEMail from './pages/newHome/ChangeEMail';\nimport ChangeMobile from './pages/newHome/ChangeMobile';\nimport ChangePassword from \"./pages/newHome/ChangePassword\";\nimport MemberShip from \"./pages/newHome/MemberShip\";\nimport MapProvider from '../common/contexts/MapContext/MapProvider';\nimport Checkout from \"./pages/newHome/Checkout\";\nimport CheckoutSuccess from './pages/newHome/CheckoutSuccess';\nimport CheckoutFailed from './pages/newHome/CheckoutFailed';\nimport BusinessProfile from \"./pages/newHome/BusinessProfile\";\nimport Cart from \"./pages/cart\";\nimport BusinessPortal from \"./pages/newHome/BusinessPortal\";\nimport UnSubscribe from \"./pages/newHome/UnSubscribe\";\nconst Site = () => {\n  return (\n    <Switch>\n      <Route component={Login} path={`/login`} exact />\n      <Route component={Logout} path={`/logout`} exact />\n\n      <Route\n        component={MobileAccountVerification}\n        path={`/mobile-verify`}\n        exact\n      />\n      <Route\n        component={(props) => (\n          <MapProvider>\n            <EditProperty {...props} />\n          </MapProvider>\n        )}\n        path={`/edit-property`}\n        exact\n      />\n\n\n      <Route exact path=\"/cart\" component={Cart} />\n      <Route exact path=\"/change-email\" component={ChangeEMail} />\n      <Route exact path=\"/pricing\" component={MemberShip} />\n      <Route exact path=\"/checkout/:id\" component={Checkout} />\n      <Route exact path=\"/change-mobile\" component={ChangeMobile} />\n      <Route exact path=\"/change-password\" component={ChangePassword} />\n\n      <Route exact path=\"/checkout_success\" component={CheckoutSuccess} />\n      <Route exact path=\"/checkout_failed\" component={CheckoutFailed} />\n      <Route exact path=\"/business-profile\" component={BusinessProfile} />\n      <Route exact path=\"/business-portal/:id\" component={BusinessPortal} />\n      <Route exact path=\"/un-subscribe/:id\" component={UnSubscribe} />\n\n\n      <Route exact path=\"/about-us\" component={AboutUs} />\n      <Route exact path=\"/how-it-works\" component={HowItWorks} />\n      <Route exact path=\"/patents\" component={Patents} />\n      <Route exact path=\"/contact-us\" component={ContactUs} />\n      {/* <Route exact path=\"/app-introduction\" component={AppLanding} /> */}\n      <Route exact path=\"/our-story\" component={OurStory} />\n      <Route exact path=\"/our-promise\" component={OurPromise} />\n      <Route exact path=\"/news-release\" component={NewsRelease} />\n      <Route exact path=\"/our-video\" component={OurVideo} />\n      <Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />\n      <Route exact path=\"/terms-of-use\" component={TermsOfUse} />\n\n      {/* <Route render={()=>{\n                isAdmin() ? <Component component={Site} path=\"/\" />: <Redirect to=\"/login\" />\n              }} /> */}\n\n      <Route component={Home} path={`/`} />\n\n\n    </Switch>\n  );\n};\n\nexport default Site;\n","import moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Collapse,\n    FormFeedback,\n    Input,\n    InputGroup,\n    Label,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport { resendEmailVerificationCode } from '../../../redux/actionCreators/appActionCreators';\nimport { verifyAccount } from '../../../redux/actionCreators/registrationActionCreators';\nimport { toastr } from 'react-redux-toastr';\n\nconst EmailVerification = ({ currentUser }) => {\n    const [error, setError] = useState(null);\n    const [verificationCode, setVerificationCode] = useState();\n    const [remainingTime, setRemainingTime] = useState(0);\n\n    const [resendVisible, setResendVisible] = useState(false);\n    const [pendingResend, setPendingResend] = useState(false);\n    const [pendingVerify, setPendingVerify] = useState(false);\n\n    const dispatch = useDispatch();\n    let user = useSelector((state) => state.auth.user);\n    const registrationUser = useSelector((state) => state.registerForm.user);\n    if (currentUser === null || currentUser === undefined) {\n        if (user === null || user === undefined) {\n            user = registrationUser;\n        }\n    } else {\n        user = currentUser;\n    }\n\n    // console.log('EmailVerification...'+ JSON.stringify(user));\n    const onClickVerify = useCallback(() => {\n        setPendingVerify(true);\n        dispatch(\n            verifyAccount({\n                userId: user.mobileNumber,\n                emailVerificationCode: verificationCode,\n            }),\n        )\n            .then(({ value: { user } }) => {\n                if (!user.emailVerified) setError('Invalid Verification Code');\n                else {\n                    setError(null);\n                    if (currentUser != null || currentUser != undefined) {\n                        if (window.ReactNativeWebView) {\n                            window.ReactNativeWebView.postMessage(\n                                JSON.stringify({ result: 'verified' }),\n                            );\n                        }\n                        window.location.reload();\n\n                    }\n                }\n            })\n            .finally(() => {\n                setPendingVerify(false);\n            });\n    }, [dispatch, verificationCode, user]);\n\n    const onClickResendVerificationCode = useCallback(() => {\n        setPendingResend(true);\n\n        dispatch(resendEmailVerificationCode()).finally(() => {\n            setPendingResend(false);\n        });\n    }, [dispatch]);\n\n    useEffect(() => {\n        const calculateRemainingTime = () => {\n            if (!user) return;\n\n            const lastTimeAvail = moment(\n                moment(user.lastEmailVerificationTime)\n                    .add(1, 'minutes')\n                    .format(),\n            );\n            const now = moment(moment().format());\n\n            const diff = moment.duration(lastTimeAvail.diff(now)).asSeconds();\n\n            if (diff < 0 || Number.isNaN(diff)) {\n                clearInterval(handle);\n                setRemainingTime(0);\n            } else {\n                setRemainingTime(diff);\n            }\n        };\n\n        const handle = setInterval(calculateRemainingTime, 1000);\n\n        return () => {\n            clearInterval(handle);\n        };\n    }, [user]);\n\n    const userHasEmail = user.username !== user.email;\n\n    if (!userHasEmail) return null;\n\n    if (user.emailVerified)\n        return (\n            <div className=\"mb-4 d-flex flex-row align-items-center\">\n                <i className=\"fa fa-3x fa-check text-success\" /> Email Verified\n            </div>\n        );\n\n    return (\n        <div className=\"mb-4\">\n            <Label for=\"verificationCode\">Email Verification</Label>\n\n            <InputGroup className=\"mb-3\">\n                <Input\n                    type=\"text\"\n                    size={'lg'}\n                    name=\"verificationCode\"\n                    invalid={!!error}\n                    placeholder=\"Enter verification code sent to your email address...\"\n                    onChange={(e) => setVerificationCode(e.currentTarget.value)}\n                />\n                <FormFeedback>{error}</FormFeedback>\n            </InputGroup>\n\n            <Row noGutters className=\"mt-2 mb-2 justify-content-end\">\n                <Button\n                    className=\"btn-no-focus\"\n                    color={'link'}\n                    tag={'a'}\n                    onClick={() => setResendVisible(!resendVisible)}>\n                    Did not Receive Email\n                </Button>\n\n                <Button\n                    className=\"btn-no-focus\"\n                    onClick={onClickVerify}\n                    color={pendingVerify ? 'link' : 'primary'}>\n                    {pendingVerify ? <Spinner size=\"sm\" /> : 'Verify Email'}\n                </Button>\n            </Row>\n\n            <Collapse isOpen={resendVisible}>\n                <Row noGutters className=\"justify-content-end\">\n                    <Button\n                        className=\"btn-no-focus\"\n                        size={'lg'}\n                        disabled={remainingTime !== 0}\n                        color={\n                            pendingResend\n                                ? 'link'\n                                : remainingTime !== 0\n                                    ? 'danger'\n                                    : 'success'\n                        }\n                        onClick={onClickResendVerificationCode}>\n                        {pendingResend ? (\n                            <Spinner size=\"sm\" />\n                        ) : (\n                            <>\n                                Resend Verification Code{' '}\n                                {remainingTime !== 0 && (\n                                    <>\n                                        {moment()\n                                            .startOf('day')\n                                            .seconds(remainingTime)\n                                            .format('mm:ss')}\n                                    </>\n                                )}\n                            </>\n                        )}\n                    </Button>\n                </Row>\n            </Collapse>\n        </div>\n    );\n};\n\nexport default EmailVerification;\n","import moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    Button,\n    Collapse,\n    FormFeedback,\n    Input,\n    InputGroup,\n    Label,\n    Row,\n    Spinner,\n} from 'reactstrap';\nimport { resendMobileVerificationCode } from '../../../redux/actionCreators/appActionCreators';\nimport { verifyAccount } from '../../../redux/actionCreators/registrationActionCreators';\n\nconst MobileVerification = ({ currentUser }) => {\n    const [error, setError] = useState(null);\n    const [verificationCode, setVerificationCode] = useState();\n    const [remainingTime, setRemainingTime] = useState(0);\n\n    const [resendVisible, setResendVisible] = useState(false);\n    const [pendingResend, setPendingResend] = useState(false);\n    const [pendingVerify, setPendingVerify] = useState(false);\n\n    const dispatch = useDispatch();\n\n    let user = useSelector((state) => state.auth.user);\n    const registrationUser = useSelector((state) => state.registerForm.user);\n    if (currentUser === null || currentUser === undefined) {\n        if (user === null || user === undefined) {\n            user = registrationUser;\n        }\n    } else {\n        user = currentUser;\n    }\n\n    const onClickVerify = useCallback(() => {\n        setPendingVerify(true);\n        dispatch(\n            verifyAccount({\n                userId: user.mobileNumber,\n                mobileVerificationCode: verificationCode,\n            }),\n        )\n            .then(({ value: { user } }) => {\n                if (!user.mobileVerified) setError('Invalid Verification Code');\n                else {\n                    setError(null);\n                    console.log('mobile verfied...' + JSON.stringify(user));\n                    if (currentUser != null || currentUser != undefined) {\n                        window.location.reload();\n                    }\n                }\n            })\n            .finally(() => {\n                setPendingVerify(false);\n            });\n    }, [dispatch, verificationCode, user]);\n\n    const onClickResendVerificationCode = useCallback(() => {\n        setPendingResend(true);\n\n        dispatch(resendMobileVerificationCode()).finally(() => {\n            setPendingResend(false);\n        });\n    }, [dispatch]);\n\n    useEffect(() => {\n        const calculateRemainingTime = () => {\n            if (!user) return;\n\n            const lastTimeAvail = moment(\n                moment(user.lastMobileVerificationTime)\n                    .add(10, 'minutes')\n                    .format(),\n            );\n            const now = moment(moment().format());\n\n            const diff = moment.duration(lastTimeAvail.diff(now)).asSeconds();\n\n            if (diff < 0 || Number.isNaN(diff)) {\n                clearInterval(handle);\n                setRemainingTime(0);\n            } else {\n                setRemainingTime(diff);\n            }\n        };\n\n        const handle = setInterval(calculateRemainingTime, 1000);\n\n        return () => {\n            clearInterval(handle);\n        };\n    }, [user]);\n\n    if (user.mobileVerified)\n        return (\n            <div className=\"mb-4 d-flex flex-row align-items-center\">\n                <i className=\"fa fa-3x fa-check text-success\" /> Mobile Number\n                Verified\n            </div>\n        );\n\n    return (\n        <div className=\"mb-4\">\n            <Label for=\"verificationCode\">Mobile Verification</Label>\n\n            <InputGroup className=\"mb-3\">\n                <Input\n                    type=\"text\"\n                    size={'lg'}\n                    name=\"verificationCode\"\n                    invalid={!!error}\n                    placeholder=\"Enter verification code sent to your mobile...\"\n                    onChange={(e) => setVerificationCode(e.currentTarget.value)}\n                />\n                <FormFeedback>{error}</FormFeedback>\n            </InputGroup>\n\n            <Row noGutters className=\"mt-2 mb-2 justify-content-end\">\n                <Button\n                    className=\"btn-no-focus\"\n                    color={'link'}\n                    tag={'a'}\n                    onClick={() => setResendVisible(!resendVisible)}>\n                    Did not Receive SMS\n                </Button>\n\n                <Button\n                    className=\"btn-no-focus\"\n                    onClick={onClickVerify}\n                    color={pendingVerify ? 'link' : 'primary'}>\n                    {pendingVerify ? <Spinner size=\"sm\" /> : 'Verify Mobile'}\n                </Button>\n            </Row>\n\n            <Collapse isOpen={resendVisible}>\n                <Row noGutters className=\"justify-content-end\">\n                    <Button\n                        className=\"btn-no-focus\"\n                        size={'lg'}\n                        disabled={remainingTime !== 0}\n                        color={\n                            pendingResend\n                                ? 'link'\n                                : remainingTime !== 0\n                                    ? 'danger'\n                                    : 'success'\n                        }\n                        onClick={onClickResendVerificationCode}>\n                        {pendingResend ? (\n                            <Spinner size=\"sm\" />\n                        ) : (\n                            <>\n                                Resend Verification Code{' '}\n                                {remainingTime !== 0 && (\n                                    <>\n                                        {moment()\n                                            .startOf('day')\n                                            .seconds(remainingTime)\n                                            .format('mm:ss')}\n                                    </>\n                                )}\n                            </>\n                        )}\n                    </Button>\n                </Row>\n            </Collapse>\n        </div>\n    );\n};\n\nexport default MobileVerification;\n","import React, { useState } from \"react\";\nimport { NavLink as ReactRouterLink } from \"react-router-dom\";\nimport {\n    Collapse,\n    Nav,\n    Navbar,\n    NavbarToggler,\n    NavItem,\n    NavLink,\n} from 'reactstrap';\n\nconst Footer = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const collapse = () => setIsOpen(false);\n\n    return (\n        <Navbar className=\"footer fixed-bottom\" color=\"dark\" dark expand=\"md\">\n            <Collapse isOpen={isOpen} navbar>\n                <Navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/our-story\">\n                                Our Story\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/our-promise\">\n                                Our Promise\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/contact-us\">\n                                Contact us\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/news-release\">\n                                News Release\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/our-video\">\n                                Our Video\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/about-us\">\n                                About AlphCMap\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                    <Nav className=\"ml-auto mr-2\" navbar>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/privacy-policy\">\n                                Privacy Policy\n                            </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                tag={ReactRouterLink}\n                                onClick={collapse}\n                                to=\"/terms-of-use\">\n                                Terms of Use\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </Navbar>\n            </Collapse>\n            <NavbarToggler onClick={toggle} tag={'div'}>\n                <i className=\"fa fa-bars\" />\n            </NavbarToggler>\n        </Navbar>\n    );\n};\n\nexport default Footer;\n","import { SERVICE_URL, PARTNER_TOKEN } from '../constants';\n\nexport const reverseGeocodePoint = ({ latitude, longitude }) => {\n    return fetch(`${SERVICE_URL}/public/geocode-point?tenant=${PARTNER_TOKEN}`, {\n        body: JSON.stringify({ latitude, longitude }),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        method: 'POST',\n    }).then((r) => r.json());\n};\n\nexport const geocodeAddress = ({ address }) => {\n    return fetch(`${SERVICE_URL}/public/geocode-address?tenant=${PARTNER_TOKEN}`, {\n        body: JSON.stringify({ address }),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        method: 'POST',\n    }).then((r) => r.json());\n};\n\nexport const generateEmail = ({\n    streetNumber,\n    route,\n    locality,\n    city,\n    country,\n    postalCode,\n    longitude,\n    latitude,\n    unitNo,\n\n    lotNo,\n    plotNo,\n    region,\n    province,\n}) => {\n    let components = [streetNumber, route, locality, city, country];\n\n    if (lotNo && plotNo) {\n        components = [\n            streetNumber,\n            route,\n            locality,\n            `lot${lotNo}`,\n            `plot${plotNo}`,\n            region,\n            province,\n            city,\n            country,\n            postalCode,\n        ].filter((i) => i);\n    }\n\n    if (unitNo) {\n        components = [unitNo, ...components];\n    }\n\n    console.log('..components..' + JSON.stringify(components));\n\n    if (components.some((value) => !value)) {\n        return `Lati${latitude}_Long${longitude}`;\n    }\n\n    return components\n        .map((c) => (c ? c.replace(/[ ]/g, '-') : c))\n        .join('-')\n        .toLowerCase();\n};\n"],"names":["el","document","querySelector","ReactDOM","className","value","name","options","invalid","setFieldValue","setFieldTouched","rest","classNames","push","type","country","containerClass","join","onChange","onBlur","MapContext","createContext","Provider","Consumer","MapProvider","state","map","setMap","setState","disabled","setDisabled","clearContext","children","this","props","Component","defaultProps","propertySchema","Yup","shape","primaryAddress","required","oneOf","addressType","when","is","hightRiseOrCommercial","then","settlementType","unitNo","propertyName","additionalPropertySchema","Header","Container","Row","Col","href","target","Footer","email","phone","message","useState","alert","setAlert","dispatch","useDispatch","setName","setEmail","setPhone","setMessage","loading","setLoading","Alert","color","isOpen","toggle","Form","onSubmit","e","preventDefault","data","undefined","match","length","toastr","console","log","sendContactForm","resp","JSON","stringify","success","finally","InputGroup","Input","placeholder","autoComplete","id","rows","Button","outline","block","md","lg","CardBody","noGutters","sm","size","offset","src","alt","rel","location","useLocation","pathname","history","useHistory","setIsOpen","useEffect","useCallback","Modal","centered","backdrop","onClosed","ModalHeader","ModalBody","width","height","url","mapboxgl","process","mapContainer","useRef","context","useContext","window","google","maps","Map","current","center","lat","lng","zoom","mapTypeControl","mapTypeControlOptions","position","ControlPosition","LEFT_BOTTOM","mapTypeIds","MapTypeId","SATELLITE","ROADMAP","fullscreenControl","initializeMap","MapLegend","ref","searchText","setSearchText","searching","setSearching","currentUser","useSelector","auth","me","primaryHolder","propertyId","property","Marker","draggable","marker","formik","useFormik","initialValues","rural","totalFloors","totalUnitsEachFloor","postalCode","streetNumber","route","locality","lotNo","plotNo","region","province","city","validationSchema","values","setSubmitting","saveUserProperty","ReactNativeWebView","postMessage","result","setTimeout","handleChange","handleBlurOrig","handleBlur","handleSubmit","errors","touched","isValid","isSubmitting","setValues","generateEmail","geocodeAddress","address","response","latitude","longitude","changeMarkerPosition","geocode","setPosition","reverseGeocodePoint","Object","keys","forEach","i","some","getUserProperty","panTo","addListener","latLng","handle","event","clearListeners","removeListener","onSubmitSearchText","stopPropagation","trim","Card","CardHeader","xs","style","bsSize","currentTarget","onClick","FormGroup","Label","htmlFor","minWidth","FormFeedback","tag","for","check","checked","Collapse","inValidProperty","Spinner","CardFooter","marginTop","registrationUser","registerForm","user","userHasEmail","username","emailVerified","mobileVerified","resetRegistrationForm","action","EmailVerification","MobileVerification","eMailAddress","eMailAddressSelected","setEMailAddressSelected","updateAccount","res","resendEmailVerificationCode","catch","error","statusCode","mobileNumber","mobileNumberSelected","setMobileNumberSelected","resendMobileVerificationCode","MobileInput","password","min","max","passwordConfirmation","changePassword","productId","params","pathInfo","split","productInfo","setProductInfo","getState","token","jwt","stripeUrl","STRIPE_URL","ADMIN_FETCH_PRODDUCT_DETAIL","payload","fetch","headers","Accept","Authorization","method","r","json","responseData","Promise","reject","fetchProductDetails","Checkout","STRIPE_CHECKOUT_SESSION","body","stripePriceId","stripePlanId","isSubscription","productName","title","createStripeSession","replace","description","price","CartContext","storage","localStorage","getItem","parse","useCart","cartItems","sumItems","checkout","ctx","bindingSchema","companyName","utilsData","domain","search","companyProfile","setCompanyProfile","getWorkingHourValue","hours","dayOfWeek","index","item","filter","hour","parseInt","openHour","closeHour","closed","setWorkingHour","addProduct","increase","website","isInitialValid","postData","profileId","property_id","saveBusinessProfile","product","jsonData","users_id","products_id","saveShoppingCart","addProductToCard","getBusinessProfile","workingHour","profile","openHour0","closeHour0","close0","openHour1","closeHour1","close1","openHour2","closeHour2","close2","openHour3","closeHour3","close3","openHour4","closeHour4","close4","openHour5","closeHour5","close5","openHour6","closeHour6","close6","textAlign","MinusCircleIcon","fill","viewBox","d","clipRule","fillRule","PlusCircleIcon","TrashIcon","decrease","removeProduct","margin","maxHeight","photo","formatNumber","quantity","styles","total","itemCount","clearCart","handleCheckout","to","setProperty","binding_email","connected","merchant_property_id","saveMerchantConnection","connectToMerchantId","setPropertyRegistrationForm","active","connectToMerchant","showBusinessInfo","cancelShowBusinessInfo","content","unscribed","setUnscribed","unSubscribeMerchant","setCurrent","class","TextArea","maxLength","onKeyUp","currentLength","limitWords","Home","lazy","Login","Logout","component","path","exact","MobileAccountVerification","Cart","ChangeEMail","MemberShip","ChangeMobile","ChangePassword","CheckoutSuccess","CheckoutFailed","BusinessProfile","BusinessPortal","UnSubscribe","AboutUs","HowItWorks","Patents","ContactUs","OurStory","OurPromise","NewsRelease","OurVideo","PrivacyPolicy","TermsOfUse","setError","verificationCode","setVerificationCode","remainingTime","setRemainingTime","resendVisible","setResendVisible","pendingResend","setPendingResend","pendingVerify","setPendingVerify","onClickVerify","verifyAccount","userId","emailVerificationCode","reload","onClickResendVerificationCode","setInterval","lastTimeAvail","moment","lastEmailVerificationTime","add","format","now","diff","asSeconds","Number","isNaN","clearInterval","startOf","seconds","mobileVerificationCode","lastMobileVerificationTime","collapse","dark","expand","navbar","ReactRouterLink","SERVICE_URL","PARTNER_TOKEN","components","c","toLowerCase"],"sourceRoot":""}