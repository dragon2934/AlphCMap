{"version":3,"file":"static/js/818.d741e7d8.chunk.js","mappings":"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","sources":["admin/assets/icons/index.js","admin/views/properties/Properties.js"],"sourcesContent":["import {\n    cibSkype,\n    cibFacebook,\n    cibTwitter,\n    cibLinkedin,\n    cibFlickr,\n    cibTumblr,\n    cibXing,\n    cibGithub,\n    cibStackoverflow,\n    cibYoutube,\n    cibDribbble,\n    cibInstagram,\n    cibPinterest,\n    cibVk,\n    cibYahoo,\n    cibBehance,\n    cibReddit,\n    cibVimeo,\n    cibCcMastercard,\n    cibCcVisa,\n    cibStripe,\n    cibPaypal,\n    cibGooglePay,\n    cibCcAmex,\n} from '@coreui/icons';\nimport {cifUs, cifBr, cifIn, cifFr, cifEs, cifPl} from '@coreui/icons';\nimport {\n    cilAlignCenter,\n    cilAlignLeft,\n    cilAlignRight,\n    cilApplicationsSettings,\n    cilArrowRight,\n    cilArrowTop,\n    cilAsterisk,\n    cilBan,\n    cilBasket,\n    cilBell,\n    cilBold,\n    cilBookmark,\n    cilCalculator,\n    cilCalendar,\n    cilCloudDownload,\n    cilChartPie,\n    cilCheck,\n    cilChevronBottom,\n    cilChevronLeft,\n    cilChevronRight,\n    cilChevronTop,\n    cilCircle,\n    cilCheckCircle,\n    cilCode,\n    cilCommentSquare,\n    cilCreditCard,\n    cilCursor,\n    cilCursorMove,\n    cilDrop,\n    cilDollar,\n    cilEnvelopeClosed,\n    cilEnvelopeLetter,\n    cilEnvelopeOpen,\n    cilEuro,\n    cilGlobeAlt,\n    cilGrid,\n    cilFile,\n    cilFullscreen,\n    cilFullscreenExit,\n    cilGraph,\n    cilHome,\n    cilInbox,\n    cilIndentDecrease,\n    cilIndentIncrease,\n    cilInputPower,\n    cilItalic,\n    cilJustifyCenter,\n    cilJustifyLeft,\n    cilLaptop,\n    cilLayers,\n    cilLightbulb,\n    cilList,\n    cilListNumbered,\n    cilListRich,\n    cilLocationPin,\n    cilLockLocked,\n    cilMagnifyingGlass,\n    cilMap,\n    cilMoon,\n    cilNotes,\n    cilOptions,\n    cilPaperclip,\n    cilPaperPlane,\n    cilPencil,\n    cilPeople,\n    cilPhone,\n    cilPrint,\n    cilPuzzle,\n    cilSave,\n    cilScrubber,\n    cilSettings,\n    cilShare,\n    cilShareAll,\n    cilShareBoxed,\n    cilShieldAlt,\n    cilSpeech,\n    cilSpeedometer,\n    cilSpreadsheet,\n    cilStar,\n    cilSun,\n    cilTags,\n    cilTask,\n    cilTrash,\n    cilUnderline,\n    cilUser,\n    cilUserFemale,\n    cilUserFollow,\n    cilUserUnfollow,\n    cilX,\n    cilXCircle,\n    cilWarning,\n} from '@coreui/icons';\n\nexport const icons = Object.assign(\n    {},\n    {\n        cilAlignCenter,\n        cilAlignLeft,\n        cilAlignRight,\n        cilApplicationsSettings,\n        cilArrowRight,\n        cilArrowTop,\n        cilAsterisk,\n        cilBan,\n        cilBasket,\n        cilBell,\n        cilBold,\n        cilBookmark,\n        cilCalculator,\n        cilCalendar,\n        cilCloudDownload,\n        cilChartPie,\n        cilCheck,\n        cilChevronBottom,\n        cilChevronLeft,\n        cilChevronRight,\n        cilChevronTop,\n        cilCircle,\n        cilCheckCircle,\n        cilCode,\n        cilCommentSquare,\n        cilCreditCard,\n        cilCursor,\n        cilCursorMove,\n        cilDrop,\n        cilDollar,\n        cilEnvelopeClosed,\n        cilEnvelopeLetter,\n        cilEnvelopeOpen,\n        cilEuro,\n        cilGlobeAlt,\n        cilGrid,\n        cilFile,\n        cilFullscreen,\n        cilFullscreenExit,\n        cilGraph,\n        cilHome,\n        cilInbox,\n        cilIndentDecrease,\n        cilIndentIncrease,\n        cilInputPower,\n        cilItalic,\n        cilJustifyCenter,\n        cilJustifyLeft,\n        cilLaptop,\n        cilLayers,\n        cilLightbulb,\n        cilList,\n        cilListNumbered,\n        cilListRich,\n        cilLocationPin,\n        cilLockLocked,\n        cilMagnifyingGlass,\n        cilMap,\n        cilMoon,\n        cilNotes,\n        cilOptions,\n        cilPaperclip,\n        cilPaperPlane,\n        cilPencil,\n        cilPeople,\n        cilPhone,\n        cilPrint,\n        cilPuzzle,\n        cilSave,\n        cilScrubber,\n        cilSettings,\n        cilShare,\n        cilShareAll,\n        cilShareBoxed,\n        cilShieldAlt,\n        cilSpeech,\n        cilSpeedometer,\n        cilSpreadsheet,\n        cilStar,\n        cilSun,\n        cilTags,\n        cilTask,\n        cilTrash,\n        cilUnderline,\n        cilUser,\n        cilUserFemale,\n        cilUserFollow,\n        cilUserUnfollow,\n        cilX,\n        cilXCircle,\n        cilWarning,\n    },\n    {\n        cifUs,\n        cifBr,\n        cifIn,\n        cifFr,\n        cifEs,\n        cifPl,\n    },\n    {\n        cibSkype,\n        cibFacebook,\n        cibTwitter,\n        cibLinkedin,\n        cibFlickr,\n        cibTumblr,\n        cibXing,\n        cibGithub,\n        cibStackoverflow,\n        cibYoutube,\n        cibDribbble,\n        cibInstagram,\n        cibPinterest,\n        cibVk,\n        cibYahoo,\n        cibBehance,\n        cibReddit,\n        cibVimeo,\n        cibCcMastercard,\n        cibCcVisa,\n        cibStripe,\n        cibPaypal,\n        cibGooglePay,\n        cibCcAmex,\n    },\n);\n","import {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CRow,\n} from '@coreui/react';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport {\n    fetchProperties,\n    fetchPropertyCount,\n} from '../../../redux/actionCreators/adminActionCreators';\nimport Header from '../../../site/pages/newHome/Header';\n// import utilsTools from '../../../utils/utils';\nconst PAGE_SIZE = 20;\n\nimport { TheContent, TheSidebar, TheFooter, TheHeader } from '../../containers/index';\nimport { CContainer, CFade } from '@coreui/react';\nimport '../../../styles/admin/style.scss';\nimport { icons } from \"../../assets/icons\"\n\nconst Properties = () => {\n    const history = useHistory();\n    const queryPage = useLocation().search.match(/page=([0-9]+)/, '');\n    const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\n    const [page, setPage] = useState(currentPage);\n    const [loading, setLoading] = useState(true);\n    const [count, setCount] = useState(0);\n    const user = useSelector((state) => state.auth.me);\n\n    useEffect(() => {\n        currentPage !== page && setPage(currentPage);\n    }, [currentPage, page]);\n\n    const dispatch = useDispatch();\n    const properties = useSelector((state) => state.admin.properties);\n\n    useEffect(() => {\n        setLoading(true);\n        dispatch(fetchProperties({ page, pageSize: 1000000, roleName: user.role.name })).finally(() =>\n            setLoading(false),\n        );\n        return () => { };\n    }, [dispatch, page]);\n\n    useEffect(() => {\n        dispatch(fetchPropertyCount()).then(({ value: count }) =>\n            setCount(parseInt(count)),\n        );\n        return () => { };\n    }, [dispatch]);\n\n    console.log('properties: ', properties);\n\n    return (\n        <div className=\"c-app c-default-layout\">\n            <TheSidebar />\n            <div className=\"c-wrapper\">\n\n                <TheHeader />\n                <div className=\"c-body\">\n                    <main className=\"c-main\">\n                        <CContainer fluid className={'h-100'}>\n                            <div className=\"content\">\n                                <CRow>\n                                    <CCol>\n                                        <CCard>\n                                            <CCardHeader>\n                                                Properties\n                                                <small className=\"text-muted\"> Properties</small>\n                                                <div className=\"card-header-actions\">\n                                                    <CButton\n                                                        tag={Link}\n                                                        to={'/admin/file-upload'}\n                                                        className=\"btn-ghost-primary h-auto\"\n                                                        size={'sm'}\n                                                        color=\"primary\">\n                                                        File Upload\n                                                    </CButton> &nbsp;&nbsp;&nbsp;&nbsp;\n                                                    {/* <CButton\n                                                        tag={Link}\n                                                        to={'/admin/properties/new'}\n                                                        className=\"btn-ghost-primary h-auto\"\n                                                        size={'sm'}\n                                                        color=\"primary\">\n                                                        New Property\n                                                    </CButton> */}\n                                                </div>\n                                            </CCardHeader>\n                                            <CCardBody>\n                                                <CDataTable\n                                                    items={properties.map((p) => ({\n                                                        email: p.attributes.email,\n                                                        unitNo: p.attributes.unitNo,\n                                                        postalCode: p.attributes.postalCode,\n                                                        streetNumber: p.attributes.streetNumber,\n                                                        route: p.attributes.route,\n                                                        locality: p.attributes.locality,\n                                                        city: p.attributes.city,\n                                                        country: p.attributes.country,\n                                                        createdAt: p.attributes.createdAt.toString().split('T')[0],\n                                                        // serial_no: parseInt(p.serial_no),\n                                                        location: '[' + p.attributes.location.latitude + ',' + p.attributes.location.longitude + ']'\n                                                    }))}\n                                                    loading={loading}\n                                                    fields={[\n                                                        { key: 'email', _classes: 'font-weight-bold' },\n                                                        'unitNo',\n                                                        'postalCode',\n                                                        'streetNumber',\n                                                        'route',\n                                                        'locality',\n                                                        'city',\n                                                        'country',\n                                                        'createdAt'\n                                                    ]}\n                                                    hover\n                                                    striped\n                                                    sorter\n                                                    // columnFilter\n                                                    tableFilter={{ 'placeholder': 'Keywords...' }}\n                                                    itemsPerPage={PAGE_SIZE}\n                                                    pagination\n                                                    clickableRows\n                                                    onRowClick={(item) =>\n                                                        history.push(`/admin/properties/${item.id}`)\n                                                    }\n                                                />\n                                                {\n                                                    // parseInt(count / PAGE_SIZE) ? (\n                                                    //     <CPagination\n                                                    //         activePage={page}\n                                                    //         size={'sm'}\n                                                    //         onActivePageChange={pageChange}\n                                                    //         doubleArrows={false}\n                                                    //         pages={parseInt(Math.ceil(count / PAGE_SIZE))}\n                                                    //         align=\"end\"\n                                                    //     />\n                                                    // ) : null\n                                                }\n                                            </CCardBody>\n                                        </CCard>\n                                    </CCol>\n                                </CRow>\n                            </div>\n                        </CContainer>\n                    </main>\n                </div>\n                <TheFooter />\n            </div>\n        </div>\n    );\n};\n\nexport default Properties;\n"],"names":["icons","Object","assign","cilAlignCenter","cilAlignLeft","cilAlignRight","cilApplicationsSettings","cilArrowRight","cilArrowTop","cilAsterisk","cilBan","cilBasket","cilBell","cilBold","cilBookmark","cilCalculator","cilCalendar","cilCloudDownload","cilChartPie","cilCheck","cilChevronBottom","cilChevronLeft","cilChevronRight","cilChevronTop","cilCircle","cilCheckCircle","cilCode","cilCommentSquare","cilCreditCard","cilCursor","cilCursorMove","cilDrop","cilDollar","cilEnvelopeClosed","cilEnvelopeLetter","cilEnvelopeOpen","cilEuro","cilGlobeAlt","cilGrid","cilFile","cilFullscreen","cilFullscreenExit","cilGraph","cilHome","cilInbox","cilIndentDecrease","cilIndentIncrease","cilInputPower","cilItalic","cilJustifyCenter","cilJustifyLeft","cilLaptop","cilLayers","cilLightbulb","cilList","cilListNumbered","cilListRich","cilLocationPin","cilLockLocked","cilMagnifyingGlass","cilMap","cilMoon","cilNotes","cilOptions","cilPaperclip","cilPaperPlane","cilPencil","cilPeople","cilPhone","cilPrint","cilPuzzle","cilSave","cilScrubber","cilSettings","cilShare","cilShareAll","cilShareBoxed","cilShieldAlt","cilSpeech","cilSpeedometer","cilSpreadsheet","cilStar","cilSun","cilTags","cilTask","cilTrash","cilUnderline","cilUser","cilUserFemale","cilUserFollow","cilUserUnfollow","cilX","cilXCircle","cilWarning","cifUs","cifBr","cifIn","cifFr","cifEs","cifPl","cibSkype","cibFacebook","cibTwitter","cibLinkedin","cibFlickr","cibTumblr","cibXing","cibGithub","cibStackoverflow","cibYoutube","cibDribbble","cibInstagram","cibPinterest","cibVk","cibYahoo","cibBehance","cibReddit","cibVimeo","cibCcMastercard","cibCcVisa","cibStripe","cibPaypal","cibGooglePay","cibCcAmex","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","loading","setLoading","setCount","user","useSelector","state","auth","me","useEffect","dispatch","useDispatch","properties","admin","fetchProperties","pageSize","roleName","role","name","finally","fetchPropertyCount","then","count","value","parseInt","console","log","className","fluid","tag","Link","to","size","color","items","map","p","email","attributes","unitNo","postalCode","streetNumber","route","locality","city","country","createdAt","toString","split","location","latitude","longitude","fields","key","_classes","hover","striped","sorter","tableFilter","itemsPerPage","pagination","clickableRows","onRowClick","item","push","id"],"sourceRoot":""}