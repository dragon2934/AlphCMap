{"version":3,"file":"static/js/824.c2adc903.chunk.js","mappings":"uQA0IA,UArHa,SAAH,GAAiB,IAAZA,EAAK,EAALA,MACLC,GAAWC,EAAAA,EAAAA,eAEjB,GAA4BC,EAAAA,EAAAA,UAAS,MAAK,eAAnCC,EAAM,KAAEC,EAAS,MAGxBC,EAAAA,EAAAA,YAAU,WACFN,EAAMO,OAAOC,IACbP,GAASQ,EAAAA,EAAAA,IAAUT,EAAMO,OAAOC,KAAKE,MAAK,gBAASN,EAAM,EAAbO,MAAK,OAC7CN,EAAUD,EAAO,GAE7B,GAAG,CAACH,EAAUD,EAAMO,OAAOC,KAG3B,IAAMI,GAAUC,EAAAA,EAAAA,MAEVC,GAAoBC,EAAAA,EAAAA,cAAY,WAC9BX,EAAOY,WACPC,EAAAA,GAAAA,MACI,eACA,kFAGJA,EAAAA,GAAAA,QACI,6EACA,CACIC,KAAM,WACFjB,GAASkB,EAAAA,EAAAA,IAAWnB,EAAMO,OAAOC,KAAKE,MAAK,WACvCE,EAAQQ,KAAK,eACjB,GACJ,GAIhB,GAAG,CAACnB,EAAUW,EAASZ,EAAMO,OAAOC,GAAIJ,IAIxC,IAAKA,EAAQ,OAAO,KAEpB,IAAMiB,EAAO,CACTb,GAAIJ,EAAOI,GACXc,MAAOlB,EAAOkB,MACdC,SAAUnB,EAAOmB,SACjBC,aAAcpB,EAAOoB,aACrBC,KAAMrB,EAAOqB,KAAKC,KAClBC,UAAWvB,EAAOuB,UAClBC,SAAUxB,EAAOwB,SAIjBC,UAAUzB,EAAOyB,WAGfC,EAAcT,EACdU,OAAOC,QAAQX,GACf,CACI,CACI,MACA,0CAOd,OACI,6BACA,SAAC,IAAM,KACP,gBAAKY,UAAU,UAAS,UACxB,SAAC,KAAI,WACD,SAAC,KAAI,CAACC,GAAI,GAAG,UACT,UAAC,KAAK,YACF,UAAC,KAAW,uBACElC,EAAMO,OAAOC,IACvB,iBAAKyB,UAAU,sBAAqB,WAChC,SAAC,KAAO,CACJE,QAASrB,EACTmB,UAAU,0BACVG,KAAM,KAAK,0BAGf,SAAC,KAAO,CACJC,IAAKC,EAAAA,GACLC,GAAE,2BAAsBvC,EAAMO,OAAOC,IACrCyB,UAAU,2BACVG,KAAM,KAAK,8BAKvB,UAAC,KAAS,YACN,0CACA,kBAAOH,UAAU,kCAAiC,UAC9C,2BACKH,EAAYU,KAAI,WAAeC,GAAW,IAAD,eAAvBC,EAAG,KAAE/B,EAAK,KACzB,OACI,2BACI,kCAAQ+B,EAAG,QACX,yBACI,4BAAS/B,QAHR8B,EAAME,WAOvB,sBAWhC,C","sources":["admin/views/users/User.js"],"sourcesContent":["import {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CLabel,\n    CRow,\n} from '@coreui/react';\nimport React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {useDispatch} from 'react-redux';\nimport {toastr} from 'react-redux-toastr';\nimport {useHistory} from 'react-router';\nimport {Link} from \"react-router-dom\";\n\nimport {\n    deleteUser,\n    fetchUser,\n} from '../../../redux/actionCreators/adminActionCreators';\nimport Header from '../../../site/pages/newHome/Header';\n\nconst User = ({match}) => {\n    const dispatch = useDispatch();\n\n    const [record, setRecord] = useState(null);\n\n\n    useEffect(() => {\n        if (match.params.id)\n            dispatch(fetchUser(match.params.id)).then(({value: record}) =>\n                setRecord(record),\n            );\n    }, [dispatch, match.params.id]);\n\n\n    const history = useHistory();\n\n    const onClickDeleteUser = useCallback(() => {\n        if (record.user_alert) {\n            toastr.error(\n                'Unsuccessful',\n                'User is inside an active alert area. Please delete alert before deleting user.',\n            );\n        } else {\n            toastr.confirm(\n                'Are you sure you want to delete this account? This action is irreversible!',\n                {\n                    onOk: () => {\n                        dispatch(deleteUser(match.params.id)).then(() => {\n                            history.push('/admin/users');\n                        });\n                    },\n                },\n            );\n        }\n    }, [dispatch, history, match.params.id, record]);\n\n\n\n    if (!record) return null;\n\n    const user = {\n        id: record.id,\n        email: record.email,\n        username: record.username,\n        mobileNumber: record.mobileNumber,\n        role: record.role.name,\n        firstName: record.firstName,\n        lastName: record.lastName,\n        // property: record.property ? record.property.email : '',\n        // emailVerified: record.emailVerified.toString(),\n        // mobileVerified: record.mobileVerified.toString(),\n        createdAt:record.createdAt\n    };\n\n    const userDetails = user\n        ? Object.entries(user)\n        : [\n              [\n                  'id',\n                  <span>\n                        Not\n                      found\n                  </span>,\n              ],\n          ];\n\n    return (\n        <main>\n        <Header />\n        <div className=\"content\">\n        <CRow>\n            <CCol md={12}>\n                <CCard>\n                    <CCardHeader>\n                        User id: {match.params.id}\n                        <div className=\"card-header-actions\">\n                            <CButton\n                                onClick={onClickDeleteUser}\n                                className=\"btn-ghost-danger h-auto\"\n                                size={'sm'}>\n                                Delete User\n                            </CButton>\n                            <CButton\n                                tag={Link}\n                                to={`/admin/edit/user/${match.params.id}`}\n                                className=\"btn-ghost-warning h-auto\"\n                                size={'sm'}>\n                                Edit User\n                            </CButton>\n                        </div>\n                    </CCardHeader>\n                    <CCardBody>\n                        <h3>User Details</h3>\n                        <table className=\"table table-striped table-hover\">\n                            <tbody>\n                                {userDetails.map(([key, value], index) => {\n                                    return (\n                                        <tr key={index.toString()}>\n                                            <td>{`${key}:`}</td>\n                                            <td>\n                                                <strong>{value}</strong>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n                    </CCardBody>\n                </CCard>\n            </CCol>\n           \n        </CRow>\n        </div>\n        </main>\n    );\n};\n\nexport default User;\n"],"names":["match","dispatch","useDispatch","useState","record","setRecord","useEffect","params","id","fetchUser","then","value","history","useHistory","onClickDeleteUser","useCallback","user_alert","toastr","onOk","deleteUser","push","user","email","username","mobileNumber","role","name","firstName","lastName","createdAt","userDetails","Object","entries","className","md","onClick","size","tag","Link","to","map","index","key","toString"],"sourceRoot":""}