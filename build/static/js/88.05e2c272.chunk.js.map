{"version":3,"file":"static/js/88.05e2c272.chunk.js","mappings":"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","sources":["admin/assets/icons/index.js","admin/views/users/UserEdit.js"],"sourcesContent":["import {\n    cibSkype,\n    cibFacebook,\n    cibTwitter,\n    cibLinkedin,\n    cibFlickr,\n    cibTumblr,\n    cibXing,\n    cibGithub,\n    cibStackoverflow,\n    cibYoutube,\n    cibDribbble,\n    cibInstagram,\n    cibPinterest,\n    cibVk,\n    cibYahoo,\n    cibBehance,\n    cibReddit,\n    cibVimeo,\n    cibCcMastercard,\n    cibCcVisa,\n    cibStripe,\n    cibPaypal,\n    cibGooglePay,\n    cibCcAmex,\n} from '@coreui/icons';\nimport {cifUs, cifBr, cifIn, cifFr, cifEs, cifPl} from '@coreui/icons';\nimport {\n    cilAlignCenter,\n    cilAlignLeft,\n    cilAlignRight,\n    cilApplicationsSettings,\n    cilArrowRight,\n    cilArrowTop,\n    cilAsterisk,\n    cilBan,\n    cilBasket,\n    cilBell,\n    cilBold,\n    cilBookmark,\n    cilCalculator,\n    cilCalendar,\n    cilCloudDownload,\n    cilChartPie,\n    cilCheck,\n    cilChevronBottom,\n    cilChevronLeft,\n    cilChevronRight,\n    cilChevronTop,\n    cilCircle,\n    cilCheckCircle,\n    cilCode,\n    cilCommentSquare,\n    cilCreditCard,\n    cilCursor,\n    cilCursorMove,\n    cilDrop,\n    cilDollar,\n    cilEnvelopeClosed,\n    cilEnvelopeLetter,\n    cilEnvelopeOpen,\n    cilEuro,\n    cilGlobeAlt,\n    cilGrid,\n    cilFile,\n    cilFullscreen,\n    cilFullscreenExit,\n    cilGraph,\n    cilHome,\n    cilInbox,\n    cilIndentDecrease,\n    cilIndentIncrease,\n    cilInputPower,\n    cilItalic,\n    cilJustifyCenter,\n    cilJustifyLeft,\n    cilLaptop,\n    cilLayers,\n    cilLightbulb,\n    cilList,\n    cilListNumbered,\n    cilListRich,\n    cilLocationPin,\n    cilLockLocked,\n    cilMagnifyingGlass,\n    cilMap,\n    cilMoon,\n    cilNotes,\n    cilOptions,\n    cilPaperclip,\n    cilPaperPlane,\n    cilPencil,\n    cilPeople,\n    cilPhone,\n    cilPrint,\n    cilPuzzle,\n    cilSave,\n    cilScrubber,\n    cilSettings,\n    cilShare,\n    cilShareAll,\n    cilShareBoxed,\n    cilShieldAlt,\n    cilSpeech,\n    cilSpeedometer,\n    cilSpreadsheet,\n    cilStar,\n    cilSun,\n    cilTags,\n    cilTask,\n    cilTrash,\n    cilUnderline,\n    cilUser,\n    cilUserFemale,\n    cilUserFollow,\n    cilUserUnfollow,\n    cilX,\n    cilXCircle,\n    cilWarning,\n} from '@coreui/icons';\n\nexport const icons = Object.assign(\n    {},\n    {\n        cilAlignCenter,\n        cilAlignLeft,\n        cilAlignRight,\n        cilApplicationsSettings,\n        cilArrowRight,\n        cilArrowTop,\n        cilAsterisk,\n        cilBan,\n        cilBasket,\n        cilBell,\n        cilBold,\n        cilBookmark,\n        cilCalculator,\n        cilCalendar,\n        cilCloudDownload,\n        cilChartPie,\n        cilCheck,\n        cilChevronBottom,\n        cilChevronLeft,\n        cilChevronRight,\n        cilChevronTop,\n        cilCircle,\n        cilCheckCircle,\n        cilCode,\n        cilCommentSquare,\n        cilCreditCard,\n        cilCursor,\n        cilCursorMove,\n        cilDrop,\n        cilDollar,\n        cilEnvelopeClosed,\n        cilEnvelopeLetter,\n        cilEnvelopeOpen,\n        cilEuro,\n        cilGlobeAlt,\n        cilGrid,\n        cilFile,\n        cilFullscreen,\n        cilFullscreenExit,\n        cilGraph,\n        cilHome,\n        cilInbox,\n        cilIndentDecrease,\n        cilIndentIncrease,\n        cilInputPower,\n        cilItalic,\n        cilJustifyCenter,\n        cilJustifyLeft,\n        cilLaptop,\n        cilLayers,\n        cilLightbulb,\n        cilList,\n        cilListNumbered,\n        cilListRich,\n        cilLocationPin,\n        cilLockLocked,\n        cilMagnifyingGlass,\n        cilMap,\n        cilMoon,\n        cilNotes,\n        cilOptions,\n        cilPaperclip,\n        cilPaperPlane,\n        cilPencil,\n        cilPeople,\n        cilPhone,\n        cilPrint,\n        cilPuzzle,\n        cilSave,\n        cilScrubber,\n        cilSettings,\n        cilShare,\n        cilShareAll,\n        cilShareBoxed,\n        cilShieldAlt,\n        cilSpeech,\n        cilSpeedometer,\n        cilSpreadsheet,\n        cilStar,\n        cilSun,\n        cilTags,\n        cilTask,\n        cilTrash,\n        cilUnderline,\n        cilUser,\n        cilUserFemale,\n        cilUserFollow,\n        cilUserUnfollow,\n        cilX,\n        cilXCircle,\n        cilWarning,\n    },\n    {\n        cifUs,\n        cifBr,\n        cifIn,\n        cifFr,\n        cifEs,\n        cifPl,\n    },\n    {\n        cibSkype,\n        cibFacebook,\n        cibTwitter,\n        cibLinkedin,\n        cibFlickr,\n        cibTumblr,\n        cibXing,\n        cibGithub,\n        cibStackoverflow,\n        cibYoutube,\n        cibDribbble,\n        cibInstagram,\n        cibPinterest,\n        cibVk,\n        cibYahoo,\n        cibBehance,\n        cibReddit,\n        cibVimeo,\n        cibCcMastercard,\n        cibCcVisa,\n        cibStripe,\n        cibPaypal,\n        cibGooglePay,\n        cibCcAmex,\n    },\n);\n","import {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CInvalidFeedback,\n    CLabel,\n    CRow,\n    CSelect,\n    CSpinner,\n} from '@coreui/react';\nimport { useFormik } from 'formik';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport * as Yup from 'yup';\n// import MapContext from '../../../common/contexts/MapContext/MapContext';\nimport {\n    fetchRoles,\n    fetchUser,\n    saveUser,\n    saveTenant\n} from '../../../redux/actionCreators/adminActionCreators';\nimport MobileInput from '../../../common/components/MobileInput';\nimport Header from '../../../site/pages/newHome/Header';\n\nimport { TheContent, TheSidebar, TheFooter, TheHeader } from '../../containers/index';\nimport { CContainer, CFade } from '@coreui/react';\nimport '../../../styles/admin/style.scss';\nimport { icons } from \"../../assets/icons\"\n\nconst validationSchema = Yup.object().shape({\n    mobileNumber: Yup.number().required('Mobile number is required'),\n    firstName: Yup.string(),\n    lastName: Yup.string(),\n    password: Yup.string()\n        .min(6, 'Password is  too Short!')\n        .max(16, 'Password is too Long!'),\n    role: Yup.string().required('Role is required'),\n});\n\nconst UserEdit = ({ match }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const roles = useSelector((state) => state.admin.roles);\n    const loginedUser = useSelector((state) => state.auth.me);\n\n\n    // console.log('loginedUser=' + JSON.stringify(loginedUser.role));\n    const formik = useFormik({\n        initialValues: {\n            id: match.params.id,\n            mobileNumber: '',\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n\n            username: '',\n            role: '',\n            // property: undefined,\n            emailVerified: true,\n            mobileVerified: true,\n            createAt: '',\n            blocked: false,\n            confirmed: true,\n            location: {},\n        },\n        validationSchema,\n        onSubmit: (values, { setSubmitting }) => {\n            setSubmitting(true);\n\n            if (loginedUser.role.name === process.env.REACT_APP_ROLE_PM_NAME) {\n                //PM add a tenant\n                const user = {\n                    ...values,\n                    tenant: loginedUser.tenant,\n                    // propertyId: property!=null && property!=undefined ? property.id:landlordId,\n                    // unitNo: unitNo\n                };\n\n                dispatch(saveTenant(user))\n                    .then(() => {\n                        if (match.params.id)\n                            history.push(`/admin/users/${match.params.id}`);\n                        else history.push('/admin/users');\n                    })\n                    .catch(() => setSubmitting(false));\n            } else {\n                const user = {\n                    ...values,\n                    tenant: loginedUser.tenant,\n                };\n\n                dispatch(saveUser(user))\n                    .then(() => {\n                        if (match.params.id)\n                            history.push(`/admin/users/${match.params.id}`);\n                        else history.push('/admin/users');\n                    })\n                    .catch(() => setSubmitting(false));\n            }\n        },\n    });\n\n    const {\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n        values,\n        isValid,\n        isSubmitting,\n        resetForm,\n        setValues,\n        setFieldValue,\n        setFieldTouched,\n    } = formik;\n    // const [properties,setProperties] = useState(null);\n    // const [property,setProperty] = useState(null);\n    const [loading, setLoading] = useState(true);\n    // const [landlordId,setLandlordId] = useState('');\n    useEffect(() => {\n        if (match.params.id) {\n            dispatch(fetchUser(match.params.id)).then(({ value: user }) => {\n                delete user.user_alert;\n\n                setValues({\n                    ...user,\n                    role: user.role.id,\n                    // property: user.property.id,\n                });\n\n                // setLandlordId(user.property.landlordId); //房东的ID\n                console.log('property =' + JSON.stringify(user.property));\n\n            });\n        }\n\n    }, [dispatch, loginedUser, match.params.id, setValues]);\n\n\n\n    useEffect(() => {\n        dispatch(fetchRoles());\n    }, [dispatch]);\n\n    // const [unitNo,setUnitNo] = useState('');\n    return (\n        <main>\n            <Header />\n            <div className=\"content\">\n                <CRow>\n                    <CCol md={12}>\n                        <CForm onSubmit={handleSubmit}>\n                            <CCard>\n                                <CCardHeader>User id: {match.params.id}</CCardHeader>\n                                <CCardBody>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"firstName\">\n                                                First Name\n                                            </CLabel>\n                                            <CInput\n                                                id=\"firstName\"\n                                                name=\"firstName\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.firstName}\n                                                invalid={\n                                                    touched.firstName &&\n                                                    errors.firstName\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.firstName}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"lastName\">\n                                                Last Name\n                                            </CLabel>\n                                            <CInput\n                                                id=\"lastName\"\n                                                name=\"lastName\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.lastName}\n                                                invalid={\n                                                    touched.lastName && errors.lastName\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.lastName}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"username\">\n                                                User Name\n                                            </CLabel>\n                                            <CInput\n                                                id=\"username\"\n                                                name=\"username\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.username}\n                                                invalid={\n                                                    touched.username && errors.username\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.username}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"mobileNumber\">\n                                                Mobile Number\n                                            </CLabel>\n                                            <MobileInput\n                                                setFieldValue={setFieldValue}\n                                                setFieldTouched={setFieldTouched}\n                                                placeholder=\"Mobile Number\"\n                                                name={'mobileNumber'}\n                                                value={values.mobileNumber}\n                                                invalid={\n                                                    touched.mobileNumber &&\n                                                    errors.mobileNumber\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.mobileNumber}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"email\">Email</CLabel>\n                                            <CInput\n                                                id=\"email\"\n                                                name=\"email\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.email}\n                                                invalid={touched.email && errors.email}\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.email}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"role\">Role</CLabel>\n                                            <CSelect\n                                                custom\n                                                id=\"role\"\n                                                name=\"role\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.role}\n                                                invalid={touched.role && errors.role}>\n                                                <option value=\"\">Please select</option>\n                                                {roles.map((r) => (\n                                                    <option key={r.id} value={r.id}>\n                                                        {r.name}\n                                                    </option>\n                                                ))}\n                                            </CSelect>\n                                            <CInvalidFeedback>\n                                                {errors.role}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n                                    <CCol xs=\"12\">\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"password\">Password</CLabel>\n                                            <CInput\n                                                id=\"password\"\n                                                name=\"password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                value={values.password}\n                                                invalid={\n                                                    touched.password && errors.password\n                                                }\n                                            />\n                                            <CInvalidFeedback>\n                                                {errors.password}\n                                            </CInvalidFeedback>\n                                        </CFormGroup>\n                                    </CCol>\n\n                                </CCardBody>\n                                <CCardFooter className=\"text-right\">\n                                    <CButton\n                                        disabled={!isValid || isSubmitting}\n                                        type=\"submit\"\n                                        size=\"sm\"\n                                        color=\"primary\">\n                                        {isSubmitting ? (\n                                            <CSpinner size=\"sm\" />\n                                        ) : (\n                                            'Submit'\n                                        )}\n                                    </CButton>{' '}\n                                    <CButton\n                                        type=\"reset\"\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        onClick={() => resetForm()}>\n                                        Reset\n                                    </CButton>\n                                </CCardFooter>\n                            </CCard>\n                        </CForm>\n                    </CCol>\n                </CRow>\n            </div>\n        </main>\n    );\n};\n\nexport default UserEdit;\n"],"names":["icons","Object","assign","cilAlignCenter","cilAlignLeft","cilAlignRight","cilApplicationsSettings","cilArrowRight","cilArrowTop","cilAsterisk","cilBan","cilBasket","cilBell","cilBold","cilBookmark","cilCalculator","cilCalendar","cilCloudDownload","cilChartPie","cilCheck","cilChevronBottom","cilChevronLeft","cilChevronRight","cilChevronTop","cilCircle","cilCheckCircle","cilCode","cilCommentSquare","cilCreditCard","cilCursor","cilCursorMove","cilDrop","cilDollar","cilEnvelopeClosed","cilEnvelopeLetter","cilEnvelopeOpen","cilEuro","cilGlobeAlt","cilGrid","cilFile","cilFullscreen","cilFullscreenExit","cilGraph","cilHome","cilInbox","cilIndentDecrease","cilIndentIncrease","cilInputPower","cilItalic","cilJustifyCenter","cilJustifyLeft","cilLaptop","cilLayers","cilLightbulb","cilList","cilListNumbered","cilListRich","cilLocationPin","cilLockLocked","cilMagnifyingGlass","cilMap","cilMoon","cilNotes","cilOptions","cilPaperclip","cilPaperPlane","cilPencil","cilPeople","cilPhone","cilPrint","cilPuzzle","cilSave","cilScrubber","cilSettings","cilShare","cilShareAll","cilShareBoxed","cilShieldAlt","cilSpeech","cilSpeedometer","cilSpreadsheet","cilStar","cilSun","cilTags","cilTask","cilTrash","cilUnderline","cilUser","cilUserFemale","cilUserFollow","cilUserUnfollow","cilX","cilXCircle","cilWarning","cifUs","cifBr","cifIn","cifFr","cifEs","cifPl","cibSkype","cibFacebook","cibTwitter","cibLinkedin","cibFlickr","cibTumblr","cibXing","cibGithub","cibStackoverflow","cibYoutube","cibDribbble","cibInstagram","cibPinterest","cibVk","cibYahoo","cibBehance","cibReddit","cibVimeo","cibCcMastercard","cibCcVisa","cibStripe","cibPaypal","cibGooglePay","cibCcAmex","validationSchema","Yup","shape","mobileNumber","required","firstName","lastName","password","min","max","role","match","dispatch","useDispatch","history","useHistory","roles","useSelector","state","admin","loginedUser","auth","me","formik","useFormik","initialValues","id","params","email","username","emailVerified","mobileVerified","createAt","blocked","confirmed","location","onSubmit","values","setSubmitting","process","name","user","tenant","saveTenant","then","push","catch","saveUser","handleChange","handleBlur","handleSubmit","errors","touched","isValid","isSubmitting","resetForm","setValues","setFieldValue","setFieldTouched","useState","useEffect","fetchUser","value","user_alert","console","log","JSON","stringify","property","fetchRoles","className","md","xs","htmlFor","onChange","onBlur","invalid","placeholder","custom","map","r","disabled","type","size","color","onClick"],"sourceRoot":""}