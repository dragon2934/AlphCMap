{"version":3,"file":"static/js/939.14c1b48e.chunk.js","mappings":"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","sources":["admin/routes.js","admin/containers/TheFooter.js","admin/containers/TheContent.js","admin/containers/TheHeader.js","admin/containers/TheHeaderDropdown.js","admin/containers/TheSidebar.js","admin/file-upload/components/FilesUpload.js","admin/file-upload/services/http-common.js","admin/file-upload/services/FileUploadService.js","admin/views/properties/file-upload.js"],"sourcesContent":["import React from \"react\";\nconst Users = React.lazy(() => import('./views/users/Users'));\nconst User = React.lazy(() => import('./views/users/User'));\nconst UserEdit = React.lazy(() => import('./views/users/UserEdit'));\n\nconst Properties = React.lazy(() => import('./views/properties/Properties'));\nconst Property = React.lazy(() => import('./views/properties/Property'));\nconst PropertyEdit = React.lazy(() =>\n    import('./views/properties/PropertyEdit'),\n);\n\nconst PropertyFileUpload = React.lazy(() => import('./views/properties/file-upload'));\n\nconst routes = [\n    { path: '/admin/', exact: true, name: 'Home' },\n    // User Routes\n    { path: '/admin/users', exact: true, name: 'Users', component: Users },\n    {\n        path: '/admin/users/new',\n        exact: true,\n        name: 'New User',\n        component: UserEdit,\n    },\n    {\n        path: '/admin/users/:id',\n        exact: true,\n        name: 'User Details',\n        component: User,\n    },\n    {\n        path: '/admin/edit/user/:id',\n        exact: true,\n        name: 'Edit User',\n        component: UserEdit,\n    },\n\n    {\n        path: '/admin/file-upload',\n        exact: true,\n        name: 'FileUpload',\n        component: PropertyFileUpload,\n    },\n    {\n        path: '/admin/properties',\n        exact: true,\n        name: 'Properties',\n        component: Properties,\n    },\n    {\n        path: '/admin/properties/new',\n        exact: true,\n        name: 'New Property',\n        component: PropertyEdit,\n    },\n    {\n        path: '/admin/properties/:id',\n        exact: true,\n        name: 'Property Details',\n        component: Property,\n    },\n    {\n        path: '/admin/edit/property/:id',\n        exact: true,\n        name: 'Edit Property',\n        component: PropertyEdit,\n    },\n    {\n        path: '/admin/properties/:id',\n        exact: true,\n        name: 'User Details',\n        component: User,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport {CFooter} from '@coreui/react';\n\nconst TheFooter = () => {\n    return <CFooter fixed={false}></CFooter>;\n};\n\nexport default React.memo(TheFooter);\n","import React, {Suspense} from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {CContainer, CFade} from '@coreui/react';\nimport {Spinner} from 'reactstrap';\n\n// routes config\nimport routes from '../routes';\n\nconst loading = (\n    <div className={'loader'}>\n        <Spinner\n            type={'grow'}\n            color={'primary'}\n            style={{width: '5rem', height: '5rem'}}>\n            {''}\n        </Spinner>\n    </div>\n);\n\nconst TheContent = () => {\n    return (\n        <main className=\"c-main\">\n            <CContainer fluid className={'h-100'}>\n                <Suspense fallback={loading}>\n                    <Switch>\n                        {routes.map((route, idx) => {\n                            return (\n                                route.component && (\n                                    <Route\n                                        key={idx}\n                                        path={route.path}\n                                        exact={route.exact}\n                                        name={route.name}\n                                        render={(props) => (\n                                            <CFade className={'h-100'}>\n                                                <route.component {...props} />\n                                            </CFade>\n                                        )}\n                                    />\n                                )\n                            );\n                        })}\n                        <Redirect from=\"/\" to=\"/admin/users\" />\n                    </Switch>\n                </Suspense>\n            </CContainer>\n        </main>\n    );\n};\n\nexport default React.memo(TheContent);\n","import {\n    CBreadcrumbRouter,\n    CHeader,\n    CHeaderBrand,\n    CHeaderNav,\n    CSubheader,\n    CToggler,\n} from '@coreui/react';\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShowSidebar } from '../../redux/actionCreators/adminActionCreators';\n\n// routes config\nimport routes from '../routes';\n\nimport { TheHeaderDropdown } from './index';\n\nconst TheHeader = () => {\n    const dispatch = useDispatch();\n    const sidebarShow = useSelector((state) => state.admin.sidebarShow);\n\n    const toggleSidebar = () => {\n        const val = [true, 'responsive'].includes(sidebarShow)\n            ? false\n            : 'responsive';\n        dispatch(setShowSidebar(val));\n    };\n\n    const toggleSidebarMobile = () => {\n        const val = [false, 'responsive'].includes(sidebarShow)\n            ? true\n            : 'responsive';\n        dispatch(setShowSidebar(val));\n    };\n\n    return (\n        <CHeader withSubheader>\n            <CToggler\n                inHeader\n                className=\"ml-md-3 d-lg-none\"\n                onClick={toggleSidebarMobile}\n            />\n            <CToggler\n                inHeader\n                className=\"ml-3 d-md-down-none\"\n                onClick={toggleSidebar}\n            />\n            <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\" />\n\n            <CHeaderNav className=\"d-md-down-none mr-auto\" />\n\n            <CHeaderNav className=\"px-3\">\n                <TheHeaderDropdown />\n            </CHeaderNav>\n\n            <CSubheader className=\"px-3 justify-content-between\">\n                <CBreadcrumbRouter\n                    className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n                    routes={routes}\n                />\n            </CSubheader>\n        </CHeader>\n    );\n};\n\nexport default TheHeader;\n","import CIcon from '@coreui/icons-react';\nimport {\n    CDropdown,\n    CDropdownItem,\n    CDropdownMenu,\n    CDropdownToggle,\n    CImg,\n} from '@coreui/react';\nimport React from \"react\";\n// import {useSelector} from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nconst TheHeaderDropdown = () => {\n\n    return (\n        <CDropdown inNav className=\"c-header-nav-items mx-2\" direction=\"down\">\n            <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n                <div className=\"c-avatar\">\n                    <CImg\n                        src={`/assets/img/default-user.png`}\n                        className=\"c-avatar-img\"\n                        style={{ backgroundColor: \"black\" }}\n                    />\n                </div>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n                <CDropdownItem tag={Link} to={'/logout'}>\n                    <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\n                    Logout\n                </CDropdownItem>\n            </CDropdownMenu>\n        </CDropdown>\n    );\n};\n\nexport default TheHeaderDropdown;\n","import CIcon from '@coreui/icons-react';\nimport {\n    CCreateElement,\n    CImg,\n    CSidebar,\n    CSidebarBrand,\n    CSidebarMinimizer,\n    CSidebarNav,\n    CSidebarNavDivider,\n    CSidebarNavDropdown,\n    CSidebarNavItem,\n    CSidebarNavTitle,\n} from '@coreui/react';\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShowSidebar } from '../../redux/actionCreators/adminActionCreators';\n\n// sidebar nav config\n// import navigation from './_nav';\nconst TheSidebar = () => {\n    const dispatch = useDispatch();\n    const navigation = [\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Data'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Users',\n            to: '/admin/users',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Properties',\n            to: '/admin/properties',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Campaigns'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Email Campaigns',\n            to: '/admin/email-campaigns',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Templates',\n            to: '/admin/templates',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Marketing'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Coupons',\n            to: '/admin/coupons',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Flyer',\n            to: '/admin/flyers',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Promting Events',\n            to: '/admin/events',\n            icon: 'cil-user',\n        },\n    ];\n    const show = useSelector((state) => state.admin.sidebarShow);\n    return (\n        <CSidebar\n            show={show}\n            onShowChange={(val) => dispatch(setShowSidebar(val))}>\n            <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n                <CImg\n                    className=\"c-sidebar-brand-full\"\n                    src={'/assets/img/logo-sm.png'}\n                    height={35}\n                />\n                <CImg\n                    className=\"c-sidebar-brand-minimized\"\n                    src={'/assets/img/icon-white-small.png'}\n                    height={35}\n                />\n            </CSidebarBrand>\n            <CSidebarNav>\n                <CCreateElement\n                    items={navigation}\n                    components={{\n                        CSidebarNavDivider,\n                        CSidebarNavDropdown,\n                        CSidebarNavItem,\n                        CSidebarNavTitle,\n                    }}\n                />\n            </CSidebarNav>\n            <CSidebarMinimizer className=\"c-d-md-down-none\" />\n        </CSidebar>\n    );\n};\n\nexport default React.memo(TheSidebar);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport UploadService from \"../services/FileUploadService\";\nimport { listFiles, updateProperty, updateLatLng } from '../../../redux/actionCreators/adminActionCreators';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst UploadFiles = ({ extension }) => {\n  const [selectedFiles, setSelectedFiles] = useState(undefined);\n  const [progressInfos, setProgressInfos] = useState({ val: [] });\n  const uploadedFiles = useSelector((state) => state.admin.uploadedFiles);\n  const [message, setMessage] = useState([]);\n  const [fileInfos, setFileInfos] = useState([]);\n  const progressInfosRef = useRef(null)\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.auth.jwt);\n  console.log('extension =' + extension);\n\n\n  useEffect(() => {\n    dispatch(listFiles()).then((response) => {\n      setFileInfos(response.data);\n    });\n  }, []);\n\n  const selectFiles = (event) => {\n    setSelectedFiles(event.target.files);\n    console.log('file selected..' + JSON.stringify(event.target.files));\n    setProgressInfos({ val: [] });\n  };\n\n  const uploadFile = async (idx, file) => {\n    let _progressInfos = [...progressInfosRef.current.val];\n    // dispatch(uploadFiles()).then((response) => {\n    //   setFileInfos(response.data);\n    // });\n    console.log('uploading ..file=' + JSON.stringify(file));\n    return UploadService.upload(file, token, (event) => {\n      _progressInfos[idx].percentage = Math.round(\n        (100 * event.loaded) / event.total\n      );\n      setProgressInfos({ val: _progressInfos });\n    })\n      .then((resp) => {\n        setMessage((prevMessage) => ([\n          ...prevMessage,\n          \"Uploaded the file successfully: \" + file.name,\n        ]));\n        //Do update database for property\n        //resp.url\n        // console.log('upload completed...' + JSON.stringify(resp));\n        const imageData = {\n          id: resp.data[0].id,\n          url: resp.data[0].url\n        }\n        uploadedFiles.push(imageData);\n        const files = Array.from(selectedFiles);\n        idx = idx + 1;\n        if (idx < files.length) {\n          sleep(500);\n          uploadFile(idx, files[idx]);\n        } else {\n          setMessage((prevMessage) => ([\n            ...prevMessage,\n            \"Uploaded Completed!\",\n          ]));\n        }\n\n      })\n      .catch((error) => {\n        console.log('upload file error..' + JSON.stringify(error));\n        _progressInfos[idx].percentage = 0;\n        setProgressInfos({ val: _progressInfos });\n\n        setMessage((prevMessage) => ([\n          ...prevMessage,\n          \"Could not upload the file: \" + file.name,\n        ]));\n      });\n  };\n  const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n  const uploadSelectedFiles = (event) => {\n    event.preventDefault();\n    const files = Array.from(selectedFiles);\n    console.log('files...' + JSON.stringify(files));\n\n    let _progressInfos = files.map(file => ({ percentage: 0, fileName: file.name }));\n\n    progressInfosRef.current = {\n      val: _progressInfos,\n    }\n\n    //Start upload\n    uploadFile(0, files[0]);\n\n    // const uploadPromises = files.map((file, i) =>{ \n    //   uploadFile(i, file);\n    //   sleep(500);//wait for database update\n    // });\n\n    // Promise.all(uploadPromises)\n    //   .then((files) => {\n    //     setFileInfos(files.data);\n    //     console.log('all uploads...' + files.data);\n    //   });\n\n    // setMessage([]);\n  };\n\n  return (\n    <div>\n      {progressInfos && progressInfos.val.length > 0 &&\n        progressInfos.val.map((progressInfo, index) => (\n          <div className=\"mb-2\" key={index}>\n            <span>{progressInfo.fileName}</span>\n            <div className=\"progress\">\n              <div\n                className=\"progress-bar progress-bar-info\"\n                role=\"progressbar\"\n                aria-valuenow={progressInfo.percentage}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ width: progressInfo.percentage + \"%\" }}\n              >\n                {progressInfo.percentage}%\n              </div>\n            </div>\n          </div>\n        ))}\n\n      <div className=\"row my-3\">\n        <div className=\"col-8\">\n          <label className=\"btn btn-default p-0\">\n            <input type=\"file\" accept={extension} multiple onChange={selectFiles} />\n          </label>\n        </div>\n\n        <div className=\"col-4\">\n          <button\n            className=\"btn btn-success btn-sm\"\n            disabled={!selectedFiles}\n            onClick={uploadSelectedFiles}\n          >\n            Upload\n          </button>\n        </div>\n      </div>\n\n      {message.length > 0 && (\n        <div className=\"alert alert-secondary\" role=\"alert\">\n          <ul>\n            {message.map((item, i) => {\n              return <li key={i}>{item}</li>;\n            })}\n          </ul>\n        </div>\n      )}\n\n    </div>\n  );\n};\n\nexport default UploadFiles;\n","import axios from \"axios\";\n\nexport default axios.create({\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n\n// export const fetchUser = (id) => {\n//   return (dispatch, getState) => {\n//       const token = getState().auth.jwt;\n\n//       return dispatch({\n//           type: ADMIN_FETCH_USER,\n//           payload: fetch(`${SERVICE_URL}/users/${id}?tenant=${PARTNER_TOKEN}`, {\n//               headers: {\n//                   Accept: 'application/json',\n//                   'Content-Type': 'application/json',\n//                   Authorization: `Bearer ${token}`,\n//               },\n//               method: 'GET',\n//           })\n//               .then((r) => r.json())\n//               .then((responseData) => {\n//                   if (responseData.statusCode >= 300) {\n//                       return Promise.reject(responseData);\n//                   } else {\n//                       return responseData;\n//                   }\n//               }),\n//       });\n//   };\n// };\n","import http from \"./http-common\";\nimport {SERVICE_URL} from '../../../constants';\n// const { listFiles,uploadFiles} = require('../../../redux/actionCreators/adminActionCreators');\nconst upload = (file,token, onUploadProgress) => {\n  let formData = new FormData();\n\n  formData.append(\"files\", file);\n\n  return http.post(SERVICE_URL+\"/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    },\n    onUploadProgress,\n  });\n};\n\nconst getFiles = (token) => {\n  return http.get(\n    SERVICE_URL+\"/upload/files?_limit=10&_start=0&_sort=updatedAt:DESC\");\n  // return listFiles();\n};\n\nconst FileUploadService = {\n  upload,\n  getFiles,\n};\n\nexport default FileUploadService; \n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\n// import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport {\n  CButton,\n} from '@coreui/react';\n\nimport FilesUpload from '../../file-upload/components/FilesUpload';\n\nimport { TheSidebar, TheFooter, TheHeader } from '../../containers/index';\nimport { CContainer } from '@coreui/react';\nimport '../../../styles/admin/style.scss';\nimport { batchImportCompany } from '../../../redux/actionCreators/adminActionCreators';\nimport { toastr } from 'react-redux-toastr';\nconst PropertyFileUpload = () => {\n  const uploadedFiles = useSelector((state) => state.admin.uploadedFiles);\n  const dispatch = useDispatch();\n  const importCSVData = useCallback(() => {\n    console.log('. start to import csv data...uploadedFiles..' + JSON.stringify(uploadedFiles));\n    const data = {\n      fileName: uploadedFiles[0].url\n    }\n    dispatch(batchImportCompany(data)).then(resp => {\n      console.log('...batch import ..', resp);\n    }).catch(error => {\n      console.log('..import error');\n      toastr.error('Error', 'Data import failed');\n    });\n  });\n  return (\n    <div className=\"c-app c-default-layout\">\n      <TheSidebar />\n      <div className=\"c-wrapper\">\n\n        <TheHeader />\n        <div className=\"c-body\">\n          <main className=\"c-main\">\n            <CContainer fluid className={'h-100'}>\n              <div className=\"content\">\n                <div className=\"container\" style={{ width: \"600px\" }}>\n                  <div className=\"my-3\">\n                    <h4>Batch  Import Company</h4>\n                  </div>\n\n                  <FilesUpload extension={'.csv'} />\n\n                  <hr />\n                  <CButton\n                    onClick={() =>\n                      importCSVData()\n                    }\n                    type=\"button\"\n                    size=\"sm\"\n                    color=\"primary\">\n                    Import\n                  </CButton>{' '}\n                </div>\n              </div>\n            </CContainer>\n          </main>\n        </div>\n        <TheFooter />\n      </div>\n    </div>\n  );\n}\n\nexport default PropertyFileUpload;\n"],"names":["Users","React","User","UserEdit","Properties","Property","PropertyEdit","path","exact","name","component","TheFooter","Spinner","fixed","dispatch","useDispatch","sidebarShow","useSelector","state","admin","withSubheader","inHeader","className","onClick","val","includes","setShowSidebar","to","routes","inNav","direction","caret","src","style","backgroundColor","placement","tag","Link","TheSidebar","show","onShowChange","height","items","_tag","_children","icon","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","extension","useState","undefined","selectedFiles","setSelectedFiles","progressInfos","setProgressInfos","uploadedFiles","message","setMessage","setFileInfos","progressInfosRef","useRef","token","auth","jwt","console","log","useEffect","listFiles","then","response","data","uploadFile","idx","file","_progressInfos","current","JSON","stringify","UploadService","event","percentage","Math","round","loaded","total","resp","prevMessage","imageData","id","url","push","files","Array","from","length","sleep","catch","error","milliseconds","Promise","resolve","setTimeout","map","progressInfo","index","fileName","role","width","type","accept","multiple","onChange","target","disabled","preventDefault","item","i","axios","headers","upload","onUploadProgress","formData","FormData","append","http","SERVICE_URL","Authorization","getFiles","importCSVData","useCallback","batchImportCompany","toastr","fluid","FilesUpload","size","color"],"sourceRoot":""}