{"version":3,"file":"static/js/963.84d9a8d2.chunk.js","mappings":"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","sources":["admin/assets/icons/index.js","admin/routes.js","admin/containers/TheFooter.js","admin/containers/TheContent.js","admin/containers/TheHeader.js","admin/containers/TheHeaderDropdown.js","admin/containers/TheSidebar.js","admin/file-upload/services/http-common.js","admin/file-upload/services/FileUploadService.js","admin/views/properties/PropertyEdit.js"],"sourcesContent":["import {\n    cibSkype,\n    cibFacebook,\n    cibTwitter,\n    cibLinkedin,\n    cibFlickr,\n    cibTumblr,\n    cibXing,\n    cibGithub,\n    cibStackoverflow,\n    cibYoutube,\n    cibDribbble,\n    cibInstagram,\n    cibPinterest,\n    cibVk,\n    cibYahoo,\n    cibBehance,\n    cibReddit,\n    cibVimeo,\n    cibCcMastercard,\n    cibCcVisa,\n    cibStripe,\n    cibPaypal,\n    cibGooglePay,\n    cibCcAmex,\n} from '@coreui/icons';\nimport {cifUs, cifBr, cifIn, cifFr, cifEs, cifPl} from '@coreui/icons';\nimport {\n    cilAlignCenter,\n    cilAlignLeft,\n    cilAlignRight,\n    cilApplicationsSettings,\n    cilArrowRight,\n    cilArrowTop,\n    cilAsterisk,\n    cilBan,\n    cilBasket,\n    cilBell,\n    cilBold,\n    cilBookmark,\n    cilCalculator,\n    cilCalendar,\n    cilCloudDownload,\n    cilChartPie,\n    cilCheck,\n    cilChevronBottom,\n    cilChevronLeft,\n    cilChevronRight,\n    cilChevronTop,\n    cilCircle,\n    cilCheckCircle,\n    cilCode,\n    cilCommentSquare,\n    cilCreditCard,\n    cilCursor,\n    cilCursorMove,\n    cilDrop,\n    cilDollar,\n    cilEnvelopeClosed,\n    cilEnvelopeLetter,\n    cilEnvelopeOpen,\n    cilEuro,\n    cilGlobeAlt,\n    cilGrid,\n    cilFile,\n    cilFullscreen,\n    cilFullscreenExit,\n    cilGraph,\n    cilHome,\n    cilInbox,\n    cilIndentDecrease,\n    cilIndentIncrease,\n    cilInputPower,\n    cilItalic,\n    cilJustifyCenter,\n    cilJustifyLeft,\n    cilLaptop,\n    cilLayers,\n    cilLightbulb,\n    cilList,\n    cilListNumbered,\n    cilListRich,\n    cilLocationPin,\n    cilLockLocked,\n    cilMagnifyingGlass,\n    cilMap,\n    cilMoon,\n    cilNotes,\n    cilOptions,\n    cilPaperclip,\n    cilPaperPlane,\n    cilPencil,\n    cilPeople,\n    cilPhone,\n    cilPrint,\n    cilPuzzle,\n    cilSave,\n    cilScrubber,\n    cilSettings,\n    cilShare,\n    cilShareAll,\n    cilShareBoxed,\n    cilShieldAlt,\n    cilSpeech,\n    cilSpeedometer,\n    cilSpreadsheet,\n    cilStar,\n    cilSun,\n    cilTags,\n    cilTask,\n    cilTrash,\n    cilUnderline,\n    cilUser,\n    cilUserFemale,\n    cilUserFollow,\n    cilUserUnfollow,\n    cilX,\n    cilXCircle,\n    cilWarning,\n} from '@coreui/icons';\n\nexport const icons = Object.assign(\n    {},\n    {\n        cilAlignCenter,\n        cilAlignLeft,\n        cilAlignRight,\n        cilApplicationsSettings,\n        cilArrowRight,\n        cilArrowTop,\n        cilAsterisk,\n        cilBan,\n        cilBasket,\n        cilBell,\n        cilBold,\n        cilBookmark,\n        cilCalculator,\n        cilCalendar,\n        cilCloudDownload,\n        cilChartPie,\n        cilCheck,\n        cilChevronBottom,\n        cilChevronLeft,\n        cilChevronRight,\n        cilChevronTop,\n        cilCircle,\n        cilCheckCircle,\n        cilCode,\n        cilCommentSquare,\n        cilCreditCard,\n        cilCursor,\n        cilCursorMove,\n        cilDrop,\n        cilDollar,\n        cilEnvelopeClosed,\n        cilEnvelopeLetter,\n        cilEnvelopeOpen,\n        cilEuro,\n        cilGlobeAlt,\n        cilGrid,\n        cilFile,\n        cilFullscreen,\n        cilFullscreenExit,\n        cilGraph,\n        cilHome,\n        cilInbox,\n        cilIndentDecrease,\n        cilIndentIncrease,\n        cilInputPower,\n        cilItalic,\n        cilJustifyCenter,\n        cilJustifyLeft,\n        cilLaptop,\n        cilLayers,\n        cilLightbulb,\n        cilList,\n        cilListNumbered,\n        cilListRich,\n        cilLocationPin,\n        cilLockLocked,\n        cilMagnifyingGlass,\n        cilMap,\n        cilMoon,\n        cilNotes,\n        cilOptions,\n        cilPaperclip,\n        cilPaperPlane,\n        cilPencil,\n        cilPeople,\n        cilPhone,\n        cilPrint,\n        cilPuzzle,\n        cilSave,\n        cilScrubber,\n        cilSettings,\n        cilShare,\n        cilShareAll,\n        cilShareBoxed,\n        cilShieldAlt,\n        cilSpeech,\n        cilSpeedometer,\n        cilSpreadsheet,\n        cilStar,\n        cilSun,\n        cilTags,\n        cilTask,\n        cilTrash,\n        cilUnderline,\n        cilUser,\n        cilUserFemale,\n        cilUserFollow,\n        cilUserUnfollow,\n        cilX,\n        cilXCircle,\n        cilWarning,\n    },\n    {\n        cifUs,\n        cifBr,\n        cifIn,\n        cifFr,\n        cifEs,\n        cifPl,\n    },\n    {\n        cibSkype,\n        cibFacebook,\n        cibTwitter,\n        cibLinkedin,\n        cibFlickr,\n        cibTumblr,\n        cibXing,\n        cibGithub,\n        cibStackoverflow,\n        cibYoutube,\n        cibDribbble,\n        cibInstagram,\n        cibPinterest,\n        cibVk,\n        cibYahoo,\n        cibBehance,\n        cibReddit,\n        cibVimeo,\n        cibCcMastercard,\n        cibCcVisa,\n        cibStripe,\n        cibPaypal,\n        cibGooglePay,\n        cibCcAmex,\n    },\n);\n","import React from \"react\";\nconst Users = React.lazy(() => import('./views/users/Users'));\nconst User = React.lazy(() => import('./views/users/User'));\nconst UserEdit = React.lazy(() => import('./views/users/UserEdit'));\n\nconst Properties = React.lazy(() => import('./views/properties/Properties'));\nconst Property = React.lazy(() => import('./views/properties/Property'));\nconst PropertyEdit = React.lazy(() =>\n    import('./views/properties/PropertyEdit'),\n);\n\nconst PropertyFileUpload = React.lazy(() => import('./views/properties/file-upload'));\n\nconst routes = [\n    { path: '/admin/', exact: true, name: 'Home' },\n    // User Routes\n    { path: '/admin/users', exact: true, name: 'Users', component: Users },\n    {\n        path: '/admin/users/new',\n        exact: true,\n        name: 'New User',\n        component: UserEdit,\n    },\n    {\n        path: '/admin/users/:id',\n        exact: true,\n        name: 'User Details',\n        component: User,\n    },\n    {\n        path: '/admin/edit/user/:id',\n        exact: true,\n        name: 'Edit User',\n        component: UserEdit,\n    },\n\n    {\n        path: '/admin/file-upload',\n        exact: true,\n        name: 'FileUpload',\n        component: PropertyFileUpload,\n    },\n    {\n        path: '/admin/properties',\n        exact: true,\n        name: 'Properties',\n        component: Properties,\n    },\n    {\n        path: '/admin/properties/new',\n        exact: true,\n        name: 'New Property',\n        component: PropertyEdit,\n    },\n    {\n        path: '/admin/properties/:id',\n        exact: true,\n        name: 'Property Details',\n        component: Property,\n    },\n    {\n        path: '/admin/edit/property/:id',\n        exact: true,\n        name: 'Edit Property',\n        component: PropertyEdit,\n    },\n    {\n        path: '/admin/properties/:id',\n        exact: true,\n        name: 'User Details',\n        component: User,\n    },\n];\n\nexport default routes;\n","import React from \"react\";\nimport {CFooter} from '@coreui/react';\n\nconst TheFooter = () => {\n    return <CFooter fixed={false}></CFooter>;\n};\n\nexport default React.memo(TheFooter);\n","import React, {Suspense} from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport {CContainer, CFade} from '@coreui/react';\nimport {Spinner} from 'reactstrap';\n\n// routes config\nimport routes from '../routes';\n\nconst loading = (\n    <div className={'loader'}>\n        <Spinner\n            type={'grow'}\n            color={'primary'}\n            style={{width: '5rem', height: '5rem'}}>\n            {''}\n        </Spinner>\n    </div>\n);\n\nconst TheContent = () => {\n    return (\n        <main className=\"c-main\">\n            <CContainer fluid className={'h-100'}>\n                <Suspense fallback={loading}>\n                    <Switch>\n                        {routes.map((route, idx) => {\n                            return (\n                                route.component && (\n                                    <Route\n                                        key={idx}\n                                        path={route.path}\n                                        exact={route.exact}\n                                        name={route.name}\n                                        render={(props) => (\n                                            <CFade className={'h-100'}>\n                                                <route.component {...props} />\n                                            </CFade>\n                                        )}\n                                    />\n                                )\n                            );\n                        })}\n                        <Redirect from=\"/\" to=\"/admin/users\" />\n                    </Switch>\n                </Suspense>\n            </CContainer>\n        </main>\n    );\n};\n\nexport default React.memo(TheContent);\n","import {\n    CBreadcrumbRouter,\n    CHeader,\n    CHeaderBrand,\n    CHeaderNav,\n    CSubheader,\n    CToggler,\n} from '@coreui/react';\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShowSidebar } from '../../redux/actionCreators/adminActionCreators';\n\n// routes config\nimport routes from '../routes';\n\nimport { TheHeaderDropdown } from './index';\n\nconst TheHeader = () => {\n    const dispatch = useDispatch();\n    const sidebarShow = useSelector((state) => state.admin.sidebarShow);\n\n    const toggleSidebar = () => {\n        const val = [true, 'responsive'].includes(sidebarShow)\n            ? false\n            : 'responsive';\n        dispatch(setShowSidebar(val));\n    };\n\n    const toggleSidebarMobile = () => {\n        const val = [false, 'responsive'].includes(sidebarShow)\n            ? true\n            : 'responsive';\n        dispatch(setShowSidebar(val));\n    };\n\n    return (\n        <CHeader withSubheader>\n            <CToggler\n                inHeader\n                className=\"ml-md-3 d-lg-none\"\n                onClick={toggleSidebarMobile}\n            />\n            <CToggler\n                inHeader\n                className=\"ml-3 d-md-down-none\"\n                onClick={toggleSidebar}\n            />\n            <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\" />\n\n            <CHeaderNav className=\"d-md-down-none mr-auto\" />\n\n            <CHeaderNav className=\"px-3\">\n                <TheHeaderDropdown />\n            </CHeaderNav>\n\n            <CSubheader className=\"px-3 justify-content-between\">\n                <CBreadcrumbRouter\n                    className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\n                    routes={routes}\n                />\n            </CSubheader>\n        </CHeader>\n    );\n};\n\nexport default TheHeader;\n","import CIcon from '@coreui/icons-react';\nimport {\n    CDropdown,\n    CDropdownItem,\n    CDropdownMenu,\n    CDropdownToggle,\n    CImg,\n} from '@coreui/react';\nimport React from \"react\";\n// import {useSelector} from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nconst TheHeaderDropdown = () => {\n\n    return (\n        <CDropdown inNav className=\"c-header-nav-items mx-2\" direction=\"down\">\n            <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n                <div className=\"c-avatar\">\n                    <CImg\n                        src={`/assets/img/default-user.png`}\n                        className=\"c-avatar-img\"\n                        style={{ backgroundColor: \"black\" }}\n                    />\n                </div>\n            </CDropdownToggle>\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n                <CDropdownItem tag={Link} to={'/logout'}>\n                    <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\n                    Logout\n                </CDropdownItem>\n            </CDropdownMenu>\n        </CDropdown>\n    );\n};\n\nexport default TheHeaderDropdown;\n","import CIcon from '@coreui/icons-react';\nimport {\n    CCreateElement,\n    CImg,\n    CSidebar,\n    CSidebarBrand,\n    CSidebarMinimizer,\n    CSidebarNav,\n    CSidebarNavDivider,\n    CSidebarNavDropdown,\n    CSidebarNavItem,\n    CSidebarNavTitle,\n} from '@coreui/react';\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setShowSidebar } from '../../redux/actionCreators/adminActionCreators';\n\n// sidebar nav config\n// import navigation from './_nav';\nconst TheSidebar = () => {\n    const dispatch = useDispatch();\n    const navigation = [\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Data'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Users',\n            to: '/admin/users',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Properties',\n            to: '/admin/properties',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Campaigns'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Email Campaigns',\n            to: '/admin/email-campaigns',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Templates',\n            to: '/admin/templates',\n            icon: 'cil-home',\n        },\n        {\n            _tag: 'CSidebarNavTitle',\n            _children: ['Marketing'],\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Coupons',\n            to: '/admin/coupons',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Flyer',\n            to: '/admin/flyers',\n            icon: 'cil-user',\n        },\n        {\n            _tag: 'CSidebarNavItem',\n            name: 'Promting Events',\n            to: '/admin/events',\n            icon: 'cil-user',\n        },\n    ];\n    const show = useSelector((state) => state.admin.sidebarShow);\n    return (\n        <CSidebar\n            show={show}\n            onShowChange={(val) => dispatch(setShowSidebar(val))}>\n            <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n                <CImg\n                    className=\"c-sidebar-brand-full\"\n                    src={'/assets/img/logo-sm.png'}\n                    height={35}\n                />\n                <CImg\n                    className=\"c-sidebar-brand-minimized\"\n                    src={'/assets/img/icon-white-small.png'}\n                    height={35}\n                />\n            </CSidebarBrand>\n            <CSidebarNav>\n                <CCreateElement\n                    items={navigation}\n                    components={{\n                        CSidebarNavDivider,\n                        CSidebarNavDropdown,\n                        CSidebarNavItem,\n                        CSidebarNavTitle,\n                    }}\n                />\n            </CSidebarNav>\n            <CSidebarMinimizer className=\"c-d-md-down-none\" />\n        </CSidebar>\n    );\n};\n\nexport default React.memo(TheSidebar);\n","import axios from \"axios\";\n\nexport default axios.create({\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n\n// export const fetchUser = (id) => {\n//   return (dispatch, getState) => {\n//       const token = getState().auth.jwt;\n\n//       return dispatch({\n//           type: ADMIN_FETCH_USER,\n//           payload: fetch(`${SERVICE_URL}/users/${id}?tenant=${PARTNER_TOKEN}`, {\n//               headers: {\n//                   Accept: 'application/json',\n//                   'Content-Type': 'application/json',\n//                   Authorization: `Bearer ${token}`,\n//               },\n//               method: 'GET',\n//           })\n//               .then((r) => r.json())\n//               .then((responseData) => {\n//                   if (responseData.statusCode >= 300) {\n//                       return Promise.reject(responseData);\n//                   } else {\n//                       return responseData;\n//                   }\n//               }),\n//       });\n//   };\n// };\n","import http from \"./http-common\";\nimport {SERVICE_URL} from '../../../constants';\n// const { listFiles,uploadFiles} = require('../../../redux/actionCreators/adminActionCreators');\nconst upload = (file,token, onUploadProgress) => {\n  let formData = new FormData();\n\n  formData.append(\"files\", file);\n\n  return http.post(SERVICE_URL+\"/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    },\n    onUploadProgress,\n  });\n};\n\nconst getFiles = (token) => {\n  return http.get(\n    SERVICE_URL+\"/upload/files?_limit=10&_start=0&_sort=updatedAt:DESC\");\n  // return listFiles();\n};\n\nconst FileUploadService = {\n  upload,\n  getFiles,\n};\n\nexport default FileUploadService; \n","import {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCol,\n    CForm,\n    CFormGroup,\n    CInput,\n    CInvalidFeedback,\n    CLabel,\n    CRow,\n    CSpinner,\n    CTabs,\n    CTabContent,\n    CTabPane,\n    CNav,\n    CNavItem,\n    CNavLink,\n} from '@coreui/react';\nimport { useFormik } from 'formik';\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport {\n    fetchProperty,\n    saveProperty,\n} from '../../../redux/actionCreators/adminActionCreators';\nimport UploadService from \"../../file-upload/services/FileUploadService\";\n\nimport { useSelector } from 'react-redux';\nimport Header from '../../../site/pages/newHome/Header';\n\nimport { TheContent, TheSidebar, TheFooter, TheHeader } from '../../containers/index';\nimport { CContainer, CFade } from '@coreui/react';\nimport '../../../styles/admin/style.scss';\nimport { icons } from \"../../assets/icons\"\n\nconst PropertyEdit = ({ match }) => {\n\n\n    const [selectedFormFiles, setSelectedFormFiles] = useState(undefined);\n    const [selectedPlanFiles, setSelectedPlanFiles] = useState(undefined);\n    const [currentProperty, setCurrentProperty] = useState(undefined);\n\n    const [activeTab, setActiveTab] = useState(0);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user = useSelector((state) => state.auth.me);\n    const token = useSelector((state) => state.auth.jwt);\n\n\n    const formik = useFormik({\n        initialValues: {\n            id: match.params.id,\n            address: '',\n            area: '',\n            serial_no: '',\n            application_form_url: '',\n            plans_url: '',\n            acreage: '',\n        },\n        // validationSchema: propertySchema,\n        onSubmit: async (values, { setSubmitting }) => {\n            setSubmitting(true);\n            let application_form_url = '';\n            let plans_url = '';\n            if (match.params.id) {\n                //edit mode\n                application_form_url = currentProperty.application_form_url;\n                plans_url = currentProperty.plans_url;\n            }\n            if (selectedFormFiles === undefined) {\n                // toastr.error('请上传地址信息文件');\n                // setSubmitting(false);\n                // return;\n            } else {\n                //do submit\n                const resp = await UploadService.upload(selectedFormFiles[0], token, null);\n                application_form_url = resp.data[0].url;\n            }\n            if (selectedPlanFiles === undefined) {\n\n            } else {\n                const resp = await UploadService.upload(selectedPlanFiles[0], token, null);\n                plans_url = resp.data[0].url;\n            }\n\n            if (values.settlementType === 'lowRise') {\n                values.unitNo = '';\n            }\n\n            const property = {\n                ...values,\n                application_form_url,\n                plans_url\n            };\n            console.log('save property=' + JSON.stringify(property));\n\n            dispatch(saveProperty(property)).then(() => {\n                if (match.params.id)\n                    history.push(`/admin/properties/${match.params.id}`);\n                else history.push('/admin/properties');\n            });\n        },\n    });\n\n    const {\n        handleChange,\n        handleSubmit,\n        handleBlur,\n        errors,\n        touched,\n        values,\n        isValid,\n        isSubmitting,\n        resetForm,\n        setValues,\n        setFieldValue,\n        setFieldTouched,\n    } = formik;\n\n\n\n\n    useEffect(() => {\n        if (match.params.id)\n            dispatch(fetchProperty(match.params.id)).then(\n                ({ value: property }) => {\n                    setCurrentProperty(property);\n\n                    setValues({\n                        ...property,\n                        ...property.location,\n                        // users: property.users.map((u) => u.id),\n                    });\n                },\n            );\n    }, [dispatch, match.params.id, setValues]);\n\n\n\n\n\n\n\n    const selectApplicationFormFiles = (event) => {\n        setSelectedFormFiles(event.target.files);\n        console.log('file selected..' + JSON.stringify(event.target.files));\n        // setProgressInfos({ val: [] });\n    };\n    const selectPlanFiles = (event) => {\n        setSelectedPlanFiles(event.target.files);\n        console.log('file selected..' + JSON.stringify(event.target.files));\n        // setProgressInfos({ val: [] });\n    };\n    return (\n        <div className=\"c-app c-default-layout\">\n            <TheSidebar />\n            <div className=\"c-wrapper\">\n\n                <TheHeader />\n                <div className=\"c-body\">\n                    <main className=\"c-main\">\n                        <CContainer fluid className={'h-100'}>\n                            <div className=\"content\">\n\n                                <CTabs activeTab=\"home\"\n                                    onActiveTabChange={(idx) => setActiveTab(idx)}>\n                                    <CNav variant=\"tabs\">\n                                        <CNavItem>\n                                            <CNavLink data-tab=\"home\">\n                                                {match.params.id\n                                                    ? `Record id: ${match.params.id}`\n                                                    : 'New Property'}\n                                            </CNavLink>\n                                        </CNavItem>\n                                    </CNav>\n                                    <CTabContent>\n                                        <CTabPane data-tab=\"home\"  >\n                                            <CRow active={activeTab === 0}>\n                                                <CCol md={10}>\n                                                    <CForm onSubmit={handleSubmit}>\n                                                        <CCard>\n                                                            {/* <CCardHeader>\n                            {match.params.id\n                                ? `Record id: ${match.params.id}`\n                                : 'New Property'}\n                        </CCardHeader> */}\n                                                            <CCardBody>\n\n                                                                <CCol xs=\"12\">\n                                                                    <CFormGroup>\n                                                                        <CLabel htmlFor=\"area\">\n                                                                            地区\n                                                                        </CLabel>\n                                                                        <CInput\n                                                                            id=\"area\"\n                                                                            name=\"area\"\n                                                                            onChange={handleChange}\n                                                                            onBlur={handleBlur}\n                                                                            value={values.area}\n                                                                            invalid={\n                                                                                touched.area &&\n                                                                                errors.area\n                                                                            }\n                                                                        />\n                                                                        <CInvalidFeedback>\n                                                                            {errors.area}\n                                                                        </CInvalidFeedback>\n                                                                    </CFormGroup>\n                                                                </CCol>\n                                                                <CCol xs=\"12\">\n                                                                    <CFormGroup>\n                                                                        <CLabel htmlFor=\"serial_no\">\n                                                                            编号\n                                                                        </CLabel>\n                                                                        <CInput\n                                                                            id=\"serial_no\"\n                                                                            name=\"serial_no\"\n                                                                            onChange={handleChange}\n                                                                            onBlur={handleBlur}\n                                                                            value={values.serial_no}\n                                                                            invalid={\n                                                                                touched.serial_no &&\n                                                                                errors.serial_no\n                                                                            }\n                                                                        />\n                                                                        <CInvalidFeedback>\n                                                                            {errors.serial_no}\n                                                                        </CInvalidFeedback>\n                                                                    </CFormGroup>\n                                                                </CCol>\n                                                                <CCol xs=\"12\">\n                                                                    <CFormGroup>\n                                                                        <CLabel htmlFor=\"address\">\n                                                                            地址\n                                                                        </CLabel>\n                                                                        <CInput\n                                                                            id=\"address\"\n                                                                            name=\"address\"\n                                                                            onChange={handleChange}\n                                                                            onBlur={handleBlur}\n                                                                            value={values.address}\n                                                                            invalid={touched.address && errors.address}\n                                                                        />\n                                                                        <CInvalidFeedback>\n                                                                            {errors.address}\n                                                                        </CInvalidFeedback>\n                                                                    </CFormGroup>\n                                                                </CCol>\n                                                                <CCol xs=\"12\">\n                                                                    <CFormGroup>\n                                                                        <CLabel htmlFor=\"locality\">地址信息 &nbsp;&nbsp;</CLabel>\n                                                                        <CLabel htmlFor='fileName'>{values.application_form_url} &nbsp;&nbsp;</CLabel>\n                                                                        <br />\n                                                                        <input type=\"file\" onChange={selectApplicationFormFiles} />\n                                                                    </CFormGroup>\n                                                                </CCol>\n                                                                <CCol xs=\"12\">\n                                                                    <CFormGroup>\n                                                                        <CLabel htmlFor=\"locality\">地址图纸&nbsp;&nbsp;</CLabel>\n                                                                        <CLabel htmlFor='fileName'>{values.plans_url} &nbsp;&nbsp;</CLabel>\n                                                                        <br />\n                                                                        <input type=\"file\" onChange={selectPlanFiles} />\n                                                                    </CFormGroup>\n                                                                </CCol>\n                                                                <CCol xs=\"12\">\n                                                                    <CFormGroup>\n                                                                        <CLabel htmlFor=\"acreage\">\n                                                                            面积\n                                                                        </CLabel>\n                                                                        <CInput\n                                                                            id=\"acreage\"\n                                                                            name=\"acreage\"\n                                                                            onChange={handleChange}\n                                                                            onBlur={handleBlur}\n                                                                            value={values.acreage}\n                                                                            invalid={touched.acreage && errors.acreage}\n                                                                        />\n                                                                        <CInvalidFeedback>\n                                                                            {errors.acreage}\n                                                                        </CInvalidFeedback>\n                                                                    </CFormGroup>\n                                                                </CCol>\n                                                            </CCardBody>\n                                                            <CCardFooter className=\"text-right\">\n                                                                <CButton\n                                                                    type=\"submit\"\n                                                                    size=\"sm\"\n                                                                    color=\"primary\">\n                                                                    {isSubmitting ? (\n                                                                        <CSpinner size=\"sm\" />\n                                                                    ) : (\n                                                                        'Submit'\n                                                                    )}\n                                                                </CButton>{' '}\n                                                                <CButton\n                                                                    type=\"reset\"\n                                                                    size=\"sm\"\n                                                                    color=\"danger\"\n                                                                    onClick={() => resetForm()}>\n                                                                    Reset\n                                                                </CButton>\n                                                            </CCardFooter>\n                                                        </CCard>\n                                                    </CForm>\n                                                </CCol>\n                                            </CRow>\n                                        </CTabPane>\n\n\n\n                                    </CTabContent>\n                                </CTabs>\n                            </div>\n                        </CContainer>\n                    </main>\n                </div>\n                <TheFooter />\n            </div>\n        </div>\n\n    );\n};\n\nexport default PropertyEdit;\n"],"names":["icons","Object","assign","cilAlignCenter","cilAlignLeft","cilAlignRight","cilApplicationsSettings","cilArrowRight","cilArrowTop","cilAsterisk","cilBan","cilBasket","cilBell","cilBold","cilBookmark","cilCalculator","cilCalendar","cilCloudDownload","cilChartPie","cilCheck","cilChevronBottom","cilChevronLeft","cilChevronRight","cilChevronTop","cilCircle","cilCheckCircle","cilCode","cilCommentSquare","cilCreditCard","cilCursor","cilCursorMove","cilDrop","cilDollar","cilEnvelopeClosed","cilEnvelopeLetter","cilEnvelopeOpen","cilEuro","cilGlobeAlt","cilGrid","cilFile","cilFullscreen","cilFullscreenExit","cilGraph","cilHome","cilInbox","cilIndentDecrease","cilIndentIncrease","cilInputPower","cilItalic","cilJustifyCenter","cilJustifyLeft","cilLaptop","cilLayers","cilLightbulb","cilList","cilListNumbered","cilListRich","cilLocationPin","cilLockLocked","cilMagnifyingGlass","cilMap","cilMoon","cilNotes","cilOptions","cilPaperclip","cilPaperPlane","cilPencil","cilPeople","cilPhone","cilPrint","cilPuzzle","cilSave","cilScrubber","cilSettings","cilShare","cilShareAll","cilShareBoxed","cilShieldAlt","cilSpeech","cilSpeedometer","cilSpreadsheet","cilStar","cilSun","cilTags","cilTask","cilTrash","cilUnderline","cilUser","cilUserFemale","cilUserFollow","cilUserUnfollow","cilX","cilXCircle","cilWarning","cifUs","cifBr","cifIn","cifFr","cifEs","cifPl","cibSkype","cibFacebook","cibTwitter","cibLinkedin","cibFlickr","cibTumblr","cibXing","cibGithub","cibStackoverflow","cibYoutube","cibDribbble","cibInstagram","cibPinterest","cibVk","cibYahoo","cibBehance","cibReddit","cibVimeo","cibCcMastercard","cibCcVisa","cibStripe","cibPaypal","cibGooglePay","cibCcAmex","Users","React","User","UserEdit","Properties","Property","PropertyEdit","path","exact","name","component","TheFooter","Spinner","fixed","dispatch","useDispatch","sidebarShow","useSelector","state","admin","withSubheader","inHeader","className","onClick","val","includes","setShowSidebar","to","routes","inNav","direction","caret","src","style","backgroundColor","placement","tag","Link","TheSidebar","show","onShowChange","height","items","_tag","_children","icon","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","axios","headers","upload","file","token","onUploadProgress","formData","FormData","append","http","SERVICE_URL","Authorization","getFiles","match","useState","undefined","selectedFormFiles","setSelectedFormFiles","selectedPlanFiles","setSelectedPlanFiles","currentProperty","setCurrentProperty","activeTab","setActiveTab","history","useHistory","auth","me","jwt","formik","useFormik","initialValues","id","params","address","area","serial_no","application_form_url","plans_url","acreage","onSubmit","values","setSubmitting","UploadService","resp","data","url","settlementType","unitNo","property","console","log","JSON","stringify","saveProperty","then","push","handleChange","handleSubmit","handleBlur","errors","touched","isSubmitting","isValid","resetForm","setValues","setFieldValue","setFieldTouched","useEffect","fetchProperty","value","location","fluid","onActiveTabChange","idx","variant","active","md","xs","htmlFor","onChange","onBlur","invalid","type","event","target","files","size","color"],"sourceRoot":""}